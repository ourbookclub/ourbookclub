{"version":3,"sources":["constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/Home.js","componenets/NavBar.js","componenets/PasswordChange.js","componenets/UserProfile.js","componenets/CreateGroup.js","componenets/GroupPage/CurrentBook.js","componenets/GroupPage/AddBook.js","componenets/GroupPage/Discussion.js","componenets/GroupPage/ShowAllPosts.js","componenets/GroupPage/UpdateBenchmark.js","componenets/UserSearch.js","componenets/GroupPage/UserList.js","componenets/GroupPage/GroupNav.js","componenets/GroupPage/index.js","componenets/GroupList.js","App.js","registerServiceWorker.js","index.js"],"names":["home","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","withAuthorization","condition","WithAuthorization","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","call","onSubmit","event","state","then","setState","objectSpread","Routes","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","PasswordResetForm","labelStyle","marginBottom","SignInFormBase","handleChange","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$state2","htmlFor","PasswordReset_PasswordResetLink","SignInForm","SignInLink","SignInPage","SignUp_SignUpLink","username","confirmPassword","firstname","lastname","redirectTo","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","_ref","checkValidInput","axios","post","sent","status","abrupt","console","log","_x","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","passwordOne","passwordTwo","map","i","id","SignUpForm","SignUpLink","SignUpPage","SignIn_SignInLink","onClick","Home","alt","src","HomeLink","NavBar","Home_HomeLink","componenets_SignOutButton","initalState","passwordConfirm","PasswordChangeForm","initialUpdateState","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","checkCurrentUser","userIDFromURL","userID","updatedProfile","getUserData","params","dbResponse","get","concat","data","local","prevProps","react","UserProfile_UpdateInformationForm","PasswordChange","UpdateInformationForm","_this2","_ref2","_callee2","fieldSubmitted","request","_context2","put","_x2","_this3","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","groupName","groupDescription","CreateGroup","currentUserID","_id","title","image","authors","CurrentBook","getCurrentBook","bookID","currentBook","currentBenchmark","totalBenchmark","AddBookPage","bookSearch","searchableBook","trim","split","join","bookArray","book","AddBook_SingleBook","isAdmin","groupID","updatePage","SingleBook","addBookToGroup","chosenBook","_this3$props","_this$props$book","description","pageCount","publishedDate","text","AddPost","_this$props","userPost","ShowPosts","getAllPosts","postArray","PrevProps","Response","Jumbotron_default","fluid","Container_default","user","date","nextBenchmark","UpdateBenchmark","handleCurrentSubmit","t0","handleTotalSubmit","totalCount","_this$props2","currentIsInvalid","totalIsInvalid","UserSearch","userSearch","searchSelect","userArray","UserSearch_SingleUser","SingleUser","addUserToGroup","_this$props$user","componentDidMount","UserList","userlist","UserList_SingleUser","GroupNav","pastBook","previousBenchmark","showMainPage","updateBook","addUser","GroupPage","getGroupData","checkAdmin","sessionStorage","getItem","filter","showPage","groupIDFromURL","GroupPage_GroupNav","GroupPage_GroupInfo","GroupPage_UserList","GroupPage_CurrentBook","Discussion","ShowAllPosts","AddBook","GroupPage_UpdateBenchmark","componenets_UserSearch","GroupInfo","SingleGroup","GroupList","grouplist","GroupList_SingleGroup","App","isSignedIn","setItem","clear","BrowserRouter","componenets_NavBar","componenets_GroupList","Route","exact","path","render","componenets_Home","SignIn","SignUp","PasswordReset","componenets_UserProfile","componenets_CreateGroup","componenets_GroupPage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","context","Provider","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7d813908.chunk.js","sourcesContent":["export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordReset = '/passwordreset';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    }\n                }\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { withAuthorization } from './Session';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\n\nconst PasswordResetPage = () => (\n    <div>\n        {/* TODO This totally doesn't work */}\n        <h3>Password Reset</h3>\n        <br />\n        <PasswordResetForm />\n    </div>\n);\n\nconst initialState = {\n    email: '',\n    error: null,\n};\n\nclass PasswordResetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initialState };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form className='form-horizontal'\n                onSubmit={this.onSubmit}>\n                {error && <p>{error.message}</p>}\n                <div className='form-group'>\n                    <input\n                        className='form-input'\n                        style={inputStyle}\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type='text'\n                        placeholder='Email Address'\n                    />\n                </div>\n                <div className=\"form-group \">\n                    <div className=\"col-7\"></div>\n                    <button\n                        className=\"btn btn-primary col-1 col-mr-auto\"\n                        disabled={isInvalid}\n                        type=\"submit\">Reset Password</button>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst PasswordResetLink = () => (\n    <p>\n        <Link to={Routes.passwordReset}><button className='btn btn-success'>Forgot Password?</button></Link>\n    </p>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PasswordResetPage);\n\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\n\nexport { PasswordResetForm, PasswordResetLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst SignInPage = () => (\n    < div >\n        <h3>SignIn</h3>\n        <SignInForm />\n        <SignUpLink />\n    </div >\n);\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(async () => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n    }\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='email'>Email:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='email'\n                                placeholder='email'\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='password'>Password: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='password'\n                                type='password'\n                                name='password'\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Login</button>\n                    </div>\n                </form>\n                <PasswordResetLink />\n            </div>\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p>\n        Already have an account? <Link to={Routes.signin}><button className='btn btn-success'>Sign In</button></Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from './Firebase';\nimport { compose } from 'recompose';\nimport axios from 'axios';\n\nimport * as Routes from '../constants/routes';\nimport { SignInLink } from './SignIn';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n}\n\nconst SignUpPage = () => (\n    <div>\n        <h3>SignUp</h3>\n        <SignUpForm />\n        <SignInLink />\n    </div>\n);\n\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password, firstname, lastname } = this.state;\n\n            const dbResponse = await axios.post(`/api/newuser`, { username, email, firstname, lastname });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...initialState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        const { username, email, passwordOne, passwordTwo, firstname, lastname, error, validMessage } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            firstname === '' ||\n            lastname === '' ||\n            username.length < 3 ||\n            passwordOne < 6;\n\n        return (\n            <div className=\"SignupForm\">\n                <br />\n                {/* If there's an error with signup then display the error */}\n                {error && <p>{error.message}</p>}\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"email\" style={labelStyle}>Email </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"ex. janedoe@email.com\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"password\" style={labelStyle}>Password<br />(Must be at least 6 characters with no spaces) </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"confirmPassword\" style={labelStyle}>Confirm Password </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Confirm Password\"\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"username\" style={labelStyle}>Username<br />(Must be at least 3 characters, no more than 16, no special characters & no spaces)</label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. JaneDoe14\"\n                                type=\"username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"firstname\" style={labelStyle}>First Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Jane\"\n                                type=\"firstname\"\n                                name=\"firstname\"\n                                value={this.state.firstname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"lastname\" style={labelStyle}>Last Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Doe\"\n                                type=\"lastname\"\n                                name=\"lastname\"\n                                value={this.state.lastname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            disabled={isInvalid}\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            type=\"submit\"\n                        >Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    };\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={Routes.signup}><button className=\"btn btn-success\">Sign Up</button></Link>\n    </p>\n);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\n\nimport { withFirebase } from './Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button className=\"btn btn-link\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\n\nclass Home extends Component {\n\n    render() {\n        const imageStyle = {\n            width: 200\n        }\n        return (\n            <div>\n                <img style={imageStyle} alt='Earthworm Jim and his book' src='../img/1550080499329.png' />\n            </div>\n        )\n    }\n}\n\nconst HomeLink = () => (\n    <Link to={Routes.home}>\n        <button className='btn btn-link'>Home</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);\nexport { HomeLink }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\nimport { HomeLink } from './Home';\n\n\nconst NavBar = (props) => {\n    return (\n        < div >\n            <header className=\"navbar App-header\" id=\"nav-container\">\n                <div className=\"col-4\" >\n                    {props.authUser ? (\n                        <section className=\"navbar-section\">\n                            <HomeLink />\n                            <Link to={Routes.createGroup} className=\"btn btn-link\">\n                                Create a Club\n                            </Link>\n                            <SignOutButton />\n                        </section>\n                    ) : (\n                            <section className=\"navbar-section\">\n                                <Link to={Routes.signin} className=\"btn btn-link\">\n                                    <span className=\"text-secondary\">Sign In</span>\n                                </Link>\n                                <Link to={Routes.signup} className=\"btn btn-link\">\n                                    <span className=\"text-secondary\">sign up</span>\n                                </Link>\n                            </section>\n                        )\n                    }\n                </div>\n                <div className=\"col-4 col-mr-auto\">\n                    <div id=\"top-filler\"></div>\n                    <h1 className=\"App-title\">Bookworm</h1>\n                </div>\n            </header>\n        </div >\n\n    )\n}\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from './Session';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">New Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                        />\n                    </div>\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"passwordConfirm\">Confirm Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"passwordConfirm\"\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                        />\n                    </div>\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            disabled={isInvalid}\n                            type=\"submit\">Update Password</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport PasswordChangeForm from './PasswordChange';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '25%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div>\n                <h1>{this.state.dbUsername}'s Profile</h1>\n                <div>Username: {dbUsername}</div>\n                <div>Email: {dbEmail}</div>\n                <div>Firstname: {dbFirstname}</div>\n                <div>Lastname: {dbLastname}</div>\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        let invalidInputs = 0;\n\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes` });\n            return false\n        }\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div className='form-group'>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <label style={labelStyle}>Username:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>Update Username</button>\n\n                <br />\n\n                <label style={labelStyle}>Email:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>Update Email</button>\n\n                <br />\n\n                <label style={labelStyle}>First Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>Update Firstname</button>\n\n                <br />\n\n                <label style={labelStyle}>Last Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>Update Lastname</button>\n                <br />\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    groupName: '',\n    groupDescription: '',\n    error: null\n};\n\nclass CreateGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const currentUserID = this.props.userID;\n\n        const { groupName, groupDescription } = this.state\n\n        const dbResponse = await axios.post('/api/creategroup', { currentUserID, groupName, groupDescription });\n        this.props.history.push(`/group/${dbResponse.data._id}`)\n\n    }\n\n    render() {\n        const { groupName, groupDescription, error } = this.state;\n\n        const isInvalid = groupName === '' || groupDescription === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupName'>Group Name:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='groupName'\n                                placeholder='Group Name'\n                                value={this.state.groupName}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupDescription'>Group Descripton: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='Description'\n                                name='groupDescription'\n                                value={this.state.groupDescription}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Create New Group</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\nconst CreateGroupLink = () => (\n    <Link to={Routes.createGroup}>\n        <button className='btn btn-link'>Create Group</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(CreateGroup);\n\nexport { CreateGroupLink };","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst initialState = {\n    title: '',\n    image: '',\n    authors: [],\n    error: null\n}\n\nclass CurrentBook extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState }\n    };\n\n    componentDidMount() {\n        const bookID = this.props.currentBook;\n        if (bookID) {\n            this.getCurrentBook(bookID);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentBook !== prevProps.currentBook) {\n            const bookID = this.props.currentBook;\n            this.getCurrentBook(bookID)\n        }\n    }\n\n    getCurrentBook = async (bookID) => {\n        const dbResponse = await axios.get(`/api/getbookdata/${bookID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                title: dbResponse.data.title,\n                image: dbResponse.data.image,\n                authors: dbResponse.data.authors\n            })\n        } else {\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    }\n\n    render() {\n        return (\n            <div className='currentBook'>\n                <div>Title: {this.state.title}</div>\n                <img src={this.state.image} alt={`${this.state.title}`} />\n                <div>Current Benchmark: {this.props.currentBenchmark}</div>\n                <div>Total Benchmark: {this.props.totalBenchmark}</div>\n                <br />\n            </div>\n\n        );\n    };\n};\n\nexport default CurrentBook;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nclass AddBookPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookSearch: '',\n            error: null,\n            bookArray: []\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { bookSearch } = this.state;\n\n        //This changes the book the user enters into a searchable term by the browser\n        const searchableBook = bookSearch.trim().split(' ').join('+');\n        console.log(searchableBook);\n        const dbResponse = await axios.get(`/api/searchbook/${searchableBook}`);\n\n        if (dbResponse.status === 200) {\n            //returns an array of 1 - 20 books and maps over them\n            this.setState({ bookArray: dbResponse.data });\n\n        } else {\n            this.setState({ error: dbResponse.data.error })\n        }\n        //TODO Send this to another component to then map over the \n    }\n\n    render() {\n        const { bookSearch, error, bookArray } = this.state;\n        const isInvalid = bookSearch === '';\n\n        return (\n\n            <div className='bookSearch'>\n                {error && <p>{error}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='bookSearch'>Book to Search:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='bookSearch'\n                                placeholder='Enter a Book to Search'\n                                value={this.state.bookSearch}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group \">\n                            <div className=\"col-7\"></div>\n                            <button\n                                disabled={isInvalid}\n                                className=\"btn btn-primary col-1 col-mr-auto\"\n                                type=\"submit\"\n                            >Search Book</button>\n                        </div>\n                    </div>\n                </form>\n                {bookArray && bookArray.map((book, i) => <SingleBook book={book} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleBook extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    addBookToGroup = async (event) => {\n        const chosenBook = { ...this.props.book };\n        const { groupID, isAdmin } = this.props;\n\n        const dbResponse = await axios.post(`/api/addbook`, { groupID, isAdmin, chosenBook });\n        if (dbResponse.status === 200) {\n            this.props.updatePage('main');\n        }\n    }\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { title, authors, description, image, pageCount, publishedDate } = this.props.book\n        return (\n            <div className=\"bookCard\">\n                <div>{title}</div>\n                <div>{authors[0]}</div>\n                <div>{description}</div>\n                <img src={image} alt={`${title}`} />\n                <div>{pageCount}</div>\n                <div>{publishedDate}</div>\n                <button className=\"btn btn-primary col-1 col-mr-auto\" onClick={this.addBookToGroup}>Add Book To Group</button>\n            </div>\n        )\n    }\n}\n\nexport default AddBookPage;","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: `50%`,\n    height: `40px`\n}\nconst labelStyle = {\n    marginBottom: `0px`\n}\n\nconst initialState = {\n    text: '',\n    error: null\n};\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { userID, groupID } = this.props\n\n        const userPost = { text: this.state.text }\n\n        const dbResponse = await axios.post(`/api/newpost`, { userID, groupID, userPost });\n        this.props.history.push(`/group/${dbResponse.data._id}`)\n        this.props.updatePage(`main`)\n    }\n\n    render() {\n        const { text, error } = this.state;\n\n        const isInvalid = text === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='text'>Post:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='text'\n                                placeholder='Write your Post'\n                                value={this.state.text}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Submit Post</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPost);\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../../constants/routes';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n\n\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\n\n\nclass ShowPosts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: '',\n            error: null,\n            postArray: []\n        }\n    };\n\n    //In both did update and did mount based on if the user goes to another page within the group or loads it\n    componentDidMount() {\n        this.getAllPosts(this.props.groupID)\n    }\n\n    componentDidUpdate(PrevProps) {\n        if (this.props.groupID !== PrevProps.groupID) {\n            this.getAllPosts(this.props.groupID)\n        }\n    }\n\n    getAllPosts = async (groupID) => {\n\n        const dbResponse = await axios.get(`/api/getallgrouppost/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            //returns an array of 1 - 20 books and maps over them\n            this.setState({ postArray: dbResponse.data });\n        } else {\n            this.setState({ error: dbResponse.data.error })\n        }\n    }\n\n\n\n\n    render() {\n        const { postArray } = this.state;\n        return (\n            <div>\n                <h1>Posts</h1>\n                {\n                    postArray.map((Response, i) => (\n                        <span key={i}>\n                            <Jumbotron fluid>\n                                <Container>\n                                    <strong>User:</strong> {Response.user}\n                                    <br />\n                                    <strong>Date: </strong> {Response.date}\n                                    <p>\n                                        <strong>Post:</strong> {Response.text}\n                                    </p>\n                                </Container>\n                            </Jumbotron>;\n                        </span>\n\n                    ))\n                }\n\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(ShowPosts);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    nextBenchmark: '',\n    totalBenchmark: '',\n    error: null\n};\n\nclass UpdateBenchmark extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleCurrentSubmit = async event => {\n        event.preventDefault();\n\n        const nextBenchmark = +this.state.nextBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatebenchmark`, { nextBenchmark, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } })\n        }\n    }\n\n    handleTotalSubmit = async event => {\n        event.preventDefault();\n\n        const totalCount = +this.state.totalBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } });\n        }\n    }\n\n    render() {\n        const { nextBenchmark, totalBenchmark, error } = this.state;\n\n        const currentIsInvalid = nextBenchmark === '' || nextBenchmark < 0;\n        const totalIsInvalid = totalBenchmark === '' || totalBenchmark < 0;\n\n        return (\n            <div>\n                <br />\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleCurrentSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='nextBenchmark'>Next Goal for Group:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='nextBenchmark'\n                                placeholder='What is the next goal for the group?'\n                                value={this.state.nextBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={currentIsInvalid}\n                            type='submit'>Set New Goal</button>\n                    </div>\n                </form>\n\n                <br />\n\n                <form className='form-horizontal' onSubmit={this.handleTotalSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='totalBenchmark'>Update Total Benchmarks / Chapters:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='totalBenchmark'\n                                placeholder='What is the total benchmarks or chapters of this book?'\n                                value={this.state.totalBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={totalIsInvalid}\n                            type='submit'>Update Total</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpdateBenchmark);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nclass UserSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userSearch: '',\n            error: null,\n            userArray: [],\n            searchSelect: ''\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { userSearch, searchSelect } = this.state;\n\n        const dbResponse = await axios.get(`/api/usersearch/${userSearch}/${searchSelect}`);\n\n        this.setState({ userArray: dbResponse.data });\n    }\n\n    render() {\n        const { userSearch, error, userArray, searchSelect } = this.state;\n        const isInvalid = userSearch === '' || searchSelect === '';\n\n        return (\n\n            <div className='userSearch'>\n                {error && <p>{error}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle}>Search By:</label>\n                        </div>\n                        <select name='searchSelect' value={this.state.searchSelect} onChange={this.handleChange}>\n                            <option value=''> </option>\n                            <option value='email'>Email</option>\n                            <option value='username'>Username</option>\n                        </select>\n                    </div>\n\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='userSearch'>Search Users:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='userSearch'\n                                placeholder='Search User'\n                                value={this.state.userSearch}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <div className='col-7'></div>\n                            <button\n                                disabled={isInvalid}\n                                className='btn btn-primary col-1 col-mr-auto'\n                                type='submit'\n                            >Search User</button>\n                        </div>\n                    </div>\n                </form>\n                {userArray && userArray.map((user, i) => <SingleUser user={user} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    addUserToGroup = async (event) => {\n        const { isAdmin, groupID } = this.props;\n        const { userID } = this.props.user;\n\n        const dbResponse = await axios.put(`/api/addusertogroup`, { isAdmin, groupID, userID });\n\n        if (dbResponse.status === 200) {\n            this.props.updatePage(`main`);\n        };\n    };\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { isAdmin } = this.props;\n        const { email, username } = this.props.user;\n\n        return (\n            <div className='userCard'>\n                <div>Email: {email}</div>\n                <div>Username: {username}</div>\n\n                {isAdmin && <button className='btn btn-primary col-1 col-mr-auto' onClick={this.addUserToGroup}>Add User To Group</button>}\n            </div>\n        )\n    }\n}\n\nexport default UserSearch;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst UserList = (props) => {\n    return (\n        <Fragment>\n            <h3>Userlist:</h3>\n            <div>\n                {props.userlist.map((user, i) => <Link to={`/user/${user._id}`} key={i}><SingleUser userID={user._id} key={user._id} /></Link>)}\n            </div>\n            <br />\n        </Fragment>\n    )\n}\n\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null\n        }\n    }\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.state.username}</div>\n        );\n    };\n};\n\n\n\nexport default UserList;","import React from 'react';\n\nconst GroupNav = (props) => {\n    return (\n        <div>\n            <button className='btn btn-success' onClick={() => props.updatePage('main')}>Show Club Page</button>\n            <button className='btn btn-success' onClick={() => props.updatePage('updateBook')}>Update Book</button>\n            <button className='btn btn-success' onClick={() => props.updatePage('addUser')}>Add User</button>\n        </div>\n    )\n}\n\nexport default GroupNav;","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport CurrentBook from './CurrentBook';\nimport AddBook from './AddBook';\nimport AddPost from './Discussion';\nimport ShowAllPosts from './ShowAllPosts';\nimport UpdateBenchmark from './UpdateBenchmark';\nimport UserSearch from '../UserSearch';\nimport UserList from './UserList';\nimport GroupNav from './GroupNav';\n\n//Initializes all the data we need for the group as well as what should display on the app\nconst initialState = {\n    groupID: 0,\n    groupName: '',\n    groupDescription: '',\n    userlist: [],\n    currentBook: '',\n    pastBook: [],\n    currentBenchmark: 0,\n    previousBenchmark: [],\n    totalBenchmark: 0,\n    isAdmin: false,\n    error: null,\n    showMainPage: true,\n    updateBook: false,\n    addUser: false\n};\n\n\nclass GroupPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    };\n\n    componentDidMount() {\n        const groupIDFromURL = this.props.match.params.groupID;\n        this.getGroupData(groupIDFromURL);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.groupID !== prevProps.match.params.groupID) {\n            const groupID = this.props.match.params.groupID;\n            this.getGroupData(groupID);\n        };\n    };\n\n    getGroupData = async (groupID) => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                groupID: dbResponse.data._id,\n                groupName: dbResponse.data.name,\n                groupDescription: dbResponse.data.description,\n                userlist: dbResponse.data.userlist,\n                currentBook: dbResponse.data.currentBook,\n                pastBook: dbResponse.data.pastBook,\n                currentBenchmark: dbResponse.data.currentBenchmark,\n                previousBenchmark: dbResponse.data.previousBenchmark,\n                totalBenchmark: dbResponse.data.totalBenchmark,\n            }, () => this.checkAdmin()); //Want check admin to only run after the state is set\n        } else {\n            //TODO Check Error message\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    };\n\n    checkAdmin = () => {\n        const { userlist } = this.state;\n        const currentUserID = sessionStorage.getItem('userID');\n\n        const currentUser = userlist.filter(user => user._id === currentUserID);\n        if (currentUser[0].isAdmin) {\n            this.setState({\n                isAdmin: true\n            });\n        };\n    };\n\n    //Toggles the page based on what the user chooses to see\n    updatePage = (showPage) => {\n        switch (showPage) {\n            case 'main':\n                this.setState({\n                    showMainPage: true,\n                    updateBook: false,\n                    addUser: false\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            case 'updateBook':\n                this.setState({\n                    showMainPage: false,\n                    updateBook: true,\n                    addUser: false\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            case 'addUser':\n                this.setState({\n                    showMainPage: false,\n                    updateBook: false,\n                    addUser: true\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { groupID, groupName, groupDescription, userlist, currentBook,\n            pastBook, currentBenchmark, previousBenchmark, totalBenchmark, error,\n            isAdmin, showMainPage, updateBook, addUser } = this.state;\n\n        return (\n            <div>\n                {error && <p>{error.message}</p>}\n\n                {isAdmin && <GroupNav updatePage={this.updatePage} />}\n                <GroupInfo groupName={groupName} groupDescription={groupDescription} />\n                <UserList userlist={userlist} />\n                {currentBook && <CurrentBook currentBook={currentBook} currentBenchmark={currentBenchmark} totalBenchmark={totalBenchmark} />}\n                {showMainPage &&\n                    <Fragment>\n                        <AddPost userID={this.props.userID} groupID={groupID} updatePage={this.updatePage} />\n                        <ShowAllPosts groupID={groupID} />\n                    </Fragment>\n                }\n                {updateBook &&\n                    <Fragment>\n                        <AddBook groupID={groupID} isAdmin={isAdmin} updatePage={this.updatePage} />\n                        <UpdateBenchmark isAdmin={isAdmin} groupID={groupID} updatePage={this.updatePage} />\n                    </Fragment>\n                }\n                {addUser &&\n                    <UserSearch groupID={groupID} isAdmin={isAdmin} updatePage={this.updatePage} />\n                }\n\n            </div>\n        );\n    };\n};\n\nconst GroupInfo = (props) => {\n    return (\n        <Fragment>\n            <h3>Name: {props.groupName}</h3>\n            <p><strong>Description: </strong>{props.groupDescription}</p>\n        </Fragment>\n    );\n};\n\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(GroupPage);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst GroupList = (props) => {\n    return (\n        <div>\n            <h4>Your Clubs:</h4>\n            <div>\n                {props.grouplist.map(groupID =>\n                    <Link to={`/group/${groupID}`} key={groupID}>\n                        <SingleGroup groupID={groupID} key={groupID} />\n                    </Link>)}\n            </div>\n        </div>\n    )\n}\n\nclass SingleGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groupName: '',\n            error: null\n        }\n    }\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${this.props.groupID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ groupName: dbResponse.data.name })\n        } else {\n            this.setState({ error: dbResponse.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.state.groupName}</div>\n        );\n    };\n};\n\n\n\nexport default GroupList;","import React, { Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile'\nimport CreateGroup from './componenets/CreateGroup';\nimport GroupPage from './componenets/GroupPage';\nimport GroupList from './componenets/GroupList';\n\n\n//adding a comment hoping it will help merge on github\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {}\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n        sessionStorage.clear()\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getuser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.local.username,\n      userID: dbResponse.data._id,\n      grouplist: dbResponse.data.grouplist\n    }\n    sessionStorage.setItem(`userID`, currentUser.userID)\n    this.setState({ currentUser })\n  }\n\n\n  render() {\n\n    const { grouplist } = this.state.currentUser;\n\n    return (\n      <BrowserRouter>\n\n        <div className='App'>\n\n          <NavBar authUser={this.state.authUser} />\n          {/* Routes to different components */}\n          {grouplist && <GroupList grouplist={grouplist} />}\n          <Route\n            exact path={Routes.home}\n            render={() =>\n              <Home userID={this.state.currentUser.userID} />} />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n          <Route\n            path={Routes.createGroup}\n            render={() =>\n              <CreateGroup userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/group/:groupID`}\n            render={() =>\n              <GroupPage userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/user/:userID`}\n            render={() =>\n              <UserProfile userID={this.state.currentUser.userID} />}\n          />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\n\nReactDOM.render(\n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)\n\nregisterServiceWorker();"],"sourceRoot":""}