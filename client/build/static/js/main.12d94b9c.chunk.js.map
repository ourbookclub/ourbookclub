{"version":3,"sources":["constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/NavBar.js","componenets/Home.js","componenets/PasswordChange.js","componenets/UserProfile.js","App.js","registerServiceWorker.js","index.js"],"names":["home","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","withAuthorization","condition","WithAuthorization","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","call","onSubmit","event","state","then","setState","objectSpread","Routes","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","PasswordResetForm","labelStyle","marginBottom","SignInFormBase","handleChange","handleSubmit","_this$state2","htmlFor","PasswordReset_PasswordResetLink","SignInForm","SignInLink","SignInPage","SignUp_SignUpLink","username","confirmPassword","firstname","lastname","redirectTo","SignUpFormBase","console","log","passwordOne","passwordTwo","id","SignUpForm","SignUpLink","SignUpPage","SignIn_SignInLink","_ref","onClick","NavBar","componenets_SignOutButton","Home","alt","src","initalState","passwordConfirm","PasswordChangeForm","PasswordChange","App","_this2","BrowserRouter","componenets_NavBar","Route","exact","path","component","render","SignIn","SignUp","PasswordReset","componenets_UserProfile","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","context","Provider","src_App_0","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.12d94b9c.chunk.js","sourcesContent":["export const home = '/';\r\nexport const signup = '/signup';\r\nexport const signin = '/signin';\r\nexport const userProfile = '/userprofile';\r\nexport const passwordReset = '/passwordreset';\r\nexport const passwordChange = '/passwordchange';","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nrequire(`dotenv`).config();\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) => {\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    };\r\n\r\n    doSignInWithEmailAndPassword = (email, password) => {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    };\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\r\n\r\n    doPasswordUpdate = password => {\r\n        const user = app.auth().currentUser;\r\n        return user.updatePassword(password);\r\n    };\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as Routes from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    if (!condition(authUser)) {\r\n                        this.props.history.push(Routes.signin);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Component {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from './Firebase';\r\nimport * as Routes from '../constants/routes';\r\nimport { withAuthorization } from './Session';\r\n\r\nconst inputStyle = {\r\n    width: '50%',\r\n    height: '40px'\r\n}\r\n\r\nconst PasswordResetPage = () => (\r\n    <div>\r\n        <h3>Password Reset</h3>\r\n        <br />\r\n        <PasswordResetForm />\r\n    </div>\r\n);\r\n\r\nconst initialState = {\r\n    email: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordResetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...initialState };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordReset(email)\r\n            .then(() => {\r\n                this.setState({ ...initialState });\r\n                this.props.history.push(Routes.home);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, error } = this.state;\r\n\r\n        const isInvalid = email === '';\r\n\r\n        return (\r\n            <form className='form-horizontal'\r\n                onSubmit={this.onSubmit}>\r\n                {error && <p>{error.message}</p>}\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-input'\r\n                        style={inputStyle}\r\n                        name='email'\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        type='text'\r\n                        placeholder='Email Address'\r\n                    />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                    <div className=\"col-7\"></div>\r\n                    <button\r\n                        className=\"btn btn-primary col-1 col-mr-auto\"\r\n                        disabled={isInvalid}\r\n                        type=\"submit\">Reset Password</button>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst PasswordResetLink = () => (\r\n    <p>\r\n        <Link to={Routes.passwordReset}><button className='btn btn-success'>Forgot Password?</button></Link>\r\n    </p>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(PasswordResetPage);\r\n\r\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\r\n\r\nexport { PasswordResetForm, PasswordResetLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst SignInPage = () => (\n    < div >\n        <h3>SignIn</h3>\n        <SignInForm />\n        <SignUpLink />\n    </div >\n);\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    }\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" style={labelStyle} htmlFor=\"email\">Email:</label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                type=\"text\"\n                                name=\"email\"\n                                placeholder=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">Password: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            disabled={isInvalid}\n                            type=\"submit\">Login</button>\n                    </div>\n                </form>\n                <PasswordResetLink />\n            </div>\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p>\n        Already have an account? <Link to={Routes.signin}><button className=\"btn btn-success\">Sign In</button></Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { withFirebase } from './Firebase';\r\nimport * as Routes from '../constants/routes';\r\nimport { compose } from 'recompose';\r\nimport { SignInLink } from './SignIn';\r\n\r\n\r\nconst inputStyle = {\r\n    width: '50%',\r\n    height: '40px'\r\n}\r\nconst labelStyle = {\r\n    marginBottom: '0px'\r\n}\r\n\r\nconst initialState = {\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    email: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    redirectTo: null,\r\n    error: null\r\n}\r\n\r\nconst SignUpPage = () => (\r\n    <div>\r\n        <h3>SignUp</h3>\r\n        <SignUpForm />\r\n        <SignInLink />\r\n    </div>\r\n);\r\n\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...initialState };\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const { username, email, password, firstname, lastname } = this.state;\r\n\r\n        return this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, password)\r\n            .then(authUser => {\r\n                //TODO Send to database to make local user\r\n                //The User has been successfully authenticated, clear this component state and redirect them to the home page\r\n                console.log(authUser)\r\n                this.setState({ ...initialState });\r\n                this.props.history.push('/')\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({ error });\r\n            });\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { username, email, passwordOne, passwordTwo, firstname, lastname, error } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '' ||\r\n            firstname === '' ||\r\n            lastname === '';\r\n\r\n        return (\r\n            <div className=\"SignupForm\">\r\n                <br />\r\n                {/* If there's an error with signup then display the error */}\r\n                {error && <p>{error.message}</p>}\r\n\r\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"email\" style={labelStyle}>Email: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"password\" style={labelStyle}>Password: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                placeholder=\"password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"confirmPassword\" style={labelStyle}>Confirm Password: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                placeholder=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                value={this.state.confirmPassword}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"username\" style={labelStyle}>Username: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                placeholder=\"username\"\r\n                                type=\"username\"\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"firstname\" style={labelStyle}>First Name: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                placeholder=\"firstname\"\r\n                                type=\"firstname\"\r\n                                name=\"firstname\"\r\n                                value={this.state.firstname}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-1 col-ml-auto\">\r\n                            <label className=\"form-label\" htmlFor=\"lastname\" style={labelStyle}>Last Name: </label>\r\n                        </div>\r\n                        <div className=\"col-3 col-mr-auto\">\r\n                            <input className=\"form-input\"\r\n                                style={inputStyle}\r\n                                placeholder=\"lastname\"\r\n                                type=\"lastname\"\r\n                                name=\"lastname\"\r\n                                value={this.state.lastname}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group \">\r\n                        <div className=\"col-7\"></div>\r\n                        <button\r\n                            disabled={isInvalid}\r\n                            className=\"btn btn-primary col-1 col-mr-auto\"\r\n                            type=\"submit\"\r\n                        >Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\r\n\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        Don't have an account? <Link to={Routes.signup}><button className=\"btn btn-success\">Sign Up</button></Link>\r\n    </p>\r\n);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };","import React from 'react';\r\n\r\nimport { withFirebase } from './Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button className=\"btn btn-link\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    render() {\n        return (\n            < div >\n                <header className=\"navbar App-header\" id=\"nav-container\">\n                    <div className=\"col-4\" >\n                        {this.props.authUser ? (\n                            <section className=\"navbar-section\">\n                                <SignOutButton />\n                                <Link to={Routes.passwordChange} className=\"btn btn-link\">\n                                    <span className=\"text-secondary\">Update Password</span>\n                                </Link>\n                            </section>\n                        ) : (\n                                <section className=\"navbar-section\">\n                                    <Link to={Routes.signin} className=\"btn btn-link\">\n                                        <span className=\"text-secondary\">Sign In</span>\n                                    </Link>\n                                    <Link to={Routes.signup} className=\"btn btn-link\">\n                                        <span className=\"text-secondary\">sign up</span>\n                                    </Link>\n                                </section>\n                            )\n                        }\n                    </div>\n                    <div className=\"col-4 col-mr-auto\">\n                        <div id=\"top-filler\"></div>\n                        <h1 className=\"App-title\">Bookworm</h1>\n                    </div>\n                </header>\n            </div >\n\n        )\n    }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\n\nclass Home extends Component {\n\n    render() {\n        const imageStyle = {\n            width: 400\n        }\n        return (\n            <div>\n                <p>It's good to be home</p>\n                <img style={imageStyle} alt='Earthworm Jim and his book' src='../img/1550080499329.png' />\n            </div>\n        )\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from './Firebase';\r\nimport * as Routes from '../constants/routes';\r\n\r\n\r\nconst inputStyle = {\r\n    width: '50%',\r\n    height: '40px'\r\n}\r\nconst labelStyle = {\r\n    marginBottom: '0px'\r\n}\r\n\r\nconst initalState = {\r\n    password: '',\r\n    passwordConfirm: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...initalState };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const { password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordUpdate(password)\r\n            .then(() => {\r\n                this.setState({ ...initalState });\r\n                this.props.history.push(Routes.home);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { password, passwordConfirm, error } = this.state;\r\n\r\n        const isInvalid =\r\n            password !== passwordConfirm || password === '';\r\n\r\n        return (\r\n            <form className='form-horizontal' onSubmit={this.onSubmit}>\r\n                {error && <p>{error.message}</p>}\r\n                <div className=\"col-1 col-ml-auto\">\r\n                    <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">New Password:</label>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input className=\"form-input\"\r\n                        style={inputStyle}\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"New Password\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-1 col-ml-auto\">\r\n                    <label className=\"form-label\" style={labelStyle} htmlFor=\"passwordConfirm\">Confirm Password:</label>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input className=\"form-input\"\r\n                        style={inputStyle}\r\n                        name=\"passwordConfirm\"\r\n                        value={passwordConfirm}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm New Password\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                    <div className=\"col-7\"></div>\r\n                    <button\r\n                        className=\"btn btn-primary col-1 col-mr-auto\"\r\n                        disabled={isInvalid}\r\n                        type=\"submit\">Update Password</button>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(withRouter, withFirebase)(PasswordChangeForm);","import React from 'react';\r\nimport { withAuthorization } from './Session';\r\n\r\nimport { PasswordResetForm } from './PasswordReset';\r\nimport PasswordChangeForm from './PasswordChange';\r\n\r\nconst UserProfile = () => (\r\n    <div>\r\n        <h1>Profile Page</h1>\r\n        {/* TODO THis needs to be updated totally */}\r\n        <PasswordResetForm />\r\n        <PasswordChangeForm />\r\n    </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from \"react\";\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile'\n\n//adding a comment hoping it will help merge on github\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null\n    };\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser })\n        : this.setState({ authUser: null });\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n\n        <div className=\"App\">\n\n          <NavBar authUser={this.state.authUser} />\n          {/* greet user if logged in: */}\n          {this.state.authUser &&\n            <p>Join the party, {this.state.authUser.email}!</p>\n          }\n          {/* Routes to different components */}\n          <Route\n            exact path=\"/\"\n            component={Home} />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\n\nReactDOM.render(\n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)\n\nregisterServiceWorker();"],"sourceRoot":""}