{"version":3,"sources":["constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/Home.js","componenets/NavBar.js","componenets/PasswordChange.js","componenets/UserProfile.js","componenets/CreateGroup.js","componenets/GroupPage/CurrentBook.js","componenets/GroupPage/AddBook.js","componenets/GroupPage/AddPost.js","componenets/GroupPage/ShowAllPosts.js","componenets/GroupPage/UpdateBenchmark.js","componenets/UserSearch.js","componenets/GroupPage/UserList.js","componenets/GroupPage/GroupNav.js","componenets/GroupPage/index.js","App.js","index.js"],"names":["home","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","withAuthorization","condition","WithAuthorization","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","call","onSubmit","event","state","then","setState","objectSpread","Routes","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","PasswordResetForm","labelStyle","marginBottom","SignInFormBase","handleChange","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$state2","htmlFor","PasswordReset_PasswordResetLink","SignInForm","SignInLink","SignInPage","SignUp_SignUpLink","username","confirmPassword","firstname","lastname","redirectTo","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","_ref","checkValidInput","axios","post","sent","status","abrupt","console","log","_x","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","passwordOne","passwordTwo","map","i","id","SignUpForm","SignUpLink","SignUpPage","SignIn_SignInLink","onClick","cardStyle","border","borderRadius","marginLeft","marginRight","Home","grouplist","prevProps","groupID","Home_GroupCard","GroupCard","_this2","getGroupData","dbResponse","get","concat","groupName","data","currentBook","currentBenchmark","all","getBookData","getPostData","spread","bookData","postData","bookTitle","title","bookImage","image","author","user","date","postDate","Date","Col","sm","Card","CardBody","CardTitle","CardSubtitle","CardImg","top","src","alt","CardText","Home_PostAuthor","toLocaleString","PostAuthor","_this3","componentDidMount","getUsername","_callee2","_context2","local","react","HomeLink","NavBar","Home_HomeLink","componenets_SignOutButton","initalState","passwordConfirm","PasswordChangeForm","initialUpdateState","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","checkCurrentUser","userIDFromURL","userID","updatedProfile","getUserData","params","UserProfile_UpdateInformationForm","PasswordChange","UpdateInformationForm","_ref2","fieldSubmitted","request","put","_x2","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","groupDescription","CreateGroup","currentUserID","_id","authors","CurrentBook","getCurrentBook","bookID","totalBenchmark","AddBookPage","bookSearch","searchableBook","trim","split","join","bookArray","book","AddBook_SingleBook","isAdmin","updatePage","SingleBook","addBookToGroup","chosenBook","_this3$props","_this$props$book","description","pageCount","publishedDate","text","AddPost","_this$props","userPost","getAllPosts","postArray","ShowAllPosts","GroupPage_AddPost","ShowAllPosts_SinglePost","SinglePost","comment","_this$props$post","Jumbotron_default","fluid","Container_default","singleComment","ShowAllPosts_ShowComment","ShowAllPosts_AddComment","postID","ShowComment","_this4","_callee3","_context3","commentDate","AddComment","_this5","_callee4","_context4","nextBenchmark","UpdateBenchmark","handleCurrentSubmit","t0","handleTotalSubmit","totalCount","_this$props2","currentIsInvalid","totalIsInvalid","UserSearch","userSearch","searchSelect","userArray","UserSearch_SingleUser","SingleUser","addUserToGroup","_this$props$user","UserList","userlist","UserList_SingleUser","GroupNav","pastBook","previousBenchmark","showMainPage","updateBook","addUser","GroupPage","checkAdmin","filter","showPage","groupIDFromURL","GroupPage_GroupNav","GroupPage_GroupInfo","GroupPage_UserList","GroupPage_CurrentBook","GroupPage_ShowAllPosts","AddBook","GroupPage_UpdateBenchmark","componenets_UserSearch","GroupInfo","App","isSignedIn","BrowserRouter","componenets_NavBar","Route","exact","path","render","componenets_Home","SignIn","SignUp","PasswordReset","componenets_UserProfile","componenets_CreateGroup","componenets_GroupPage","ReactDOM","context","Provider","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d0f515cb.chunk.js","sourcesContent":["export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordReset = '/passwordreset';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    }\n                }\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { withAuthorization } from './Session';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\n\nconst PasswordResetPage = () => (\n    <div>\n        {/* TODO This totally doesn't work */}\n        <h3>Password Reset</h3>\n        <br />\n        <PasswordResetForm />\n    </div>\n);\n\nconst initialState = {\n    email: '',\n    error: null,\n};\n\nclass PasswordResetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initialState };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form className='form-horizontal'\n                onSubmit={this.onSubmit}>\n                {error && <p>{error.message}</p>}\n                <div className='form-group'>\n                    <input\n                        className='form-input'\n                        style={inputStyle}\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type='text'\n                        placeholder='Email Address'\n                    />\n                </div>\n                <div className=\"form-group \">\n                    <div className=\"col-7\"></div>\n                    <button\n                        className=\"btn btn-primary col-1 col-mr-auto\"\n                        disabled={isInvalid}\n                        type=\"submit\">Reset Password</button>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst PasswordResetLink = () => (\n    <p>\n        <Link to={Routes.passwordReset}><button className='btn btn-success'>Forgot Password?</button></Link>\n    </p>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PasswordResetPage);\n\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\n\nexport { PasswordResetForm, PasswordResetLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst SignInPage = () => (\n    < div >\n        <h3>SignIn</h3>\n        <SignInForm />\n        <SignUpLink />\n    </div >\n);\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(async () => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n    }\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='email'>Email:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='email'\n                                placeholder='email'\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='password'>Password: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='password'\n                                type='password'\n                                name='password'\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Login</button>\n                    </div>\n                </form>\n                <PasswordResetLink />\n            </div>\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p>\n        Already have an account? <Link to={Routes.signin}><button className='btn btn-success'>Sign In</button></Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from './Firebase';\nimport { compose } from 'recompose';\nimport axios from 'axios';\n\nimport * as Routes from '../constants/routes';\nimport { SignInLink } from './SignIn';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n}\n\nconst SignUpPage = () => (\n    <div>\n        <h3>SignUp</h3>\n        <SignUpForm />\n        <SignInLink />\n    </div>\n);\n\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password, firstname, lastname } = this.state;\n\n            const dbResponse = await axios.post(`/api/newuser`, { username, email, firstname, lastname });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...initialState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        const { username, email, passwordOne, passwordTwo, firstname, lastname, error, validMessage } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            firstname === '' ||\n            lastname === '' ||\n            username.length < 3 ||\n            passwordOne < 6;\n\n        return (\n            <div className=\"SignupForm\">\n                <br />\n                {/* If there's an error with signup then display the error */}\n                {error && <p>{error.message}</p>}\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"email\" style={labelStyle}>Email </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"ex. janedoe@email.com\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"password\" style={labelStyle}>Password<br />(Must be at least 6 characters with no spaces) </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"confirmPassword\" style={labelStyle}>Confirm Password </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Confirm Password\"\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"username\" style={labelStyle}>Username<br />(Must be at least 3 characters, no more than 16, no special characters & no spaces)</label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. JaneDoe14\"\n                                type=\"username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"firstname\" style={labelStyle}>First Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Jane\"\n                                type=\"firstname\"\n                                name=\"firstname\"\n                                value={this.state.firstname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"lastname\" style={labelStyle}>Last Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Doe\"\n                                type=\"lastname\"\n                                name=\"lastname\"\n                                value={this.state.lastname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            disabled={isInvalid}\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            type=\"submit\"\n                        >Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    };\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={Routes.signup}><button className=\"btn btn-success\">Sign Up</button></Link>\n    </p>\n);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\n\nimport { withFirebase } from './Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button className=\"btn btn-link\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Col, Row\n} from 'reactstrap';\n\nconst cardStyle = {\n    border: '1px solid darkgrey',\n    borderRadius: '2px',\n    marginLeft: '5px',\n    marginRight: '5px'\n}\n\n//Stateful component to allow the grouplist to properly populate\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            grouplist: [],\n            error: null\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.grouplist) {\n            this.setState({ grouplist: this.props.grouplist });\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.grouplist !== prevProps.grouplist) {\n            this.setState({ grouplist: this.props.grouplist })\n        };\n    };\n\n    //TODO This only displays 3 groups properly!!\n    render() {\n        const { grouplist } = this.state;\n        return (\n            <div>\n                {grouplist ? grouplist.map(groupID => <GroupCard key={groupID} groupID={groupID} />) : <div><strong>Nothing</strong>No Groups</div>}\n            </div>\n        );\n    };\n};\n\n//Stateful component to get the groupdata\nclass GroupCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groupName: '',\n            currentBook: '',\n            currentBenchmark: 0,\n            error: null,\n            bookTitle: '',\n            bookImage: '',\n            author: '',\n            date: ''\n        };\n    };\n\n    componentDidMount() {\n        const groupID = this.props.groupID;\n        this.getGroupData(groupID);\n    };\n\n    //First get the data for all the user is apart of\n    getGroupData = async (groupID) => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({\n                groupName: dbResponse.data.name,\n                currentBook: dbResponse.data.currentBook,\n                currentBenchmark: dbResponse.data.currentBenchmark\n            }, () => {\n\n                //Once that is written to state then grab the book they're currently reading and the latest post if they exist\n                axios.all([this.getBookData(), this.getPostData()]).then(axios.spread((bookData, postData) => {\n                    if (bookData.status === 200) {\n                        this.setState({\n                            bookTitle: bookData.data.title,\n                            bookImage: bookData.data.image\n                        });\n                    }\n\n                    if (postData.data.length > 0) {\n                        this.setState({\n                            author: postData.data[0].user,\n                            date: postData.data[0].date\n                        });\n                    };\n                }))\n\n            });\n        };\n    };\n\n    getBookData = () => {\n        return axios.get(`/api/getbookdata/${this.state.currentBook}`)\n    };\n\n    getPostData = () => {\n        return axios.get(`/api/getallgrouppost/${this.props.groupID}`);\n    };\n\n    render() {\n        const { currentBenchmark, bookImage, bookTitle, author, date, groupName } = this.state;\n        const postDate = new Date(this.state.date);\n        const { groupID } = this.props;\n\n        return (\n            <Col sm=\"4\">\n                <Card style={cardStyle}>\n                    <CardBody>\n                        <CardTitle>\n                            <strong>{groupName}</strong>\n                        </CardTitle>\n                        <br />\n                        <CardSubtitle>\n                            <strong>Next Chapter:  </strong>{currentBenchmark}\n                        </CardSubtitle>\n                    </CardBody>\n                    <CardImg top width=\"150px\" src={bookImage} alt={bookTitle} />\n                    <CardBody>\n                        <CardText>\n                            {author && <PostAuthor author={author} />}\n                            {date && postDate.toLocaleString()}\n                        </CardText>\n                        <Link to={`/group/${groupID}`}>\n                            <button className='btn btn-success'>Go to Club</button>\n                        </Link>\n                    </CardBody>\n                </Card>\n            </Col>\n        );\n    };\n};\n\nclass PostAuthor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        };\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.author}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        return (\n            <Fragment>\n                Last Post By: {this.state.username}\n            </Fragment>\n        );\n    };\n};\n\nconst HomeLink = () => (\n    <Link to={Routes.home}>\n        <button className='btn btn-link'>Home</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);\nexport { HomeLink }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\nimport { HomeLink } from './Home';\n\n\nconst NavBar = (props) => {\n    return (\n        < div >\n            <header className=\"navbar App-header\" id=\"nav-container\">\n                <div className=\"col-4\" >\n                    {props.authUser ? (\n                        <section className=\"navbar-section\">\n                            <HomeLink />\n                            <Link to={Routes.createGroup} className=\"btn btn-link\">\n                                Create a Club\n                            </Link>\n                            <SignOutButton />\n                        </section>\n                    ) : (\n                            <section className=\"navbar-section\">\n                                <Link to={Routes.signin} className=\"btn btn-link\">\n                                    <span className=\"text-secondary\">Sign In</span>\n                                </Link>\n                                <Link to={Routes.signup} className=\"btn btn-link\">\n                                    <span className=\"text-secondary\">sign up</span>\n                                </Link>\n                            </section>\n                        )\n                    }\n                </div>\n                <div className=\"col-4 col-mr-auto\">\n                    <div id=\"top-filler\"></div>\n                    <h1 className=\"App-title\">Bookworm</h1>\n                </div>\n            </header>\n        </div >\n\n    )\n}\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from './Session';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">New Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                        />\n                    </div>\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"passwordConfirm\">Confirm Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"passwordConfirm\"\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                        />\n                    </div>\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            disabled={isInvalid}\n                            type=\"submit\">Update Password</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport PasswordChangeForm from './PasswordChange';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '25%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div>\n                <h1>{this.state.dbUsername}'s Profile</h1>\n                <div>Username: {dbUsername}</div>\n                <div>Email: {dbEmail}</div>\n                <div>Firstname: {dbFirstname}</div>\n                <div>Lastname: {dbLastname}</div>\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        let invalidInputs = 0;\n\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes` });\n            return false\n        }\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div className='form-group'>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <label style={labelStyle}>Username:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>Update Username</button>\n\n                <br />\n\n                <label style={labelStyle}>Email:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>Update Email</button>\n\n                <br />\n\n                <label style={labelStyle}>First Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>Update Firstname</button>\n\n                <br />\n\n                <label style={labelStyle}>Last Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>Update Lastname</button>\n                <br />\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    groupName: '',\n    groupDescription: '',\n    error: null\n};\n\nclass CreateGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const currentUserID = this.props.userID;\n\n        const { groupName, groupDescription } = this.state\n\n        const dbResponse = await axios.post('/api/creategroup', { currentUserID, groupName, groupDescription });\n        this.props.history.push(`/group/${dbResponse.data._id}`)\n\n    }\n\n    render() {\n        const { groupName, groupDescription, error } = this.state;\n\n        const isInvalid = groupName === '' || groupDescription === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupName'>Group Name:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='groupName'\n                                placeholder='Group Name'\n                                value={this.state.groupName}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupDescription'>Group Descripton: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='Description'\n                                name='groupDescription'\n                                value={this.state.groupDescription}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Create New Group</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\nconst CreateGroupLink = () => (\n    <Link to={Routes.createGroup}>\n        <button className='btn btn-link'>Create Group</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(CreateGroup);\n\nexport { CreateGroupLink };","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst initialState = {\n    title: '',\n    image: '',\n    authors: [],\n    error: null\n}\n\nclass CurrentBook extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState }\n    };\n\n    componentDidMount() {\n        const bookID = this.props.currentBook;\n        if (bookID) {\n            this.getCurrentBook(bookID);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentBook !== prevProps.currentBook) {\n            const bookID = this.props.currentBook;\n            this.getCurrentBook(bookID)\n        }\n    }\n\n    getCurrentBook = async (bookID) => {\n        const dbResponse = await axios.get(`/api/getbookdata/${bookID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                title: dbResponse.data.title,\n                image: dbResponse.data.image,\n                authors: dbResponse.data.authors\n            })\n        } else {\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    }\n\n    render() {\n        return (\n            <div className='currentBook'>\n                <div>Title: {this.state.title}</div>\n                <img src={this.state.image} alt={`${this.state.title}`} />\n                <div>Current Benchmark: {this.props.currentBenchmark}</div>\n                <div>Total Benchmark: {this.props.totalBenchmark}</div>\n                <br />\n            </div>\n\n        );\n    };\n};\n\nexport default CurrentBook;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nclass AddBookPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookSearch: '',\n            error: null,\n            bookArray: []\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { bookSearch } = this.state;\n\n        //This changes the book the user enters into a searchable term by the browser\n        const searchableBook = bookSearch.trim().split(' ').join('+');\n        console.log(searchableBook);\n        const dbResponse = await axios.get(`/api/searchbook/${searchableBook}`);\n\n        if (dbResponse.status === 200) {\n            //returns an array of 1 - 20 books and maps over them\n            this.setState({ bookArray: dbResponse.data });\n\n        } else {\n            this.setState({ error: dbResponse.data.error })\n        }\n        //TODO Send this to another component to then map over the \n    }\n\n    render() {\n        const { bookSearch, error, bookArray } = this.state;\n        const isInvalid = bookSearch === '';\n\n        return (\n\n            <div className='bookSearch'>\n                {error && <p>{error}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='bookSearch'>Book to Search:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='bookSearch'\n                                placeholder='Enter a Book to Search'\n                                value={this.state.bookSearch}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"form-group \">\n                            <div className=\"col-7\"></div>\n                            <button\n                                disabled={isInvalid}\n                                className=\"btn btn-primary col-1 col-mr-auto\"\n                                type=\"submit\"\n                            >Search Book</button>\n                        </div>\n                    </div>\n                </form>\n                {bookArray && bookArray.map((book, i) => <SingleBook book={book} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleBook extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    addBookToGroup = async (event) => {\n        const chosenBook = { ...this.props.book };\n        const { groupID, isAdmin } = this.props;\n\n        const dbResponse = await axios.post(`/api/addbook`, { groupID, isAdmin, chosenBook });\n        if (dbResponse.status === 200) {\n            this.props.updatePage('main');\n        }\n    }\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { title, authors, description, image, pageCount, publishedDate } = this.props.book\n        return (\n            <div className=\"bookCard\">\n                <div>{title}</div>\n                <div>{authors[0]}</div>\n                <div>{description}</div>\n                <img src={image} alt={`${title}`} />\n                <div>{pageCount}</div>\n                <div>{publishedDate}</div>\n                <button className=\"btn btn-primary col-1 col-mr-auto\" onClick={this.addBookToGroup}>Add Book To Group</button>\n            </div>\n        )\n    }\n}\n\nexport default AddBookPage;","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: `50%`,\n    height: `40px`\n}\nconst labelStyle = {\n    marginBottom: `0px`\n}\n\nconst initialState = {\n    title: '',\n    text: '',\n    error: null\n};\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { userID, groupID } = this.props\n\n        const userPost = {\n            title: this.state.title,\n            text: this.state.text\n        }\n\n        const dbResponse = await axios.post(`/api/newpost`, { userID, groupID, userPost });\n\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ ...initialState })\n        };\n        //TODO SHOW MODAL FOR POST ADDED\n    }\n\n    render() {\n        const { text, title, error } = this.state;\n\n        const isInvalid = text === '' || title === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='title'>Title:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='title'\n                                placeholder=\"Your Post's Title\"\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='text'>Post Body:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='input'\n                                name='text'\n                                placeholder='Write your Post'\n                                value={this.state.text}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Submit Post</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPost);\n","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport AddPost from './AddPost';\n\n\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst inputStyle = {\n    width: `50%`,\n    height: `40px`\n}\n\nconst initalState = {\n    text: '',\n    error: null,\n    postArray: []\n}\n\nclass ShowAllPosts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initalState }\n    };\n\n    //In both did update and did mount based on if the user goes to another page within the group or loads it\n    componentDidMount() {\n        this.getAllPosts()\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.groupID !== prevProps.groupID) {\n            this.getAllPosts()\n        };\n    };\n\n    getAllPosts = async () => {\n        const groupID = this.props.groupID;\n        const dbResponse = await axios.get(`/api/getallgrouppost/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({ postArray: dbResponse.data });\n        };\n    };\n\n    render() {\n        const { postArray } = this.state;\n        const { userID, groupID } = this.props;\n\n        return (\n            <div>\n                <AddPost userID={this.props.userID} groupID={groupID} getAllPosts={this.getAllPosts} />\n                <h1>Posts</h1>\n                {postArray.map(post => <SinglePost key={post._id} post={post} userID={userID} getAllPosts={this.getAllPosts} />)}\n            </div>\n        );\n    };\n};\n\n\nclass SinglePost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null,\n            comment: '',\n        }\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.post.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { title, text, _id, comment } = this.props.post;\n        const { userID } = this.props;\n        const postDate = new Date(this.props.post.date);\n\n        return (\n            <span>\n                <Jumbotron fluid>\n                    <Container>\n                        <strong>User:</strong> {username}\n                        <br />\n                        <strong>Date: </strong> {postDate.toLocaleString()}\n                        <p>\n                            <strong>Title:</strong> {title}\n                        </p>\n                        <p>\n                            <strong>Post:</strong> {text}\n                        </p>\n                        {comment.map(singleComment => <ShowComment key={singleComment._id} comment={singleComment} />)}\n                    </Container>\n                    <AddComment postID={_id} userID={userID} getAllPosts={this.props.getAllPosts} />\n                </Jumbotron>\n            </span>\n        )\n    };\n};\n\nclass ShowComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        }\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.comment.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { text } = this.props.comment;\n        const commentDate = new Date(this.props.comment.date)\n\n        return (\n            <Container>\n                <strong>User:</strong> {username}\n                <br />\n                <strong>Date: </strong> {commentDate.toLocaleString()}\n                <p>\n                    <strong>Comment:</strong> {text}\n                </p>\n            </Container>\n        )\n    }\n};\n\nclass AddComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comment: ''\n        }\n    };\n\n    handleSubmit = async () => {\n        const comment = this.state.comment;\n        const userID = this.props.userID;\n        const postID = this.props.postID;\n\n        const dbResponse = await axios.post(`/api/newcomment`, { userID, postID, comment });\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ 'comment': '' })\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { comment } = this.state;\n\n        const isInvalid = comment === '';\n\n        return (\n\n            <div>\n                <label style={labelStyle}>Add a comment:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='comment'\n                    placeholder='Add Comment'\n                    value={comment}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={isInvalid}\n                    onClick={this.handleSubmit}>Add Comment</button>\n            </div>\n        )\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(ShowAllPosts);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    nextBenchmark: '',\n    totalBenchmark: '',\n    error: null\n};\n\nclass UpdateBenchmark extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleCurrentSubmit = async event => {\n        event.preventDefault();\n\n        const nextBenchmark = +this.state.nextBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatebenchmark`, { nextBenchmark, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } })\n        }\n    }\n\n    handleTotalSubmit = async event => {\n        event.preventDefault();\n\n        const totalCount = +this.state.totalBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } });\n        }\n    }\n\n    render() {\n        const { nextBenchmark, totalBenchmark, error } = this.state;\n\n        const currentIsInvalid = nextBenchmark === '' || nextBenchmark < 0;\n        const totalIsInvalid = totalBenchmark === '' || totalBenchmark < 0;\n\n        return (\n            <div>\n                <br />\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleCurrentSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='nextBenchmark'>Next Goal for Group:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='nextBenchmark'\n                                placeholder='What is the next goal for the group?'\n                                value={this.state.nextBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={currentIsInvalid}\n                            type='submit'>Set New Goal</button>\n                    </div>\n                </form>\n\n                <br />\n\n                <form className='form-horizontal' onSubmit={this.handleTotalSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='totalBenchmark'>Update Total Benchmarks / Chapters:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='totalBenchmark'\n                                placeholder='What is the total benchmarks or chapters of this book?'\n                                value={this.state.totalBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={totalIsInvalid}\n                            type='submit'>Update Total</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpdateBenchmark);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nclass UserSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userSearch: '',\n            error: null,\n            userArray: [],\n            searchSelect: ''\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { userSearch, searchSelect } = this.state;\n\n        const dbResponse = await axios.get(`/api/usersearch/${userSearch}/${searchSelect}`);\n\n        this.setState({ userArray: dbResponse.data });\n    }\n\n    render() {\n        const { userSearch, error, userArray, searchSelect } = this.state;\n        const isInvalid = userSearch === '' || searchSelect === '';\n\n        return (\n\n            <div className='userSearch'>\n                {error && <p>{error}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle}>Search By:</label>\n                        </div>\n                        <select name='searchSelect' value={this.state.searchSelect} onChange={this.handleChange}>\n                            <option value=''> </option>\n                            <option value='email'>Email</option>\n                            <option value='username'>Username</option>\n                        </select>\n                    </div>\n\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='userSearch'>Search Users:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='userSearch'\n                                placeholder='Search User'\n                                value={this.state.userSearch}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <div className='col-7'></div>\n                            <button\n                                disabled={isInvalid}\n                                className='btn btn-primary col-1 col-mr-auto'\n                                type='submit'\n                            >Search User</button>\n                        </div>\n                    </div>\n                </form>\n                {userArray && userArray.map((user, i) => <SingleUser user={user} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    addUserToGroup = async (event) => {\n        const { isAdmin, groupID } = this.props;\n        const { userID } = this.props.user;\n\n        const dbResponse = await axios.put(`/api/addusertogroup`, { isAdmin, groupID, userID });\n\n        if (dbResponse.status === 200) {\n            this.props.updatePage(`main`);\n        };\n    };\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { isAdmin } = this.props;\n        const { email, username } = this.props.user;\n\n        return (\n            <div className='userCard'>\n                <div>Email: {email}</div>\n                <div>Username: {username}</div>\n\n                {isAdmin && <button className='btn btn-primary col-1 col-mr-auto' onClick={this.addUserToGroup}>Add User To Group</button>}\n            </div>\n        )\n    }\n}\n\nexport default UserSearch;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst UserList = (props) => {\n    return (\n        <Fragment>\n            <h3>Userlist:</h3>\n            <div>\n                {props.userlist.map((user, i) => <Link to={`/user/${user._id}`} key={i}><SingleUser userID={user._id} key={user._id} /></Link>)}\n            </div>\n            <br />\n        </Fragment>\n    )\n}\n\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null\n        }\n    }\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.state.username}</div>\n        );\n    };\n};\n\n\n\nexport default UserList;","import React from 'react';\n\nconst GroupNav = (props) => {\n    return (\n        <div>\n            <button className='btn btn-success' onClick={() => props.updatePage('main')}>Show Club Page</button>\n            <button className='btn btn-success' onClick={() => props.updatePage('updateBook')}>Update Book</button>\n            <button className='btn btn-success' onClick={() => props.updatePage('addUser')}>Add User</button>\n        </div>\n    )\n}\n\nexport default GroupNav;","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport CurrentBook from './CurrentBook';\nimport AddBook from './AddBook';\nimport ShowAllPosts from './ShowAllPosts';\nimport UpdateBenchmark from './UpdateBenchmark';\nimport UserSearch from '../UserSearch';\nimport UserList from './UserList';\nimport GroupNav from './GroupNav';\n\n//Initializes all the data we need for the group as well as what should display on the app\nconst initialState = {\n    groupID: 0,\n    groupName: '',\n    groupDescription: '',\n    userlist: [],\n    currentBook: '',\n    pastBook: [],\n    currentBenchmark: 0,\n    previousBenchmark: [],\n    totalBenchmark: 0,\n    isAdmin: false,\n    error: null,\n    showMainPage: true,\n    updateBook: false,\n    addUser: false\n};\n\n\nclass GroupPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    };\n\n    componentDidMount() {\n        const groupIDFromURL = this.props.match.params.groupID;\n        if (typeof groupIDFromURL !== 'undefined') {\n            this.getGroupData(groupIDFromURL);\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.userID !== prevProps.userID) {\n            const groupID = this.props.match.params.groupID;\n            this.getGroupData(groupID);\n        };\n    };\n\n    getGroupData = async (groupID) => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                groupID: dbResponse.data._id,\n                groupName: dbResponse.data.name,\n                groupDescription: dbResponse.data.description,\n                userlist: dbResponse.data.userlist,\n                currentBook: dbResponse.data.currentBook,\n                pastBook: dbResponse.data.pastBook,\n                currentBenchmark: dbResponse.data.currentBenchmark,\n                previousBenchmark: dbResponse.data.previousBenchmark,\n                totalBenchmark: dbResponse.data.totalBenchmark,\n            }, () => { //If statement incase the componentDidMount happens first\n                if (this.props.userID) {\n                    this.checkAdmin();\n                };\n            });\n        } else {\n            //TODO Check Error message\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    };\n\n    checkAdmin = () => {\n        const { userlist } = this.state;\n        const currentUserID = this.props.userID;\n\n        const currentUser = userlist.filter(user => user._id === currentUserID);\n        if (currentUser[0].isAdmin) {\n            this.setState({\n                isAdmin: true\n            });\n        };\n    };\n\n    //Toggles the page based on what the user chooses to see\n    updatePage = (showPage) => {\n        switch (showPage) {\n            case 'main':\n                this.setState({\n                    showMainPage: true,\n                    updateBook: false,\n                    addUser: false\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            case 'updateBook':\n                this.setState({\n                    showMainPage: false,\n                    updateBook: true,\n                    addUser: false\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            case 'addUser':\n                this.setState({\n                    showMainPage: false,\n                    updateBook: false,\n                    addUser: true\n                });\n                this.getGroupData(this.state.groupID);\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { groupID, groupName, groupDescription, userlist, currentBook,\n            currentBenchmark, totalBenchmark, error,\n            isAdmin, showMainPage, updateBook, addUser } = this.state;\n\n        const { userID } = this.props;\n\n        return (\n            <div>\n                {error && <p>{error.message}</p>}\n\n                {isAdmin && <GroupNav updatePage={this.updatePage} />}\n                <GroupInfo groupName={groupName} groupDescription={groupDescription} />\n                <UserList userlist={userlist} />\n                {currentBook && <CurrentBook currentBook={currentBook} currentBenchmark={currentBenchmark} totalBenchmark={totalBenchmark} />}\n                {showMainPage &&\n                    <Fragment>\n                        <ShowAllPosts groupID={groupID} userID={userID} />\n                    </Fragment>\n                }\n                {updateBook &&\n                    <Fragment>\n                        <AddBook groupID={groupID} isAdmin={isAdmin} updatePage={this.updatePage} />\n                        <UpdateBenchmark isAdmin={isAdmin} groupID={groupID} updatePage={this.updatePage} />\n                    </Fragment>\n                }\n                {addUser &&\n                    <UserSearch groupID={groupID} isAdmin={isAdmin} updatePage={this.updatePage} />\n                }\n\n            </div>\n        );\n    };\n};\n\nconst GroupInfo = (props) => {\n    return (\n        <Fragment>\n            <h3>Name: {props.groupName}</h3>\n            <p><strong>Description: </strong>{props.groupDescription}</p>\n        </Fragment>\n    );\n};\n\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(GroupPage);","import React, { Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile'\nimport CreateGroup from './componenets/CreateGroup';\nimport GroupPage from './componenets/GroupPage';\n\n\n//adding a comment hoping it will help merge on github\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {}\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getuser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.local.username,\n      userID: dbResponse.data._id,\n      grouplist: dbResponse.data.grouplist\n    }\n    this.setState({ currentUser })\n  }\n\n\n  render() {\n\n    const { grouplist } = this.state.currentUser;\n\n    return (\n      <BrowserRouter>\n\n        <div className='App'>\n\n          <NavBar authUser={this.state.authUser} />\n          {/* Routes to different components */}\n          <Route\n            exact path={Routes.home}\n            render={() =>\n              <Home grouplist={grouplist} />} />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n          <Route\n            path={Routes.createGroup}\n            render={() =>\n              <CreateGroup userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/group/:groupID`}\n            render={() =>\n              <GroupPage userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/user/:userID`}\n            render={() =>\n              <UserProfile userID={this.state.currentUser.userID} />}\n          />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\n\nReactDOM.render(\n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}