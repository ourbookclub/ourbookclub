{"version":3,"sources":["images/logo.png","componenets/GroupPage/images/wormlong2.png","constants/routes.js","componenets/Firebase/context.js","componenets/Firebase/firebase.js","componenets/Firebase/index.js","componenets/Session/withAuthorization.js","componenets/PasswordReset.js","componenets/SignIn.js","componenets/SignUp.js","componenets/SignOutButton.js","componenets/Home.js","componenets/CreateGroup.js","componenets/NavBar.js","componenets/PasswordChange.js","componenets/UserProfile.js","componenets/GroupPage/CurrentBook.js","componenets/GroupPage/AddBook.js","componenets/GroupPage/AddPost.js","componenets/GroupPage/ShowAllPosts.js","componenets/GroupPage/UpdateBenchmark.js","componenets/UserSearch.js","componenets/GroupPage/UserList.js","componenets/GroupPage/GroupNav.js","componenets/GroupPage/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","home","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","require","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","app","currentUser","updatePassword","initializeApp","withAuthorization","condition","WithAuthorization","_React$Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","listener","onAuthStateChanged","authUser","history","push","compose","withRouter","inputStyle","width","height","initialState","error","PasswordResetFormBase","call","onSubmit","event","state","then","setState","objectSpread","Routes","catch","preventDefault","onChange","defineProperty","target","name","_this$state","isInvalid","className","message","style","type","placeholder","disabled","PasswordResetLink","Link","to","PasswordResetForm","labelStyle","marginBottom","SignInFormBase","handleChange","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_this$state2","htmlFor","PasswordReset_PasswordResetLink","SignInForm","SignInLink","SignInPage","SignUp_SignUpLink","username","confirmPassword","firstname","lastname","redirectTo","emailValid","passwordValid","usernameValid","validMessage","SignUpFormBase","_ref","checkValidInput","axios","post","sent","status","abrupt","console","log","_x","validateForm","invalidInputs","invalidMessages","fieldName","validCheck","match","checkPassword","length","noSpacesInPassword","checkUsername","usernameLength","passwordOne","passwordTwo","map","i","id","SignUpForm","SignUpLink","SignUpPage","SignIn_SignInLink","textsize","fontSize","onClick","cardStyle","border","borderRadius","marginLeft","marginRight","overflow","Home","grouplist","hasGroups","checkIfGroups","prevProps","groupID","Home_GroupCard","Home_Testing","Testing","GroupCard","_this2","getGroupData","dbResponse","get","concat","groupName","data","currentBook","currentBenchmark","all","getBookData","getPostData","spread","bookData","postData","bookTitle","title","bookImage","image","author","user","date","postDate","Date","Col","sm","Card","CardBody","CardTitle","CardSubtitle","CardImg","top","src","alt","CardText","Home_PostAuthor","toLocaleString","PostAuthor","_this3","componentDidMount","getUsername","_callee2","_context2","local","react","HomeLink","Alert","withReactContent","Swal","groupDescription","CreateGroup","currentUserID","userID","fire","text","_id","CreateGroupLink","background","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","color","NavBar","Row","Navbar","dark","expand","Nav","navbar","NavItem","Home_HomeLink","CreateGroup_CreateGroupLink","componenets_SignOutButton","NavLink","href","size","offset","Logo","initalState","passwordConfirm","PasswordChangeForm","initialUpdateState","initialProfileState","dbUsername","dbEmail","dbFirstname","dbLastname","isCurrentUser","UserProfile","checkCurrentUser","userIDFromURL","updatedProfile","getUserData","params","UserProfile_UpdateInformationForm","PasswordChange","UpdateInformationForm","_ref2","fieldSubmitted","request","put","_x2","usernameIsInvalid","emailIsInvalid","firstnameIsInvalid","lastnameIsInvalid","authors","progressBarStyle","position","CurrentBook","getCurrentBook","bookID","percentageComplete","totalBenchmark","_this$props","CurrentBook_ProgressBar","percentage","ProgressBar","CurrentBook_BarFiller","BarFiller","transition","AddBookPage","bookSearch","searchableBook","trim","split","join","loading","bookArray","react_spinners","css","sizeUnit","book","AddBook_SingleBook","isAdmin","updatePage","SingleBook","getChapterCount","_ref3","input","showCancelButton","inputValidator","addBookToGroup","_ref4","_callee3","chosenBook","_this3$props","_context3","addTotalBenchmark","_x3","_ref5","_callee4","totalCount","_ref6","nextBenchmark","_context4","addCurrentBenchmark","_x4","_x5","_x6","_x7","_ref7","_callee5","_context5","_x8","_x9","_x10","_x11","_this4","_this$props$book","description","pageCount","publishedDate","AddPost","userPost","getAllPosts","Form","FormGroup","Label","for","Input","Button","divider","backgroundImage","Worm","marginTop","textAlign","buttonPosition","commentContainer","borderStyle","borderWidth","postTitle","postStyle","postArray","ShowAllPosts","GroupPage_AddPost","ShowAllPosts_SinglePost","SinglePost","comment","_this$props$post","xs","singleComment","ShowAllPosts_ShowComment","ShowAllPosts_AddComment","postID","ShowComment","commentDate","Container","AddComment","_this5","UpdateBenchmark","handleCurrentSubmit","t0","handleTotalSubmit","_this$props2","currentIsInvalid","totalIsInvalid","UserSearch","userSearch","searchSelect","userArray","UserSearch_SingleUser","SingleUser","addUserToGroup","_this3$props$user","_this$props$user","UserList","userlist","UserList_SingleUser","ButtonStyle","GroupNav","align","outline","pastBook","previousBenchmark","showMainPage","updateBook","addUser","adminpanel","padding","groupinfopanel","columnbackground","GroupPage","checkAdmin","filter","showPage","groupIDFromURL","GroupPage_GroupNav","GroupPage_CurrentBook","GroupPage_UserList","GroupPage_GroupInfo","GroupPage_ShowAllPosts","AddBook","GroupPage_UpdateBenchmark","componenets_UserSearch","GroupInfo","App","isSignedIn","BrowserRouter","componenets_NavBar","Route","exact","path","render","componenets_Home","SignIn","SignUp","PasswordReset","componenets_UserProfile","componenets_CreateGroup","componenets_GroupPage","ReactDOM","context","Provider","src_App_0","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2QCA3BC,EAAO,sBCEdC,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1CC,EAAAC,EAAAC,cAACR,EAAgBS,SAAjB,KACK,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAItCV,4BCRfa,EAAQ,KAAUC,SAElB,IAAMA,EAAS,CACXC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,gBCPRM,EDWX,SAAAA,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAMdE,iCAAmC,SAACC,EAAOC,GACvC,OAAOL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAP7CJ,KAUdO,6BAA+B,SAACJ,EAAOC,GACnC,OAAOL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAXzCJ,KAcdS,UAAY,kBAAMV,EAAKM,KAAKK,WAddV,KAgBdW,gBAAkB,SAAAR,GAAW,OAAOJ,EAAKM,KAAKO,uBAAuBT,IAhBvDH,KAkBda,iBAAmB,SAAAT,GAEf,OADaU,IAAIT,OAAOU,YACZC,eAAeZ,IAnB3BU,IAAIG,cAAc3B,GAElBU,KAAKK,KAAOS,IAAIT,mEEgBTa,EA1BW,SAAAC,GAAS,OAAI,SAAAvC,GAAa,IAC1CwC,EAD0C,SAAAC,GAAA,SAAAD,IAAA,OAAAjC,OAAAc,EAAA,EAAAd,CAAAa,KAAAoB,GAAAjC,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAiC,GAAAI,MAAAxB,KAAAyB,YAAA,OAAAtC,OAAAuC,EAAA,EAAAvC,CAAAiC,EAAAC,GAAAlC,OAAAwC,EAAA,EAAAxC,CAAAiC,EAAA,EAAAQ,IAAA,oBAAAC,MAAA,WAExB,IAAA9B,EAAAC,KAChBA,KAAK8B,SAAW9B,KAAKnB,MAAMK,SAASmB,KAAK0B,mBACrC,SAAAC,GACSb,EAAUa,IACXjC,EAAKlB,MAAMoD,QAAQC,KJXrB,eIK8B,CAAAN,IAAA,uBAAAC,MAAA,WAaxC7B,KAAK8B,aAbmC,CAAAF,IAAA,SAAAC,MAAA,WAiBxC,OACI/C,EAAAC,EAAAC,cAACJ,EAAcoB,KAAKnB,WAlBgBuC,EAAA,CAChB3C,IAAMG,WAsBtC,OAAOuD,YAAQC,IAAYzD,EAApBwD,CAAkCf,KCtBvCiB,EAAa,CACfC,MAAO,MACPC,OAAQ,QAYNC,EAAe,CACjBrC,MAAO,GACPsC,MAAO,MAGLC,cACF,SAAAA,EAAY7D,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA0C,IACf3C,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAuD,GAAAC,KAAA3C,KAAMnB,KAKV+D,SAAW,SAAAC,GAAS,IACR1C,EAAUJ,EAAK+C,MAAf3C,MAERJ,EAAKlB,MAAMK,SACNyB,gBAAgBR,GAChB4C,KAAK,WACFhD,EAAKiD,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBqD,IACnBzC,EAAKlB,MAAMoD,QAAQC,KAAKgB,KAE3BC,MAAM,SAAAV,GACH1C,EAAKiD,SAAS,CAAEP,YAGxBI,EAAMO,kBAnBSrD,EAsBnBsD,SAAW,SAAAR,GACP9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SApBlD9B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,GAHHzC,wEA0BV,IAAA0D,EACoBzD,KAAK8C,MAAtB3C,EADHsD,EACGtD,MAAOsC,EADVgB,EACUhB,MAETiB,EAAsB,KAAVvD,EAElB,OACIrB,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBACZf,SAAU5C,KAAK4C,UACdH,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACpB9E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,SACI2E,UAAU,aACVE,MAAOxB,EACPmB,KAAK,QACL3B,MAAO7B,KAAK8C,MAAM3C,MAClBkD,SAAUrD,KAAKqD,SACfS,KAAK,OACLC,YAAY,mBAGpBjF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACf7E,EAAAC,EAAAC,cAAA,UACI2E,UAAU,oCACVK,SAAUN,EACVI,KAAK,UAHT,2BAjDgBlF,aA4D9BqF,EAAoB,kBACtBnF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GLrFe,kBKqFWrF,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,mBAAlB,uBAMzBzC,IAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAlFW,kBACtBpC,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoF,EAAD,SA+EFA,EAAoBjC,YAAQC,IAAYzD,EAApBwD,CAAkCO,GCxFtDL,EAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,EAAa,CACfC,aAAc,OAWZ9B,EAAe,CACjBrC,MAAO,GACPC,SAAU,GACVqC,MAAO,MAGL8B,cACF,SAAAA,EAAY1F,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAuE,IACfxE,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAoF,GAAA5B,KAAA3C,KAAMnB,KAIV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GACK0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAPvB9B,EAWnB0E,aAAe,SAAA5B,GACXA,EAAMO,iBADc,IAAAK,EAGQ1D,EAAK+C,MAAzB3C,EAHYsD,EAGZtD,MAAOC,EAHKqD,EAGLrD,SAEfL,EAAKlB,MAAMK,SACNqB,6BAA6BJ,EAAOC,GACpC2C,KAFL5D,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAEU,SAAAC,IAAA,OAAAF,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACFlF,EAAKiD,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBqD,IACnBzC,EAAKlB,MAAMoD,QAAQC,KAAKgB,GAFtB,wBAAA6B,EAAAG,SAAAL,EAAA7E,UAILmD,MAAM,SAAAV,GACH1C,EAAKiD,SAAS,CAAEP,aArBxB1C,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,GAFHzC,wEA2BV,IAAAoF,EAC8BnF,KAAK8C,MAAhC3C,EADHgF,EACGhF,MAAOC,EADV+E,EACU/E,SAAUqC,EADpB0C,EACoB1C,MAEnBiB,EAAyB,KAAbtD,GAA6B,KAAVD,EAErC,OACIrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAECyD,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SAEpB9E,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC7C3F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,EAAYe,QAAQ,SAAzD,WAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACPyB,KAAK,OACLN,KAAK,QACLO,YAAY,QACZlC,MAAO7B,KAAK8C,MAAM3C,MAClBkD,SAAUrD,KAAKwE,iBAI3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,EAAYe,QAAQ,YAAzD,eAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,WACZD,KAAK,WACLN,KAAK,WACL3B,MAAO7B,KAAK8C,MAAM1C,SAClBiD,SAAUrD,KAAKwE,iBAI3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACf7E,EAAAC,EAAAC,cAAA,UACI2E,UAAU,oCACVK,SAAUN,EACVI,KAAK,UAHT,WAMRhF,EAAAC,EAAAC,cAACqG,EAAD,cA9EazG,aAoFvB0G,EAAanD,YAAQC,IAAYzD,EAApBwD,CAAkCoC,GAE/CgB,EAAa,kBACfzG,EAAAC,EAAAC,cAAA,qCAC6BF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GNrHjB,WMqHoCrF,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,mBAAlB,cAI3C6B,EA1GI,kBACf1G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAACyG,EAAD,QCXFpD,EAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,EAAa,CACfC,aAAc,OAGZ9B,EAAe,CACjBkD,SAAU,GACVtF,SAAU,GACVuF,gBAAiB,GACjBxF,MAAO,GACPyF,UAAW,GACXC,SAAU,GACVC,WAAY,KACZrD,MAAO,KACPsD,YAAY,EACZC,eAAe,EACfC,eAAe,EACfC,aAAc,IAYZC,cACF,SAAAA,EAAYtH,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmG,IACfpG,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAgH,GAAAxD,KAAA3C,KAAMnB,KAIV4F,aALmB,eAAA2B,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAKJ,SAAAC,EAAMhC,GAAN,IAAAY,EAAAiC,EAAAvF,EAAAC,EAAAwF,EAAAC,EAAA,OAAAlB,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXpC,EAAMO,kBAIFrD,EAAKsG,kBALE,CAAAtB,EAAAE,KAAA,eAAAxB,EAMoD1D,EAAK+C,MAAxD4C,EANDjC,EAMCiC,SAAUvF,EANXsD,EAMWtD,MAAOC,EANlBqD,EAMkBrD,SAAUwF,EAN5BnC,EAM4BmC,UAAWC,EANvCpC,EAMuCoC,SANvCd,EAAAE,KAAA,EAQkBqB,IAAMC,KAAN,eAA2B,CAAEb,WAAUvF,QAAOyF,YAAWC,aAR3E,UAUmB,MAVnBd,EAAAyB,KAUQC,OAVR,CAAA1B,EAAAE,KAAA,eAAAF,EAAA2B,OAAA,SAWI3G,EAAKlB,MAAMK,SACbgB,iCAAiCC,EAAOC,GACxC2C,KAAK,SAAAf,GAEFjC,EAAKiD,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBqD,IACnBzC,EAAKlB,MAAMoD,QAAQC,KAAKgB,KAE3BC,MAAM,SAAAV,GACHkE,QAAQC,IAAInE,GACZ1C,EAAKiD,SAAS,CAAEP,aApBrB,uCAAAsC,EAAAG,SAAAL,EAAA7E,SALI,gBAAA6G,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAAA1B,EA+BnByE,aAAe,SAAA3B,GAEX,IAAMW,EAAOX,EAAMU,OAAOC,KACpB3B,EAAQgB,EAAMU,OAAO1B,MAE3B9B,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,OAC9C,kBAAM9B,EAAK+G,aAAatD,EAAM3B,MArCnB9B,EAyCnBsG,gBAAkB,WACd,IAAIU,EAAgB,EAChBC,EAAkB,GAatB,OAZKjH,EAAK+C,MAAMiD,aACZgB,IACAC,EAAgB9E,KAAhB,6BAECnC,EAAK+C,MAAMmD,gBACZc,IACAC,EAAgB9E,KAAhB,gIAECnC,EAAK+C,MAAMkD,gBACZe,IACAC,EAAgB9E,KAAhB,6EAEA6E,EAAgB,KAChBhH,EAAKiD,SAAS,CAAEkD,aAAcc,KACvB,IA1DIjH,EAgEnB+G,aAAe,SAACG,EAAWpF,GACvB,IAAIqF,EAEJ,OAAQD,GACJ,YAEIC,IADiBrF,EAAMsF,MAAM,sJAE7BpH,EAAKiD,SAAS,CAAE+C,WAAYmB,IAC5B,MACJ,eACI,IAAIE,EAAgBvF,EAAMwF,QAAU,EAChCC,EAAqBzF,EAAMsF,MAAM,SACrCD,KAAaE,IAAiBE,GAC9BvH,EAAKiD,SAAS,CAAEgD,cAAekB,IAC/B,MACJ,eACI,IAAIK,EAAgB1F,EAAMsF,MAAM,oBAC5BK,EAAiB3F,EAAMwF,QAAU,GAAKxF,EAAMwF,QAAU,GAC1DH,KAAaK,IAAiBC,GAC9BzH,EAAKiD,SAAS,CAAEiD,cAAeiB,MAjFvCnH,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,GAFHzC,wEA0FV,IAAAoF,EAC2FnF,KAAK8C,MAA7F4C,EADHP,EACGO,SAAUvF,EADbgF,EACahF,MAAOsH,EADpBtC,EACoBsC,YAAaC,EADjCvC,EACiCuC,YAAa9B,EAD9CT,EAC8CS,UAAWC,EADzDV,EACyDU,SAAUpD,EADnE0C,EACmE1C,MAAOyD,EAD1Ef,EAC0Ee,aAEzExC,EACF+D,IAAgBC,GACA,KAAhBD,GACU,KAAVtH,GACc,KAAdyF,GACa,KAAbC,GACAH,EAAS2B,OAAS,GAClBI,EAAc,EAElB,OACI3I,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WAECyD,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACnBsC,GAAgBA,EAAayB,IAAI,SAAC/D,EAASgE,GAAV,OAAgB9I,EAAAC,EAAAC,cAAA,KAAG4C,IAAKgG,GAAIhE,KAE9D9E,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC7C3F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,QAAQvB,MAAOQ,GAArD,WAEJvF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACPyB,KAAK,OACL+D,GAAG,QACHrE,KAAK,QACLO,YAAY,wBACZlC,MAAO7B,KAAK8C,MAAM3C,MAClBkD,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,WAAWvB,MAAOQ,GAAxD,WAA4EvF,EAAAC,EAAAC,cAAA,WAA5E,oDAEJF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,WACZD,KAAK,WACLN,KAAK,WACL3B,MAAO7B,KAAK8C,MAAM1C,SAClBiD,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,kBAAkBvB,MAAOQ,GAA/D,sBAEJvF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,mBACZD,KAAK,WACLN,KAAK,kBACL3B,MAAO7B,KAAK8C,MAAM6C,gBAClBtC,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,WAAWvB,MAAOQ,GAAxD,WAA4EvF,EAAAC,EAAAC,cAAA,WAA5E,wFAEJF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,gBACZD,KAAK,WACLN,KAAK,WACL3B,MAAO7B,KAAK8C,MAAM4C,SAClBrC,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,YAAYvB,MAAOQ,GAAzD,iBAEJvF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,WACZD,KAAK,YACLN,KAAK,YACL3B,MAAO7B,KAAK8C,MAAM8C,UAClBvC,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAayB,QAAQ,WAAWvB,MAAOQ,GAAxD,gBAEJvF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,EACP0B,YAAY,UACZD,KAAK,WACLN,KAAK,WACL3B,MAAO7B,KAAK8C,MAAM+C,SAClBxC,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACf7E,EAAAC,EAAAC,cAAA,UACIgF,SAAUN,EACVC,UAAU,oCACVG,KAAK,UAHT,qBAlNKlF,aA8NvBkJ,EAAa3F,YAAQC,IAAYzD,EAApBwD,CAAkCgE,GAG/C4B,EAAa,kBACfjJ,EAAAC,EAAAC,cAAA,mCAC2BF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GP5Qf,WO4QkCrF,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,mBAAlB,cAIzCqE,EAhPI,kBACflJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC8I,EAAD,MACAhJ,EAAAC,EAAAC,cAACiJ,EAAD,QCjCFC,UAAW,CACfC,SAAS,SASIxJ,KANO,SAAAyH,GAAA,IAAGlH,EAAHkH,EAAGlH,SAAH,OACpBJ,EAAAC,EAAAC,cAAA,UAAQ6E,MAAOqE,EAAUvE,UAAU,eAAeyE,QAASlJ,EAASuB,WAApE,oFCFI4H,GAAY,CACdC,OAAQ,qBACRC,aAAc,MACdC,WAAY,MACZC,YAAa,MACblG,OAAQ,OACRmG,SAAU,QAERR,GAAW,CACbC,SAAS,QAMPQ,eACF,SAAAA,EAAY9J,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2I,IACf5I,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAwJ,GAAAhG,KAAA3C,KAAMnB,KACDiE,MAAQ,CACT8F,UAAW,GACXnG,MAAO,KACPoG,WAAW,GALA9I,mFAUXC,KAAKnB,MAAM+J,YACX5I,KAAKgD,SAAS,CAAE4F,UAAW5I,KAAKnB,MAAM+J,YACtC5I,KAAK8I,4DAIMC,GACX/I,KAAKnB,MAAM+J,YAAcG,EAAUH,YACnC5I,KAAKgD,SAAS,CAAE4F,UAAW5I,KAAKnB,MAAM+J,YACtC5I,KAAK8I,yDAKL9I,KAAKnB,MAAM+J,UAAUvB,OAAS,GAC9BrH,KAAKgD,SAAS,CAAE6F,WAAW,qCAK1B,IAAApF,EAC4BzD,KAAK8C,MAA9B8F,EADHnF,EACGmF,UAAWC,EADdpF,EACcoF,UACnB,OACI/J,EAAAC,EAAAC,cAAA,WACK6J,EAAaD,EAAUjB,IAAI,SAAAqB,GAAO,OAAIlK,EAAAC,EAAAC,cAACiK,GAAD,CAAWrH,IAAKoH,EAASA,QAASA,MAAiBlK,EAAAC,EAAAC,cAACkK,GAAD,cAnCvFtK,aAyCbuK,GAAU,WACZ,OACIrK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,0IAMNoK,eACF,SAAAA,EAAYvK,GAAO,IAAAwK,EAAA,OAAAlK,OAAAc,EAAA,EAAAd,CAAAa,KAAAoJ,IACfC,EAAAlK,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAiK,GAAAzG,KAAA3C,KAAMnB,KAmBVyK,aApBmB,eAAAlD,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAoBJ,SAAAC,EAAOmE,GAAP,IAAAO,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcqB,IAAMkD,IAAN,qBAAAC,OAA+BT,IAD7C,OAGe,OAFpBO,EADKxE,EAAAyB,MAGIC,QACX4C,EAAKrG,SAAS,CACV0G,UAAWH,EAAWI,KAAKnG,KAC3BoG,YAAaL,EAAWI,KAAKC,YAC7BC,iBAAkBN,EAAWI,KAAKE,kBACnC,WAGCvD,IAAMwD,IAAI,CAACT,EAAKU,cAAeV,EAAKW,gBAAgBjH,KAAKuD,IAAM2D,OAAO,SAACC,EAAUC,GACrD,MAApBD,EAASzD,QACT4C,EAAKrG,SAAS,CACVoH,UAAWF,EAASP,KAAKU,MACzBC,UAAWJ,EAASP,KAAKY,QAI7BJ,EAASR,KAAKtC,OAAS,GACvBgC,EAAKrG,SAAS,CACVwH,OAAQL,EAASR,KAAK,GAAGc,KACzBC,KAAMP,EAASR,KAAK,GAAGe,YAtBhC,wBAAA3F,EAAAG,SAAAL,MApBI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAAA4H,EAmDnBU,YAAc,WACV,OAAOzD,IAAMkD,IAAN,oBAAAC,OAA8BJ,EAAKvG,MAAM8G,eApDjCP,EAuDnBW,YAAc,WACV,OAAO1D,IAAMkD,IAAN,wBAAAC,OAAkCJ,EAAKxK,MAAMmK,WAtDpDK,EAAKvG,MAAQ,CACT4G,UAAW,GACXE,YAAa,GACbC,iBAAkB,EAClBpH,MAAO,KACP2H,UAAW,GACXE,UAAW,GACXE,OAAQ,GACRE,KAAM,IAVKrB,mFAef,IAAML,EAAUhJ,KAAKnB,MAAMmK,QAC3BhJ,KAAKsJ,aAAaN,oCA2Cb,IAAA7D,EACuEnF,KAAK8C,MAAzE+G,EADH1E,EACG0E,iBAAkBS,EADrBnF,EACqBmF,UAAWF,EADhCjF,EACgCiF,UAAWI,EAD3CrF,EAC2CqF,OAAQE,EADnDvF,EACmDuF,KAAMhB,EADzDvE,EACyDuE,UACxDiB,EAAW,IAAIC,KAAK5K,KAAK8C,MAAM4H,MAC7B1B,EAAYhJ,KAAKnB,MAAjBmK,QAER,OACIlK,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKC,GAAG,KACJhM,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAMlH,MAAOwE,IACTvJ,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACIlM,EAAAC,EAAAC,cAACiM,GAAA,EAAD,KACInM,EAAAC,EAAAC,cAAA,cAAS0K,IAEb5K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkM,GAAA,EAAD,KACIpM,EAAAC,EAAAC,cAAA,iCAAiC6K,IAGzC/K,EAAAC,EAAAC,cAACmM,GAAA,EAAD,CAASC,KAAG,EAAC9I,MAAM,QAAQ+I,IAAKf,EAAWgB,IAAKlB,IAChDtL,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACIlM,EAAAC,EAAAC,cAACuM,GAAA,EAAD,KACKf,GAAU1L,EAAAC,EAAAC,cAACwM,GAAD,CAAYhB,OAAQA,IAC/B1L,EAAAC,EAAAC,cAAA,WACC0L,GAAQC,EAASc,kBAEtB3M,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GAAE,UAAAsF,OAAYT,IAChBlK,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,mBAAlB,yBArFJ/E,aA8FlB8M,eACF,SAAAA,EAAY7M,GAAO,IAAA8M,EAAA,OAAAxM,OAAAc,EAAA,EAAAd,CAAAa,KAAA0L,IACfC,EAAAxM,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAuM,GAAA/I,KAAA3C,KAAMnB,KAMV+M,kBAAoB,WAEhBD,EAAKE,eATUF,EAYnBE,YAZmB1M,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAYL,SAAAkH,IAAA,IAAAvC,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EACeqB,IAAMkD,IAAN,oBAAAC,OAA8BkC,EAAK9M,MAAM2L,SADxD,OAEgB,OADpBjB,EADIwC,EAAAvF,MAEKC,OACXkF,EAAK3I,SAAS,CAAE0C,SAAU6D,EAAWI,KAAKqC,MAAMtG,WAEhDiG,EAAK3I,SAAS,CAAEP,MAAO8G,EAAWI,OAL5B,wBAAAoC,EAAA7G,SAAA4G,MAVVH,EAAK7I,MAAQ,CACT4C,SAAU,IAHCiG,wEAsBf,OACI7M,EAAAC,EAAAC,cAACiN,EAAA,SAAD,sBACmBjM,KAAK8C,MAAM4C,iBAzBjB9G,aA+BnBsN,GAAW,kBACbpN,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GAAIjB,GACNpE,EAAAC,EAAAC,cAAA,UAAQ6E,MAAOqE,GAAUvE,UAAU,gBAAnC,UAMOzC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6ByH,4CCrMtCwD,GAAQC,KAAiBC,MAEzBhK,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAGZ9B,GAAe,CACjBkH,UAAW,GACX4C,iBAAkB,GAClB7J,MAAO,MAGLyF,GAAW,CACbC,SAAS,QAIPoE,eACF,SAAAA,EAAY1N,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAuM,IACfxM,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAoN,GAAA5J,KAAA3C,KAAMnB,KAIV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GACK0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAPvB9B,EAWnB0E,aAXmB,eAAA2B,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAWJ,SAAAC,EAAMhC,GAAN,IAAA2J,EAAA/I,EAAAiG,EAAA4C,EAAA/C,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXpC,EAAMO,iBAEAoJ,EAAgBzM,EAAKlB,MAAM4N,OAHtBhJ,EAK6B1D,EAAK+C,MAArC4G,EALGjG,EAKHiG,UAAW4C,EALR7I,EAKQ6I,iBALRvH,EAAAE,KAAA,EAOcqB,IAAMC,KAAK,mBAAoB,CAAEiG,gBAAe9C,YAAW4C,qBAPzE,OAOL/C,EAPKxE,EAAAyB,KASX2F,GAAMO,KAAK,CACP5I,KAAM,UACNuG,MAAK,GAAAZ,OAAKC,EAAL,aACLiD,KAAM,0EAGV5M,EAAKlB,MAAMoD,QAAQC,KAAnB,UAAAuH,OAAkCF,EAAWI,KAAKiD,MAfvC,wBAAA7H,EAAAG,SAAAL,MAXI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,IAFHzC,wEA6BV,IAAAoF,EAC0CnF,KAAK8C,MAA5C4G,EADHvE,EACGuE,UAAW4C,EADdnH,EACcmH,iBAAkB7J,EADhC0C,EACgC1C,MAE/BiB,EAA0B,KAAdgG,GAAyC,KAArB4C,EAEtC,OACIxN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAECyD,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACpB9E,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC7C3F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,aAAzD,gBAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,YACLO,YAAY,aACZlC,MAAO7B,KAAK8C,MAAM4G,UAClBrG,SAAUrD,KAAKwE,iBAI3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,oBAAzD,uBAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACP0B,YAAY,cACZP,KAAK,mBACL3B,MAAO7B,KAAK8C,MAAMwJ,iBAClBjJ,SAAUrD,KAAKwE,iBAI3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACf7E,EAAAC,EAAAC,cAAA,UACI2E,UAAU,oCACVK,SAAUN,EACVI,KAAK,UAHT,8BAxEElF,aAmFpBiO,GAAkB,kBACpB/N,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GV5GiB,gBU6GnBrF,EAAAC,EAAAC,cAAA,UAAQ6E,MAAOqE,GAAUvE,UAAU,gBAAnC,kBAMOzC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BqL,2EC3GtCO,GAAa,CACfC,gBAAiB,UACjBzK,MAAO,OACPC,OAAQ,OACRmG,SAAU,SAEVsE,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAIhBhF,GAAW,CACbC,SAAU,OACVgF,MAAO,SA0DIC,GAvDA,SAACvO,GACZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ6E,MAAOiJ,GACXnJ,UAAU,UAEV7E,EAAAC,EAAAC,cAAA,OAAK6E,MAAOqE,IACRpJ,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,KACI/L,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAQH,MAAM,OAAOI,MAAI,EAACC,OAAO,MAC5B3O,EAAMmD,SAAYlD,EAAAC,EAAAC,cAAA,eACfF,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAK9J,UAAU,UAAU+J,QAAM,GAC3B5O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,KACI7O,EAAAC,EAAAC,cAAC4O,GAAD,OAEJ9O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,KACI7O,EAAAC,EAAAC,cAAC6O,GAAD,OAEJ/O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,KACI7O,EAAAC,EAAAC,cAAC8O,GAAD,SAMJhP,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAACyO,GAAA,EAAD,CAAK5J,MAAOqE,GAAUvE,UAAU,UAAU+J,QAAM,GAC5C5O,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,KACI7O,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAASC,KXzDvC,WWyD8B,YAEJlP,EAAAC,EAAAC,cAAC2O,GAAA,EAAD,KACI7O,EAAAC,EAAAC,cAAC+O,GAAA,EAAD,CAASC,KX7DvC,WW6D8B,kBAUpClP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKC,GAAI,CAAEmD,KAAM,IAAKC,OAAQ,IAC1BpP,EAAAC,EAAAC,cAAA,OAAKqM,IAAK8C,KAAM7C,IAAI,OAAO/I,OAAO,QAAQD,MAAM,eClEtED,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAGZ8J,GAAc,CAChBhO,SAAU,GACViO,gBAAiB,GACjB5L,MAAO,KACPuD,eAAe,EACfE,aAAc,IAGZoI,eACF,SAAAA,EAAYzP,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAsO,IACfvO,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAmP,GAAA3L,KAAA3C,KAAMnB,KAKV4F,aAAe,SAAA5B,GAIX,GAHAA,EAAMO,iBAGFrD,EAAKsG,kBAAmB,KAChBjG,EAAaL,EAAK+C,MAAlB1C,SAERL,EAAKlB,MAAMK,SACN2B,iBAAiBT,GACjB2C,KAAK,WACFhD,EAAKiD,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBiP,KACnBrO,EAAKlB,MAAMoD,QAAQC,KAAKgB,KAE3BC,MAAM,SAAAV,GACH1C,EAAKiD,SAAS,CAAEP,cApBb1C,EAyBnByE,aAAe,SAAA3B,GAEX,IAAMW,EAAOX,EAAMU,OAAOC,KACpB3B,EAAQgB,EAAMU,OAAO1B,MAE3B9B,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,OAC9C,kBAAM9B,EAAK+G,aAAatD,EAAM3B,MA/BnB9B,EAkCnBsG,gBAAkB,WACd,IAAIU,EAAgB,EAChBC,EAAkB,GAKtB,OAJKjH,EAAK+C,MAAMkD,gBACZe,IACAC,EAAgB9E,KAAhB,6EAEA6E,EAAgB,KAChBhH,EAAKiD,SAAS,CAAEkD,aAAcc,KACvB,IA3CIjH,EAkDnB+G,aAAe,SAACG,EAAWpF,GACvB,IAAIqF,EACAE,EAAgBvF,EAAMwF,QAAU,EAChCC,EAAqBzF,EAAMsF,MAAM,SACrCD,KAAaE,IAAiBE,GAC9BvH,EAAKiD,SAAS,CAAEgD,cAAekB,KApD/BnH,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBiP,IAHHrO,wEA0DV,IAAA0D,EACsDzD,KAAK8C,MAAxD1C,EADHqD,EACGrD,SAAUiO,EADb5K,EACa4K,gBAAiB5L,EAD9BgB,EAC8BhB,MAAOyD,EADrCzC,EACqCyC,aAEpCxC,EACFtD,IAAaiO,GAAgC,KAAbjO,EAEpC,OACItB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACCkH,GAAgBA,EAAayB,IAAI,SAAC/D,EAASgE,GAAV,OAAgB9I,EAAAC,EAAAC,cAAA,KAAG4C,IAAKgG,GAAIhE,KAC9D9E,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC5ChC,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACpB9E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,YAAzD,kBAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPmB,KAAK,WACL3B,MAAOzB,EACPiD,SAAUrD,KAAKwE,aACfV,KAAK,WACLC,YAAY,kBAGpBjF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,qBACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,mBAAzD,sBAEJtG,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPmB,KAAK,kBACL3B,MAAOwM,EACPhL,SAAUrD,KAAKwE,aACfV,KAAK,WACLC,YAAY,0BAGpBjF,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACf7E,EAAAC,EAAAC,cAAA,UACI2E,UAAU,oCACVK,SAAUN,EACVI,KAAK,UAHT,6BApGSlF,aAkHlBsC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BiB,YAAQC,IAAYzD,EAApBwD,CAAkCmM,KCtIxEjM,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAGZiK,GAAqB,CACvB7I,SAAU,GACVvF,MAAO,GACPyF,UAAW,GACXC,SAAU,GACVE,YAAY,EACZE,eAAe,EACfC,aAAc,IAGZsI,GAAsB,CACxBC,WAAY,GACZC,QAAS,GACTC,YAAa,GACbC,WAAY,GACZC,eAAe,GAGbC,eACF,SAAAA,EAAYjQ,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA8O,IACf/O,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAA2P,GAAAnM,KAAA3C,KAAMnB,KAoBVkQ,iBAAmB,SAACC,GACZjP,EAAKlB,MAAM4N,SAAWuC,GACtBjP,EAAKiD,SAAS,CACV6L,eAAe,KAxBR9O,EA6BnBkP,eAAiB,WACblP,EAAKmP,YAAYnP,EAAKlB,MAAMsI,MAAMgI,OAAO1C,SA9B1B1M,EAiCnBmP,YAjCmB,eAAA9I,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAiCL,SAAAC,EAAO4H,GAAP,IAAAlD,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeqB,IAAMkD,IAAN,oBAAAC,OAA8BgD,IAD7C,OAEgB,OADpBlD,EADIxE,EAAAyB,MAEKC,QACX1G,EAAKiD,SAAS,CACVyL,WAAYlF,EAAWI,KAAKqC,MAAMtG,SAClCgJ,QAASnF,EAAWI,KAAKqC,MAAM7L,MAC/BwO,YAAapF,EAAWI,KAAKqC,MAAMpG,UACnCgJ,WAAYrF,EAAWI,KAAKqC,MAAMnG,WAPhC,wBAAAd,EAAAG,SAAAL,EAAA7E,SAjCK,gBAAA6G,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAIf1B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqP,IAJHzO,mFAQf,IAAM0M,EAASzM,KAAKnB,MAAMsI,MAAMgI,OAAO1C,OACvCzM,KAAKkP,YAAYzC,GACjBzM,KAAK+O,iBAAiBtC,8CAGP1D,GACf,GAAI/I,KAAKnB,MAAMsI,MAAMgI,OAAO1C,SAAW1D,EAAU5B,MAAMgI,OAAO1C,QAAUzM,KAAKnB,MAAM4N,SAAW1D,EAAU0D,OAAQ,CAC5G,IAAMA,EAASzM,KAAKnB,MAAMsI,MAAMgI,OAAO1C,OACvCzM,KAAKkP,YAAYzC,GACjBzM,KAAK+O,iBAAiBtC,qCA4BrB,IAAAhJ,EACmEzD,KAAK8C,MAArE+L,EADHpL,EACGoL,cAAeJ,EADlBhL,EACkBgL,WAAYC,EAD9BjL,EAC8BiL,QAASC,EADvClL,EACuCkL,YAAaC,EADpDnL,EACoDmL,WAEzD,OACI9P,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKgB,KAAK8C,MAAM2L,WAAhB,cACA3P,EAAAC,EAAAC,cAAA,wBAAgByP,GAChB3P,EAAAC,EAAAC,cAAA,qBAAa0P,GACb5P,EAAAC,EAAAC,cAAA,yBAAiB2P,GACjB7P,EAAAC,EAAAC,cAAA,wBAAgB4P,GACfC,GACG/P,EAAAC,EAAAC,cAACiN,EAAA,SAAD,KACInN,EAAAC,EAAAC,cAACoQ,GAAD,CAAuB3C,OAAQzM,KAAKnB,MAAM4N,OAAQwC,eAAgBjP,KAAKiP,iBACvEnQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqQ,GAAD,eA5DEzQ,aAoEpB0Q,eACF,SAAAA,EAAYzQ,GAAO,IAAAwK,EAAA,OAAAlK,OAAAc,EAAA,EAAAd,CAAAa,KAAAsP,IACfjG,EAAAlK,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAmQ,GAAA3M,KAAA3C,KAAMnB,KAKV4F,aANmB,eAAA8K,EAAApQ,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAMJ,SAAAkH,EAAO0D,GAAP,IAAA3N,EAAA4K,EAAAgD,EAAA,OAAA9K,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,WAEPoE,EAAKhD,gBAAgBmJ,GAFd,CAAAzD,EAAA9G,KAAA,eAGDpD,EAAQwH,EAAKvG,MAAM0M,GACnB/C,EAASpD,EAAKxK,MAAM4N,OACpBgD,EAAUD,EALTzD,EAAA9G,KAAA,EAOkBqB,IAAMoJ,IAAN,kBAA6B,CAAEjD,SAAQ5K,QAAO4N,YAPhE,OASmB,MATnB1D,EAAAvF,KASQC,SACX4C,EAAKxK,MAAMoQ,iBACX5F,EAAKrG,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBoP,MAXhB,gCAAAxC,EAAA7G,SAAA4G,EAAA9L,SANI,gBAAA2P,GAAA,OAAAJ,EAAA/N,MAAAxB,KAAAyB,YAAA,GAAA4H,EAsBnB7E,aAAe,SAAA3B,GAEX,IAAMW,EAAOX,EAAMU,OAAOC,KACpB3B,EAAQgB,EAAMU,OAAO1B,MAE3BwH,EAAKrG,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,OAC9C,kBAAMwH,EAAKvC,aAAatD,EAAM3B,MA5BnBwH,EAgCnBvC,aAAe,SAACG,EAAWpF,GACvB,IAAIqF,EAEJ,OAAQD,GACJ,YAEIC,IADiBrF,EAAMsF,MAAM,sJAE7BkC,EAAKrG,SAAS,CAAE+C,WAAYmB,IAC5B,MACJ,eACI,IAAIK,EAAgB1F,EAAMsF,MAAM,oBAC5BK,EAAiB3F,EAAMwF,QAAU,GAAKxF,EAAMwF,QAAU,GAC1DH,KAAaK,IAAiBC,GAC9B6B,EAAKrG,SAAS,CAAEiD,cAAeiB,MA7CxBmC,EAoDnBhD,gBAAkB,SAACmJ,GAGf,MAAuB,UAAnBA,GAA+BnG,EAAKvG,MAAMiD,aAKvB,aAAnByJ,IAAkCnG,EAAKvG,MAAMmD,iBAC7CoD,EAAKrG,SAAS,CAAEkD,aAAY,iIACrB,IANPmD,EAAKrG,SAAS,CAAEkD,aAAY,8BACrB,IAtDXmD,EAAKvG,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBoP,IAHHlF,wEAoEV,IAAAsC,EAAA3L,KAAAmF,EAC0DnF,KAAK8C,MAA5D4C,EADHP,EACGO,SAAUvF,EADbgF,EACahF,MAAOyF,EADpBT,EACoBS,UAAWC,EAD/BV,EAC+BU,SAAUK,EADzCf,EACyCe,aAExC0J,EAAiC,KAAblK,EACpBmK,EAA2B,KAAV1P,EACjB2P,EAAmC,KAAdlK,EACrBmK,EAAiC,KAAblK,EAE1B,OACI/G,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACVuC,GAAgBpH,EAAAC,EAAAC,cAAA,SAAIkH,GACrBpH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO6E,MAAOQ,IAAd,aACAvF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,WACLO,YAAY,kBACZlC,MAAO6D,EACPrC,SAAUrD,KAAKwE,eACnB1F,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,kBACdK,SAAU4L,EACVxH,QAAS,kBAAMuD,EAAKlH,aAAa,cAFrC,mBAIA3F,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO6E,MAAOQ,IAAd,UACAvF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,QACLO,YAAY,eACZlC,MAAO1B,EACPkD,SAAUrD,KAAKwE,eACnB1F,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,kBACdK,SAAU6L,EACVzH,QAAS,kBAAMuD,EAAKlH,aAAa,WAFrC,gBAIA3F,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO6E,MAAOQ,IAAd,eACAvF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,YACLO,YAAY,mBACZlC,MAAO+D,EACPvC,SAAUrD,KAAKwE,eACnB1F,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,kBACdK,SAAU8L,EACV1H,QAAS,kBAAMuD,EAAKlH,aAAa,eAFrC,oBAIA3F,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAO6E,MAAOQ,IAAd,cACAvF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,WACLO,YAAY,kBACZlC,MAAOgE,EACPxC,SAAUrD,KAAKwE,eACnB1F,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,kBACdK,SAAU+L,EACV3H,QAAS,kBAAMuD,EAAKlH,aAAa,cAFrC,mBAGA3F,EAAAC,EAAAC,cAAA,mBAtIoBJ,aA8IrBsC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6B4N,IC9OtCtM,GAAe,CACjB6H,MAAO,GACPE,MAAO,GACPyF,QAAS,GACTvN,MAAO,MAGLwN,GAAmB,CACrBC,SAAU,WACV3N,OAAQ,OACRD,MAAO,QACPiG,aAAc,OACdD,OAAQ,kBAcN6H,eACF,SAAAA,EAAYtR,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmQ,IACfpQ,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAgR,GAAAxN,KAAA3C,KAAMnB,KAkBVuR,eAnBmB,eAAAhK,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAmBF,SAAAC,EAAOwL,GAAP,IAAA9G,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYqB,IAAMkD,IAAN,oBAAAC,OAA8B4G,IAD1C,OAEa,OADpB9G,EADOxE,EAAAyB,MAEEC,OACX1G,EAAKiD,SAAS,CACVqH,MAAOd,EAAWI,KAAKU,MACvBE,MAAOhB,EAAWI,KAAKY,MACvByF,QAASzG,EAAWI,KAAKqG,UAG7BjQ,EAAKiD,SAAS,CACVP,MAAO8G,EAAWI,KAAKlH,QAVlB,wBAAAsC,EAAAG,SAAAL,MAnBE,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,IAFHzC,mFAMf,IAAMsQ,EAASrQ,KAAKnB,MAAM+K,YACtByG,GACArQ,KAAKoQ,eAAeC,8CAITtH,GACf,GAAI/I,KAAKnB,MAAM+K,cAAgBb,EAAUa,YAAa,CAClD,IAAMyG,EAASrQ,KAAKnB,MAAM+K,YAC1B5J,KAAKoQ,eAAeC,qCAoBxB,IAAMC,EAAsBtQ,KAAKnB,MAAMgL,iBAAmB7J,KAAKnB,MAAM0R,eAAkB,IADlFC,EAEwCxQ,KAAKnB,MAA1CgL,EAFH2G,EAEG3G,iBAAkB0G,EAFrBC,EAEqBD,eAFrB9M,EAGoBzD,KAAK8C,MAAtBuH,EAHH5G,EAGG4G,MAAOE,EAHV9G,EAGU8G,MAEf,OACIzL,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,+BACFF,EAAAC,EAAAC,cAAA,WACCqL,EACDvL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKsD,MAAM,OAAOC,OAAO,MAAM8I,IAAKd,EAAOe,IAAG,GAAA7B,OAAKY,MAGvDvL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,oCACFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyR,GAAD,CAAaC,WAAYJ,IACxBzG,EAHL,MAG0B0G,EAH1B,KAIAzR,EAAAC,EAAAC,cAAA,mBAtDUJ,aA6DpB+R,GAAc,SAAC9R,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACXE,MAAOoM,IACPnR,EAAAC,EAAAC,cAAC4R,GAAD,CAAWF,WAAY7R,EAAM6R,eAKnCG,GAAY,SAAChS,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,SACXE,MAAO,CACHiJ,WAAY,UACZvK,OAAQ,OACRgG,aAAc,UACduI,WAAY,oBACZxO,MAAK,GAAAmH,OAAK5K,EAAM6R,WAAX,SAKNP,gBCzGThE,GAAQC,KAAiBC,MAEzBhK,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAQZyM,eACF,SAAAA,EAAYlS,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA+Q,IACfhR,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAA4R,GAAApO,KAAA3C,KAAMnB,KASV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GACK0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAZvB9B,EAgBnB0E,aAhBmB,eAAA2B,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAgBJ,SAAAC,EAAMhC,GAAN,IAAAmO,EAAAC,EAAA1H,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXpC,EAAMO,iBACE4N,EAAejR,EAAK+C,MAApBkO,WAGFC,EAAiBD,EAAWE,OAAOC,MAAM,KAAKC,KAAK,KAEzDrR,EAAKiD,SAAS,CAAEqO,SAAS,IAPdtM,EAAAE,KAAA,EAQcqB,IAAMkD,IAAN,mBAAAC,OAA6BwH,IAR3C,OAUe,OAFpB1H,EARKxE,EAAAyB,MAUIC,QACX1G,EAAKiD,SAAS,CAAEqO,SAAS,IAEzBtR,EAAKiD,SAAS,CAAEsO,UAAW/H,EAAWI,SAEtC5J,EAAKiD,SAAS,CAAEqO,SAAS,IACzBtR,EAAKiD,SAAS,CAAEP,MAAO8G,EAAWI,KAAKlH,SAhBhC,wBAAAsC,EAAAG,SAAAL,MAhBI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAQ,CACTkO,WAAY,GACZvO,MAAO,KACP6O,UAAW,GACXD,SAAS,GANEtR,wEAqCV,IAAAsJ,EAAArJ,KAAAyD,EAC6CzD,KAAK8C,MAA/CkO,EADHvN,EACGuN,WAAYvO,EADfgB,EACehB,MAAO6O,EADtB7N,EACsB6N,UAAWD,EADjC5N,EACiC4N,QAChC3N,EAA2B,KAAfsN,EAElB,OAEIlS,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACVlB,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,GACb4O,EACIvS,EAAAC,EAAAC,cAACuS,GAAA,UAAD,CACGC,IArDP,+CAsDOC,SAAU,KACVlP,OAAQ,EACRD,MAAO,IACP6K,MAAO,UACPkE,QAASA,IAGZvS,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC9C3F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,cAAzD,oBAEJtG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,aACLO,YAAY,yBACZlC,MAAO7B,KAAK8C,MAAMkO,WAClB3N,SAAUrD,KAAKwE,gBAGvB1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,UACIgF,SAAUN,EACVC,UAAU,oCACVG,KAAK,UAHT,kBAQfwN,GAAaA,EAAU3J,IAAI,SAAC+J,EAAM9J,GAAP,OAAa9I,EAAAC,EAAAC,cAAC2S,GAAD,CAAYD,KAAMA,EAAM9P,IAAKgG,EAAGgK,QAASvI,EAAKxK,MAAM+S,QAAS5I,QAASK,EAAKxK,MAAMmK,QAAS6I,WAAYxI,EAAKxK,MAAMgT,uBAhFhJjT,aAwFpBkT,eACF,SAAAA,EAAYjT,GAAO,IAAA8M,EAAA,OAAAxM,OAAAc,EAAA,EAAAd,CAAAa,KAAA8R,IACfnG,EAAAxM,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAA2S,GAAAnP,KAAA3C,KAAMnB,KAMVkT,gBAPmB,eAAAxC,EAAApQ,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAOD,SAAAkH,EAAOzB,GAAP,IAAA2H,EAAAzB,EAAA,OAAA5L,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EAE0BkH,GAAMO,KAAK,CAC/C5I,KAAM,OACNmO,MAAO,SACP5H,MAAK,wBAAAZ,OAA0BY,EAA1B,KACL6H,kBAAkB,EAClBC,eAAgB,SAACtQ,GACb,IAAKA,GAASA,GAAS,EACnB,MAAO,mCATL,OAAAmQ,EAAAjG,EAAAvF,MAEC+J,EAFDyB,EAENnQ,QAYJ8J,EAAKyG,eAAe7B,GAdV,wBAAAxE,EAAA7G,SAAA4G,MAPC,gBAAA6D,GAAA,OAAAJ,EAAA/N,MAAAxB,KAAAyB,YAAA,GAAAkK,EAyBnByG,eAzBmB,eAAAC,EAAAlT,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAyBF,SAAA0N,EAAO/B,GAAP,IAAAgC,EAAAC,EAAAxJ,EAAA4I,EAAA,OAAAjN,EAAA5F,EAAA+F,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,cACPsN,EADOpT,OAAA8D,EAAA,EAAA9D,CAAA,GACWwM,EAAK9M,MAAM6S,MADtBc,EAEgB7G,EAAK9M,MAA1BmK,EAFKwJ,EAELxJ,QAAS4I,EAFJY,EAEIZ,QAFJa,EAAAxN,KAAA,EAIYqB,IAAMC,KAAN,eAA2B,CAAEyC,UAAS4I,UAASW,eAJ3D,OAKa,MALbE,EAAAjM,KAKEC,QACXkF,EAAK+G,kBAAkBnC,EAAgBvH,EAAS4I,EAASW,EAAWlI,OAN3D,wBAAAoI,EAAAvN,SAAAoN,MAzBE,gBAAAK,GAAA,OAAAN,EAAA7Q,MAAAxB,KAAAyB,YAAA,GAAAkK,EAmCnB+G,kBAnCmB,eAAAE,EAAAzT,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAmCC,SAAAiO,EAAOC,EAAY9J,EAAS4I,EAASvH,GAArC,IAAA0I,EAAAC,EAAA,OAAArO,EAAA5F,EAAA+F,KAAA,SAAAmO,GAAA,cAAAA,EAAAjO,KAAAiO,EAAAhO,MAAA,cAAAgO,EAAAhO,KAAA,EACSqB,IAAMoJ,IAAN,uBAAkC,CAAEoD,aAAY9J,UAAS4I,YADlE,UAGU,MAHVqB,EAAAzM,KAGDC,OAHC,CAAAwM,EAAAhO,KAAA,eAAAgO,EAAAhO,KAAA,EAK2BkH,GAAMO,KAAK,CAC9C5I,KAAM,OACNmO,MAAO,SACP5H,MAAK,yCACL6H,kBAAkB,EAClBC,eAAgB,SAACtQ,GACb,IAAKA,GAASA,GAAS,GAAKA,EAAQiR,EAChC,MAAO,gEAZP,OAAAC,EAAAE,EAAAzM,KAKGwM,EALHD,EAKJlR,MAWR8J,EAAKuH,oBAAoBF,EAAehK,EAAS4I,EAASvH,GAhB9C,gCAAA4I,EAAA/N,SAAA2N,MAnCD,gBAAAM,EAAAC,EAAAC,EAAAC,GAAA,OAAAV,EAAApR,MAAAxB,KAAAyB,YAAA,GAAAkK,EAuDnBuH,oBAvDmB,eAAAK,EAAApU,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAuDG,SAAA4O,EAAOR,EAAehK,EAAS4I,EAASvH,GAAxC,OAAA1F,EAAA5F,EAAA+F,KAAA,SAAA2O,GAAA,cAAAA,EAAAzO,KAAAyO,EAAAxO,MAAA,cAAAwO,EAAAxO,KAAA,EACOqB,IAAMoJ,IAAN,uBAAkC,CAAEsD,gBAAehK,UAAS4I,YADnE,OAGQ,MAHR6B,EAAAjN,KAGHC,SACX0F,GAAMO,KAAK,CACP5I,KAAM,UACNuG,MAAK,GAAAZ,OAAKY,EAAL,oBACLsC,KAAM,+EAGVhB,EAAK9M,MAAMgT,WAAX,SAVc,wBAAA4B,EAAAvO,SAAAsO,MAvDH,gBAAAE,EAAAC,EAAAC,EAAAC,GAAA,OAAAN,EAAA/R,MAAAxB,KAAAyB,YAAA,GAAAkK,wEAsEV,IAAAmI,EAAA9T,KAAA+T,EACoE/T,KAAKnB,MAAM6S,KAA5ErH,EADH0J,EACG1J,MAAO2F,EADV+D,EACU/D,QAASgE,EADnBD,EACmBC,YAAazJ,EADhCwJ,EACgCxJ,MAAO0J,EADvCF,EACuCE,UAAWC,EADlDH,EACkDG,cACvD,OACIpV,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,YACX7E,EAAAC,EAAAC,cAAA,WAAMqL,GACNvL,EAAAC,EAAAC,cAAA,WAAMgR,EAAQ,IACdlR,EAAAC,EAAAC,cAAA,WAAMgV,GACNlV,EAAAC,EAAAC,cAAA,OAAKqM,IAAKd,EAAOe,IAAG,GAAA7B,OAAKY,KACzBvL,EAAAC,EAAAC,cAAA,WAAMiV,GACNnV,EAAAC,EAAAC,cAAA,WAAMkV,GACNpV,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,oCAAoCyE,QAAS,kBAAM0L,EAAK/B,gBAAgB1H,KAA1F,6BAjFSzL,aAuFVmS,6EC5LT1M,GAAa,CACf8D,SAAU,QAGR3F,GAAe,CACjB6H,MAAO,GACPsC,KAAM,GACNlK,MAAO,MAGL0R,eACF,SAAAA,EAAYtV,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmU,IACfpU,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAgV,GAAAxR,KAAA3C,KAAMnB,KAIV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SANnC9B,EASnB0E,aATmB,eAAA2B,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KASJ,SAAAC,EAAMhC,GAAN,IAAA2N,EAAA/D,EAAAzD,EAAAoL,EAAA,OAAAzP,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXpC,EAAMO,iBADKoN,EAEiBzQ,EAAKlB,MAAzB4N,EAFG+D,EAEH/D,OAAQzD,EAFLwH,EAEKxH,QAEVoL,EAAW,CACb/J,MAAOtK,EAAK+C,MAAMuH,MAClBsC,KAAM5M,EAAK+C,MAAM6J,MANV5H,EAAAE,KAAA,EAScqB,IAAMC,KAAN,eAA2B,CAAEkG,SAAQzD,UAASoL,aAT5D,OAWe,MAXfrP,EAAAyB,KAWIC,SACX1G,EAAKlB,MAAMwV,cACXtU,EAAKiD,SAAL7D,OAAA8D,EAAA,EAAA9D,CAAA,GAAmBqD,MAbZ,wBAAAuC,EAAAG,SAAAL,MATI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,IAFHzC,wEA4BV,IAAA0D,EAC0BzD,KAAK8C,MAA5B6J,EADHlJ,EACGkJ,KAAMtC,EADT5G,EACS4G,MAAO5H,EADhBgB,EACgBhB,MAEfiB,EAAqB,KAATiJ,GAAyB,KAAVtC,EAEjC,OACIvL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAECyD,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SAEpB9E,EAAAC,EAAAC,cAACsV,GAAA,EAAD,CAAMzQ,MAAOQ,GAAYzB,SAAU5C,KAAKyE,cACpC3F,EAAAC,EAAAC,cAACuV,GAAA,EAAD,KACIzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAOrM,SAAS,OAAOsM,IAAI,QAA3B,cACA3V,EAAAC,EAAAC,cAAC0V,GAAA,EAAD,CAAOvM,SAAS,OAAOrE,KAAK,OAAON,KAAK,QAAQqE,GAAG,eAAe9D,YAAY,oBAAoBlC,MAAO7B,KAAK8C,MAAMuH,MAChHhH,SAAUrD,KAAKwE,gBAEvB1F,EAAAC,EAAAC,cAACuV,GAAA,EAAD,KACIzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAOrM,SAAS,OAAOsM,IAAI,QAA3B,aACA3V,EAAAC,EAAAC,cAAC0V,GAAA,EAAD,CAAOvM,SAAS,OAAOrE,KAAK,WAAWN,KAAK,OAAOqE,GAAG,cAAc9D,YAAY,kBAC5ElC,MAAO7B,KAAK8C,MAAM6J,KAClBtJ,SAAUrD,KAAKwE,gBAEvB1F,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,CAAQhR,UAAU,kBAEdK,SAAUN,EACVI,KAAK,UAHT,wBApDElF,aAkEPsC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BiT,cCvEtCS,GAAU,CACZrS,OAAQ,OACRD,MAAO,OACP4K,iBAAkB,YAClBD,eAAgB,UAChB4H,gBAAe,OAAApL,OAASqL,KAAT,KACfC,UAAW,OACXzQ,aAAc,QAGZoG,GAAO,CACTsK,UAAW,SACX7M,SAAU,MACV7D,aAAc,OACdyQ,UAAW,QAGTE,GAAiB,CACnBF,UAAW,QAGTG,GAAmB,CACrBC,YAAa,QACbC,YAAa,MACbrI,gBAAiB,UACjBgI,UAAW,OACXzQ,aAAc,QAGZ+Q,GAAY,CACdlN,SAAU,OACV6M,UAAW,UAGTM,GAAY,CACdnN,SAAU,QAGR9F,GAAa,CACfC,MAAK,MACLC,OAAM,QAGJ6L,GAAc,CAChBzB,KAAM,GACNlK,MAAO,KACP8S,UAAW,IAGTC,eACF,SAAAA,EAAY3W,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAwV,IACfzV,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAqW,GAAA7S,KAAA3C,KAAMnB,KAeVwV,YAhBmBlV,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAgBL,SAAAC,IAAA,IAAAmE,EAAAO,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJ+D,EAAUjJ,EAAKlB,MAAMmK,QADjBjE,EAAAE,KAAA,EAEeqB,IAAMkD,IAAN,wBAAAC,OAAkCT,IAFjD,OAIgB,OAFpBO,EAFIxE,EAAAyB,MAIKC,QACX1G,EAAKiD,SAAS,CAAEuS,UAAWhM,EAAWI,OALhC,wBAAA5E,EAAAG,SAAAL,MAdV9E,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBiP,IAFHrO,mFAOfC,KAAKqU,yDAGUtL,GACX/I,KAAKnB,MAAMmK,UAAYD,EAAUC,SACjChJ,KAAKqU,+CAaJ,IAAAhL,EAAArJ,KACGuV,EAAcvV,KAAK8C,MAAnByS,UADH/E,EAEuBxQ,KAAKnB,MAAzB4N,EAFH+D,EAEG/D,OAAQzD,EAFXwH,EAEWxH,QAEhB,OACIlK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyW,GAAD,CAAShJ,OAAQzM,KAAKnB,MAAM4N,OAAQzD,QAASA,EAASqL,YAAarU,KAAKqU,cACxEvV,EAAAC,EAAAC,cAAA,mBACCuW,EAAU5N,IAAI,SAAApB,GAAI,OAAIzH,EAAAC,EAAAC,cAAC0W,GAAD,CAAY9T,IAAK2E,EAAKqG,IAAKrG,KAAMA,EAAMkG,OAAQA,EAAQ4H,YAAahL,EAAKgL,wBAlCrFzV,aAyCrB+W,eACF,SAAAA,EAAY9W,GAAO,IAAA8M,EAAA,OAAAxM,OAAAc,EAAA,EAAAd,CAAAa,KAAA2V,IACfhK,EAAAxM,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAwW,GAAAhT,KAAA3C,KAAMnB,KAQV+M,kBAAoB,WAEhBD,EAAKE,eAXUF,EAcnBE,YAdmB1M,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAcL,SAAAkH,IAAA,IAAAvC,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EACeqB,IAAMkD,IAAN,oBAAAC,OAA8BkC,EAAK9M,MAAM0H,KAAKkE,OAD7D,OAEgB,OADpBlB,EADIwC,EAAAvF,MAEKC,OACXkF,EAAK3I,SAAS,CAAE0C,SAAU6D,EAAWI,KAAKqC,MAAMtG,WAEhDiG,EAAK3I,SAAS,CAAEP,MAAO8G,EAAWI,OAL5B,wBAAAoC,EAAA7G,SAAA4G,MAZVH,EAAK7I,MAAQ,CACT4C,SAAU,GACVjD,MAAO,KACPmT,QAAS,IALEjK,wEAuBV,IACGjG,EAAa1F,KAAK8C,MAAlB4C,SADHmQ,EAEiC7V,KAAKnB,MAAM0H,KAAzC8D,EAFHwL,EAEGxL,MAAOsC,EAFVkJ,EAEUlJ,KAAMC,EAFhBiJ,EAEgBjJ,IAAKgJ,EAFrBC,EAEqBD,QAClBnJ,EAAWzM,KAAKnB,MAAhB4N,OACF9B,EAAW,IAAIC,KAAK5K,KAAKnB,MAAM0H,KAAKmE,MAE1C,OACI5L,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAK6E,MAAOqR,IACRpW,EAAAC,EAAAC,cAAA,OAAK6E,MAAOwR,IACRvW,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKiL,GAAG,MACJhX,EAAAC,EAAAC,cAAA,kBAAUqL,EAAV,QAIZvL,EAAAC,EAAAC,cAAA,KAAG6E,MAAOyR,IACNxW,EAAAC,EAAAC,cAAA,cAAS0G,EAAT,OACCiH,GAEL7N,EAAAC,EAAAC,cAAA,OAAK6E,MAAO6G,IACR5L,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKiL,GAAG,MACHnL,EAASc,oBAItB3M,EAAAC,EAAAC,cAAA,WACC4W,EAAQjO,IAAI,SAAAoO,GAAa,OAAIjX,EAAAC,EAAAC,cAACgX,GAAD,CAAapU,IAAKmU,EAAcnJ,IAAKgJ,QAASG,MAC5EjX,EAAAC,EAAAC,cAACiX,GAAD,CAAYC,OAAQtJ,EAAKH,OAAQA,EAAQ4H,YAAarU,KAAKnB,MAAMwV,cACjEvV,EAAAC,EAAAC,cAAA,OAAK6E,MAAO+Q,cAtDPhW,aAgEnBuX,eACF,SAAAA,EAAYtX,GAAO,IAAAiV,EAAA,OAAA3U,OAAAc,EAAA,EAAAd,CAAAa,KAAAmW,IACfrC,EAAA3U,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAgX,GAAAxT,KAAA3C,KAAMnB,KAMV+M,kBAAoB,WAEhBkI,EAAKjI,eATUiI,EAYnBjI,YAZmB1M,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAYL,SAAA0N,IAAA,IAAA/I,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,cACV0B,QAAQC,IAAIkN,EAAKjV,MAAM+W,QAAQnL,MADrBgI,EAAAxN,KAAA,EAEeqB,IAAMkD,IAAN,oBAAAC,OAA8BqK,EAAKjV,MAAM+W,QAAQnL,OAFhE,OAGgB,OADpBlB,EAFIkJ,EAAAjM,MAGKC,OACXqN,EAAK9Q,SAAS,CAAE0C,SAAU6D,EAAWI,KAAKqC,MAAMtG,WAEhDoO,EAAK9Q,SAAS,CAAEP,MAAO8G,EAAWI,OAN5B,wBAAA8I,EAAAvN,SAAAoN,MAVVwB,EAAKhR,MAAQ,CACT4C,SAAU,IAHCoO,wEAsBV,IACGpO,EAAa1F,KAAK8C,MAAlB4C,SACAiH,EAAS3M,KAAKnB,MAAM+W,QAApBjJ,KACFyJ,EAAc,IAAIxL,KAAK5K,KAAKnB,MAAM+W,QAAQlL,MAEhD,OACI5L,EAAAC,EAAAC,cAACqX,GAAA,EAAD,KACIvX,EAAAC,EAAAC,cAAA,KAAG6E,MAAOyR,IACNxW,EAAAC,EAAAC,cAAA,cAAS0G,EAAT,OACCiH,GAEL7N,EAAAC,EAAAC,cAAA,OAAK6E,MAAO6G,IACR5L,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKiL,GAAG,MACHM,EAAY3K,oBAIzB3M,EAAAC,EAAAC,cAAA,mBAzCUJ,aA+CpB0X,eACF,SAAAA,EAAYzX,GAAO,IAAA0X,EAAA,OAAApX,OAAAc,EAAA,EAAAd,CAAAa,KAAAsW,IACfC,EAAApX,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAmX,GAAA3T,KAAA3C,KAAMnB,KAMV4F,aAPmBtF,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAOJ,SAAAiO,IAAA,IAAA+C,EAAAnJ,EAAAyJ,EAAA,OAAAvR,EAAA5F,EAAA+F,KAAA,SAAAmO,GAAA,cAAAA,EAAAjO,KAAAiO,EAAAhO,MAAA,cACL2Q,EAAUW,EAAKzT,MAAM8S,QACrBnJ,EAAS8J,EAAK1X,MAAM4N,OACpByJ,EAASK,EAAK1X,MAAMqX,OAHfjD,EAAAhO,KAAA,EAKcqB,IAAMC,KAAN,kBAA8B,CAAEkG,SAAQyJ,SAAQN,YAL9D,OAMe,MANf3C,EAAAzM,KAMIC,SACX8P,EAAK1X,MAAMwV,cACXkC,EAAKvT,SAAS,CAAE4S,QAAW,MARpB,wBAAA3C,EAAA/N,SAAA2N,MAPI0D,EAmBnB/R,aAAe,SAAC3B,GACZ0T,EAAKvT,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GAAiB0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAlBlD0U,EAAKzT,MAAQ,CACT8S,QAAS,IAHEW,wEAuBV,IACGX,EAAY5V,KAAK8C,MAAjB8S,QAEFlS,EAAwB,KAAZkS,EAElB,OAEI9W,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACIvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKC,GAAI,CAAEmD,KAAM,IAAKC,OAAQ,IAE1BpP,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,UACLO,YAAY,gBACZlC,MAAO+T,EACPvS,SAAUrD,KAAKwE,gBAEvB1F,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKC,GAAI,CAAEmD,KAAM,IAAKC,QAAS,IAC3BpP,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,CAAQ9Q,MAAOoR,GAAgB9H,MAAM,UACjCnJ,SAAUN,EACV0E,QAASpI,KAAKyE,cAFlB,yBA5CC7F,aAwDVsC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BsU,IC3QtCnT,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAGZ9B,GAAe,CACjBwQ,cAAe,GACfzC,eAAgB,GAChB9N,MAAO,MAGL+T,eACF,SAAAA,EAAY3X,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAwW,IACfzW,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAqX,GAAA7T,KAAA3C,KAAMnB,KAIV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GACK0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAPvB9B,EAWnB0W,oBAXmB,eAAArQ,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAWG,SAAAC,EAAMhC,GAAN,IAAAmQ,EAAAxC,EAAAxH,EAAA4I,EAAA,OAAAjN,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBpC,EAAMO,iBAEA4P,GAAiBjT,EAAK+C,MAAMkQ,cAHhBxC,EAIWzQ,EAAKlB,MAA1BmK,EAJUwH,EAIVxH,QAAS4I,EAJCpB,EAIDoB,QAJC7M,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOWqB,IAAMoJ,IAAN,uBAAkC,CAAEsD,gBAAehK,UAAS4I,YAPvE,OASY,MATZ7M,EAAAyB,KASCC,QACX1G,EAAKlB,MAAMgT,WAAW,QAVZ9M,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2R,GAAA3R,EAAA,SAadhF,EAAKiD,SAAS,CAAEP,MAAO,CAAEmB,QAAO,0CAblB,yBAAAmB,EAAAG,SAAAL,EAAA,kBAXH,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAAA1B,EA4BnB4W,kBA5BmB,eAAApH,EAAApQ,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KA4BC,SAAAkH,EAAMjJ,GAAN,IAAAiQ,EAAA8D,EAAA5N,EAAA4I,EAAA,OAAAjN,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAChBpC,EAAMO,iBAEA0P,GAAc/S,EAAK+C,MAAMyN,eAHfqG,EAIa7W,EAAKlB,MAA1BmK,EAJQ4N,EAIR5N,QAAS4I,EAJDgF,EAIChF,QAJD7F,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAOaqB,IAAMoJ,IAAN,uBAAkC,CAAEoD,aAAY9J,UAAS4I,YAPtE,OASc,MATd7F,EAAAvF,KASGC,QACX1G,EAAKlB,MAAMgT,WAAW,QAVd9F,EAAA9G,KAAA,iBAAA8G,EAAA/G,KAAA,GAAA+G,EAAA2K,GAAA3K,EAAA,SAaZhM,EAAKiD,SAAS,CAAEP,MAAO,CAAEmB,QAAO,0CAbpB,yBAAAmI,EAAA7G,SAAA4G,EAAA,kBA5BD,gBAAA6D,GAAA,OAAAJ,EAAA/N,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,IAFHzC,wEA6CV,IAAA0D,EAC4CzD,KAAK8C,MAA9CkQ,EADHvP,EACGuP,cAAezC,EADlB9M,EACkB8M,eAAgB9N,EADlCgB,EACkChB,MAEjCoU,EAAqC,KAAlB7D,GAAwBA,EAAgB,EAC3D8D,EAAoC,KAAnBvG,GAAyBA,EAAiB,EAEjE,OACIzR,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UACX7E,EAAAC,EAAAC,cAAA,WACCyD,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACpB9E,EAAAC,EAAAC,cAAA,QAAO4D,SAAU5C,KAAKyW,qBAClB3X,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,iBAAzD,yBAEJtG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,SACLN,KAAK,gBACLO,YAAY,uCACZlC,MAAO7B,KAAK8C,MAAMkQ,cAClB3P,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,UACI2E,UAAU,mBACVK,SAAU6S,EACV/S,KAAK,UAHT,kBAORhF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAK2W,mBAC7C7X,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,kBAAzD,wCAEJtG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,SACLN,KAAK,iBACLO,YAAY,yDACZlC,MAAO7B,KAAK8C,MAAMyN,eAClBlN,SAAUrD,KAAKwE,iBAK3B1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,eACX7E,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,UACI2E,UAAU,mBACVK,SAAU8S,EACVhT,KAAK,UAHT,0BAvGMlF,aAqHfsC,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BsV,ICjItCrK,GAAQC,KAAiBC,MAEzBhK,GAAa,CACfC,MAAO,MACPC,OAAQ,QAEN8B,GAAa,CACfC,aAAc,OAGZyS,eACF,SAAAA,EAAYlY,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA+W,IACfhX,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAA4X,GAAApU,KAAA3C,KAAMnB,KASV2F,aAAe,SAAA3B,GACX9C,EAAKiD,SAAL7D,OAAAmE,EAAA,EAAAnE,CAAA,GACK0D,EAAMU,OAAOC,KAAOX,EAAMU,OAAO1B,SAZvB9B,EAgBnB0E,aAhBmB,eAAA2B,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAgBJ,SAAAC,EAAMhC,GAAN,IAAAY,EAAAuT,EAAAC,EAAA1N,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXpC,EAAMO,iBADKK,EAG0B1D,EAAK+C,MAAlCkU,EAHGvT,EAGHuT,WAAYC,EAHTxT,EAGSwT,aAHTlS,EAAAE,KAAA,EAKcqB,IAAMkD,IAAN,mBAAAC,OAA6BuN,EAA7B,KAAAvN,OAA2CwN,IALzD,OAKL1N,EALKxE,EAAAyB,KAOXzG,EAAKiD,SAAS,CAAEkU,UAAW3N,EAAWI,OAP3B,wBAAA5E,EAAAG,SAAAL,MAhBI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAEf1B,EAAK+C,MAAQ,CACTkU,WAAY,GACZvU,MAAO,KACPyU,UAAW,GACXD,aAAc,IANHlX,wEA0BV,IAAAsJ,EAAArJ,KAAAmF,EACkDnF,KAAK8C,MAApDkU,EADH7R,EACG6R,WAAYvU,EADf0C,EACe1C,MAAOyU,EADtB/R,EACsB+R,UAAWD,EADjC9R,EACiC8R,aAChCvT,EAA2B,KAAfsT,GAAsC,KAAjBC,EAEvC,OAEInY,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACVlB,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,GACd3D,EAAAC,EAAAC,cAAA,QAAM2E,UAAU,kBAAkBf,SAAU5C,KAAKyE,cAC7C3F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,IAArC,eAEJvF,EAAAC,EAAAC,cAAA,UAAQwE,KAAK,eAAe3B,MAAO7B,KAAK8C,MAAMmU,aAAc5T,SAAUrD,KAAKwE,cACvE1F,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,IAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,SACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,YAAd,cAIR/C,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aAAaE,MAAOQ,GAAYe,QAAQ,cAAzD,kBAEJtG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,aACbE,MAAOxB,GACPyB,KAAK,OACLN,KAAK,aACLO,YAAY,cACZlC,MAAO7B,KAAK8C,MAAMkU,WAClB3T,SAAUrD,KAAKwE,gBAIvB1F,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,cACX7E,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,UACA2E,UAAU,kBACNK,SAAUN,EAEVI,KAAK,UAJT,kBASXoT,GAAaA,EAAUvP,IAAI,SAAC8C,EAAM7C,GAAP,OAAa9I,EAAAC,EAAAC,cAACmY,GAAD,CAAY1M,KAAMA,EAAM7I,IAAKgG,EAAGgK,QAASvI,EAAKxK,MAAM+S,QAAS5I,QAASK,EAAKxK,MAAMmK,QAAS6I,WAAYxI,EAAKxK,MAAMgT,uBAzEjJjT,aAgFnBwY,eACF,SAAAA,EAAYvY,GAAO,IAAA8M,EAAA,OAAAxM,OAAAc,EAAA,EAAAd,CAAAa,KAAAoX,IACfzL,EAAAxM,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAiY,GAAAzU,KAAA3C,KAAMnB,KAIVwY,eALmB,eAAA9H,EAAApQ,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAKF,SAAAkH,EAAOjJ,GAAP,IAAA2P,EAAAZ,EAAA5I,EAAAsO,EAAA7K,EAAA/G,EAAA,OAAAf,EAAA5F,EAAA+F,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAAuN,EACgB7G,EAAK9M,MAA1B+S,EADKY,EACLZ,QAAS5I,EADJwJ,EACIxJ,QADJsO,EAEgB3L,EAAK9M,MAAM4L,KAAhCgC,EAFK6K,EAEL7K,OAAQ/G,EAFH4R,EAEG5R,SAFHqG,EAAA9G,KAAA,EAIYqB,IAAMoJ,IAAN,sBAAiC,CAAEkC,UAAS5I,UAASyD,WAJjE,OAMa,MANbV,EAAAvF,KAMEC,SACX0F,GAAMO,KAAK,CACP5I,KAAM,UACNuG,MAAK,GAAAZ,OAAK/D,EAAL,WACLiH,KAAM,sCAEVhB,EAAK9M,MAAMgT,WAAX,SAZS,wBAAA9F,EAAA7G,SAAA4G,MALE,gBAAA6D,GAAA,OAAAJ,EAAA/N,MAAAxB,KAAAyB,YAAA,GAAAkK,wEAsBV,IACGiG,EAAY5R,KAAKnB,MAAjB+S,QADH2F,EAEuBvX,KAAKnB,MAAM4L,KAA/BtK,EAFHoX,EAEGpX,MAAOuF,EAFV6R,EAEU7R,SAEf,OACI5G,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,YACX7E,EAAAC,EAAAC,cAAA,qBAAamB,GACbrB,EAAAC,EAAAC,cAAA,wBAAgB0G,GAEfkM,GAAW9S,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,kBAAkByE,QAASpI,KAAKqX,gBAAlD,6BAhCHzY,aAsCVmY,MCpHTK,eACF,SAAAA,EAAYvY,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAoX,IACfrX,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAiY,GAAAzU,KAAA3C,KAAMnB,KAOV+M,kBARmBzM,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAQC,SAAAC,IAAA,IAAA0E,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSqB,IAAMkD,IAAN,oBAAAC,OAA8B1J,EAAKlB,MAAM4N,SADlD,OAEU,OADpBlD,EADUxE,EAAAyB,MAEDC,OACX1G,EAAKiD,SAAS,CAAE0C,SAAU6D,EAAWI,KAAKqC,MAAMtG,WAEhD3F,EAAKiD,SAAS,CAAEP,MAAO8G,EAAWI,OALtB,wBAAA5E,EAAAG,SAAAL,MANhB9E,EAAK+C,MAAQ,CACT4C,SAAU,GACVjD,MAAO,MAJI1C,wEAkBf,OACIjB,EAAAC,EAAAC,cAAA,WAAMgB,KAAK8C,MAAM4C,iBApBJ9G,aA2BV4Y,GAvCE,SAAC3Y,GACd,OACIC,EAAAC,EAAAC,cAACiN,EAAA,SAAD,KACInN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACKH,EAAM4Y,SAAS9P,IAAI,SAAC8C,EAAM7C,GAAP,OAAa9I,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,GAAE,SAAAsF,OAAWgB,EAAKmC,KAAOhL,IAAKgG,GAAG9I,EAAAC,EAAAC,cAAC0Y,GAAD,CAAYjL,OAAQhC,EAAKmC,IAAKhL,IAAK6I,EAAKmC,UAEpH9N,EAAAC,EAAAC,cAAA,aCVN2Y,GAAc,CAChBxP,SAAU,QAkBCyP,GAZE,SAAC/Y,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAK6Y,MAAM,UAAX,cAEQ/Y,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,CAAQmD,SAAO,EAAC3K,MAAM,UAAUtJ,MAAO8T,GAAavP,QAAS,kBAAMvJ,EAAMgT,WAAW,UAApF,kBACA/S,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,CAAQmD,SAAO,EAAC3K,MAAM,UAAUtJ,MAAO8T,GAAavP,QAAS,kBAAMvJ,EAAMgT,WAAW,gBAApF,eACA/S,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,CAAQmD,SAAO,EAAC3K,MAAM,UAAUtJ,MAAO8T,GAAavP,QAAS,kBAAMvJ,EAAMgT,WAAW,aAApF,cCHNrP,GAAe,CACnBwG,QAAS,EACTU,UAAW,GACX4C,iBAAkB,GAClBmL,SAAU,GACV7N,YAAa,GACbmO,SAAU,GACVlO,iBAAkB,EAClBmO,kBAAmB,GACnBzH,eAAgB,EAChBqB,SAAS,EACTnP,MAAO,KACPwV,cAAc,EACdC,YAAY,EACZC,SAAS,GAGLC,GAAa,CACjBpD,UAAW,SACX7M,SAAU,OACVG,OAAQ,qBACR+P,QAAS,OACT/T,aAAc,QAEVgU,GAAiB,CACrBtD,UAAW,SACX7M,SAAU,OAEVkQ,QAAS,OACT/T,aAAc,QAGViU,GAAmB,CACvBpQ,SAAU,OACVkQ,QAAS,OACT/T,aAAc,OACd0Q,UAAW,UAGPwD,eACJ,SAAAA,EAAY3Z,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAwY,IACjBzY,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAqZ,GAAA7V,KAAA3C,KAAMnB,KAkBRyK,aAnBmB,eAAAlD,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAmBJ,SAAAC,EAAOmE,GAAP,IAAAO,EAAA,OAAA5E,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYqB,IAAMkD,IAAN,qBAAAC,OAA+BT,IAD3C,OAEa,OADpBO,EADOxE,EAAAyB,MAEEC,OACb1G,EAAKiD,SAAS,CACZgG,QAASO,EAAWI,KAAKiD,IACzBlD,UAAWH,EAAWI,KAAKnG,KAC3B8I,iBAAkB/C,EAAWI,KAAKqK,YAClCyD,SAAUlO,EAAWI,KAAK8N,SAC1B7N,YAAaL,EAAWI,KAAKC,YAC7BmO,SAAUxO,EAAWI,KAAKoO,SAC1BlO,iBAAkBN,EAAWI,KAAKE,iBAClCmO,kBAAmBzO,EAAWI,KAAKqO,kBACnCzH,eAAgBhH,EAAWI,KAAK4G,gBAC/B,WACGxQ,EAAKlB,MAAM4N,QACb1M,EAAK0Y,eAKT1Y,EAAKiD,SAAS,CACZP,MAAO8G,EAAWI,KAAKlH,QArBd,wBAAAsC,EAAAG,SAAAL,MAnBI,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAAA1B,EA6CnB0Y,WAAa,WAAM,IACThB,EAAa1X,EAAK+C,MAAlB2U,SACFjL,EAAgBzM,EAAKlB,MAAM4N,OAEbgL,EAASiB,OAAO,SAAAjO,GAAI,OAAIA,EAAKmC,MAAQJ,IACzC,GAAGoF,SACjB7R,EAAKiD,SAAS,CACZ4O,SAAS,KApDI7R,EA0DnB8R,WAAa,SAAC8G,GACZ,OAAQA,GACN,IAAK,OACH5Y,EAAKiD,SAAS,CACZiV,cAAc,EACdC,YAAY,EACZC,SAAS,IAEXpY,EAAKuJ,aAAavJ,EAAK+C,MAAMkG,SAC7B,MACF,IAAK,aACHjJ,EAAKiD,SAAS,CACZiV,cAAc,EACdC,YAAY,EACZC,SAAS,IAEXpY,EAAKuJ,aAAavJ,EAAK+C,MAAMkG,SAC7B,MACF,IAAK,UACHjJ,EAAKiD,SAAS,CACZiV,cAAc,EACdC,YAAY,EACZC,SAAS,IAEXpY,EAAKuJ,aAAavJ,EAAK+C,MAAMkG,WAhFjCjJ,EAAK+C,MAAL3D,OAAA8D,EAAA,EAAA9D,CAAA,GAAkBqD,IAFDzC,mFAMjB,IAAM6Y,EAAiB5Y,KAAKnB,MAAMsI,MAAMgI,OAAOnG,QACjB,qBAAnB4P,GACT5Y,KAAKsJ,aAAasP,8CAIH7P,GACjB,GAAI/I,KAAKnB,MAAM4N,SAAW1D,EAAU0D,OAAQ,CAC1C,IAAMzD,EAAUhJ,KAAKnB,MAAMsI,MAAMgI,OAAOnG,QACxChJ,KAAKsJ,aAAaN,qCA0Eb,IAAAvF,EAG0CzD,KAAK8C,MAF9CkG,EADDvF,EACCuF,QAASU,EADVjG,EACUiG,UAAW4C,EADrB7I,EACqB6I,iBAAkBmL,EADvChU,EACuCgU,SAAU7N,EADjDnG,EACiDmG,YACtDC,EAFKpG,EAELoG,iBAAkB0G,EAFb9M,EAEa8M,eAAgB9N,EAF7BgB,EAE6BhB,MAClCmP,EAHKnO,EAGLmO,QAASqG,EAHJxU,EAGIwU,aAAcC,EAHlBzU,EAGkByU,WAAYC,EAH9B1U,EAG8B0U,QAE7B1L,EAAWzM,KAAKnB,MAAhB4N,OAER,OACE3N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqO,GAAA,EAAD,KACEvO,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKiL,GAAG,KACLrT,GAAS3D,EAAAC,EAAAC,cAAA,SAAIyD,EAAMmB,SACnBgO,GACC9S,EAAAC,EAAAC,cAAA,OAAK6E,MAAOuU,IACVtZ,EAAAC,EAAAC,cAAC6Z,GAAD,CAAUhH,WAAY7R,KAAK6R,cAG/B/S,EAAAC,EAAAC,cAAA,OAAK6E,MAAO0U,IACT3O,GACC9K,EAAAC,EAAAC,cAAC8Z,GAAD,CACElP,YAAaA,EACbC,iBAAkBA,EAClB0G,eAAgBA,IAGpBzR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+Z,GAAD,CAAUtB,SAAUA,OAI1B3Y,EAAAC,EAAAC,cAAC6L,GAAA,EAAD,CAAKiL,GAAG,KACNhX,EAAAC,EAAAC,cAAA,OAAK6E,MAAOyU,IACVxZ,EAAAC,EAAAC,cAACga,GAAD,CACEtP,UAAWA,EACX4C,iBAAkBA,KAIpB2L,GACEnZ,EAAAC,EAAAC,cAACiN,EAAA,SAAD,KACEnN,EAAAC,EAAAC,cAACia,GAAD,CAAcjQ,QAASA,EAASyD,OAAQA,KAI7CyL,GACCpZ,EAAAC,EAAAC,cAACiN,EAAA,SAAD,KACEnN,EAAAC,EAAAC,cAACka,GAAD,CACElQ,QAASA,EACT4I,QAASA,EACTC,WAAY7R,KAAK6R,aAEnB/S,EAAAC,EAAAC,cAACma,GAAD,CACEvH,QAASA,EACT5I,QAASA,EACT6I,WAAY7R,KAAK6R,cAItBsG,GACCrZ,EAAAC,EAAAC,cAACoa,GAAD,CACEpQ,QAASA,EACT4I,QAASA,EACTC,WAAY7R,KAAK6R,uBAxJTjT,aAkKlBya,GAAY,SAAAxa,GAChB,OACEC,EAAAC,EAAAC,cAACiN,EAAA,SAAD,KACEnN,EAAAC,EAAAC,cAAA,cAASH,EAAM6K,WACf5K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAKH,EAAMyN,oBAOFpL,KAFG,SAAAc,GAAQ,QAAMA,GAEjBd,CAA6BsX,IC7MtCc,eACJ,SAAAA,EAAYza,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAsZ,IACjBvZ,EAAAZ,OAAAmC,EAAA,EAAAnC,CAAAa,KAAAb,OAAAoC,EAAA,EAAApC,CAAAma,GAAA3W,KAAA3C,KAAMnB,KAwBR0a,WAzBmB,eAAAnT,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA5F,EAAA6F,KAyBN,SAAAC,EAAO1E,GAAP,IAAAoJ,EAAAxI,EAAA,OAAA4D,EAAA5F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcqB,IAAMkD,IAAN,gBAAAC,OAA0BtJ,IADxC,OACLoJ,EADKxE,EAAAyB,KAELzF,EAAc,CAClB2E,SAAU6D,EAAWI,KAAKqC,MAAMtG,SAChC+G,OAAQlD,EAAWI,KAAKiD,IACxBhE,UAAWW,EAAWI,KAAKf,WAE7B7I,EAAKiD,SAAS,CAAEjC,gBAPL,wBAAAgE,EAAAG,SAAAL,MAzBM,gBAAAgC,GAAA,OAAAT,EAAA5E,MAAAxB,KAAAyB,YAAA,GAGjB1B,EAAK+C,MAAQ,CACXd,SAAU,KACVjB,YAAa,IALEhB,mFAUC,IAAAsJ,EAAArJ,KAClBA,KAAK8B,SAAW9B,KAAKnB,MAAMK,SAASmB,KAAK0B,mBAAmB,SAAAC,GACtDA,GACFqH,EAAKrG,SAAS,CAAEhB,aAChBqH,EAAKkQ,WAAWvX,EAAS7B,QAEzBkJ,EAAKrG,SAAS,CAAEhB,SAAU,KAAMjB,YAAa,sDAMjDf,KAAK8B,4CAcE,IAAA6J,EAAA3L,KAEC4I,EAAc5I,KAAK8C,MAAM/B,YAAzB6H,UAER,OAEE9J,EAAAC,EAAAC,cAACwa,EAAA,EAAD,KAEE1a,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACya,GAAD,CAAQzX,SAAUhC,KAAK8C,MAAMd,WAE7BlD,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEC,OAAK,EAACC,KAAM1W,EACZ2W,OAAQ,kBACN/a,EAAAC,EAAAC,cAAC8a,GAAD,CAAMlR,UAAWA,OACrB9J,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvB1EU,UuB2EVC,OAAQ,kBACN/a,EAAAC,EAAAC,cAAC+a,EAAD,SAEJjb,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvBhFU,UuBiFVC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACgb,EAAD,SAEJlb,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvBlFiB,iBuBmFjBC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACib,EAAD,SAEJnb,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvBtFkB,kBuBuFlBC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACqQ,GAAD,SAEJvQ,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvB7Fe,euB8FfC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACkb,GAAD,SAEJpb,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KvB/Fe,euBgGfC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACmb,GAAD,CAAa1N,OAAQd,EAAK7I,MAAM/B,YAAY0L,YAEhD3N,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KAAI,kBACJC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACob,GAAD,CAAW3N,OAAQd,EAAK7I,MAAM/B,YAAY0L,YAE9C3N,EAAAC,EAAAC,cAAC0a,EAAA,EAAD,CACEE,KAAI,gBACJC,OAAQ,kBACN/a,EAAAC,EAAAC,cAACkb,GAAD,CAAazN,OAAQd,EAAK7I,MAAM/B,YAAY0L,qBA3FxC7N,aAoGHD,KAAa2a,WCpH5Be,IAASR,OACR/a,EAAAC,EAAAC,cAACsb,EAAgBC,SAAjB,CAA0B1Y,MAAO,IAAI/B,GACpChB,EAAAC,EAAAC,cAACwb,GAAD,OAEDC,SAASC,eAAe","file":"static/js/main.d0c469c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a5beb2d9.png\";","module.exports = __webpack_public_path__ + \"static/media/wormlong2.91f43df8.png\";","export const home = '/';\nexport const signup = '/signup';\nexport const signin = '/signin';\nexport const userProfile = '/userprofile';\nexport const passwordReset = '/passwordreset';\nexport const passwordChange = '/passwordchange';\nexport const createGroup = '/creategroup';\nexport const discussion = '/discussion';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nrequire(`dotenv`).config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) => {\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    };\n\n    doSignInWithEmailAndPassword = (email, password) => {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    };\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => { return this.auth.sendPasswordResetEmail(email) };\n\n    doPasswordUpdate = password => {\n        const user = app.auth().currentUser;\n        return user.updatePassword(password);\n    };\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as Routes from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(Routes.signin);\n                    }\n                }\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        };\n\n        render() {\n            return (\n                <Component {...this.props} />\n            );\n        }\n    }\n\n    return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\nimport { withAuthorization } from './Session';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\n\nconst PasswordResetPage = () => (\n    <div>\n        {/* TODO This totally doesn't work */}\n        <h3>Password Reset</h3>\n        <br />\n        <PasswordResetForm />\n    </div>\n);\n\nconst initialState = {\n    email: '',\n    error: null,\n};\n\nclass PasswordResetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initialState };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form className='form-horizontal'\n                onSubmit={this.onSubmit}>\n                {error && <p>{error.message}</p>}\n                <div className='form-group'>\n                    <input\n                        className='form-input'\n                        style={inputStyle}\n                        name='email'\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type='text'\n                        placeholder='Email Address'\n                    />\n                </div>\n                <div className=\"form-group \">\n                    <div className=\"col-7\"></div>\n                    <button\n                        className=\"btn btn-primary col-1 col-mr-auto\"\n                        disabled={isInvalid}\n                        type=\"submit\">Reset Password</button>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst PasswordResetLink = () => (\n    <p>\n        <Link to={Routes.passwordReset}><button className='btn btn-success'>Forgot Password?</button></Link>\n    </p>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(PasswordResetPage);\n\nconst PasswordResetForm = compose(withRouter, withFirebase)(PasswordResetFormBase);\n\nexport { PasswordResetForm, PasswordResetLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from './SignUp';\nimport { PasswordResetLink } from './PasswordReset'\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst SignInPage = () => (\n    < div >\n        <h3>SignIn</h3>\n        <SignInForm />\n        <SignUpLink />\n    </div >\n);\n\nconst initialState = {\n    email: '',\n    password: '',\n    error: null\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(async () => {\n                this.setState({ ...initialState });\n                this.props.history.push(Routes.home);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n    }\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='email'>Email:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='email'\n                                placeholder='email'\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='password'>Password: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='password'\n                                type='password'\n                                name='password'\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Login</button>\n                    </div>\n                </form>\n                <PasswordResetLink />\n            </div>\n        );\n    };\n};\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\n\nconst SignInLink = () => (\n    <p>\n        Already have an account? <Link to={Routes.signin}><button className='btn btn-success'>Sign In</button></Link>\n    </p>\n);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInLink };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from './Firebase';\nimport { compose } from 'recompose';\nimport axios from 'axios';\n\nimport * as Routes from '../constants/routes';\nimport { SignInLink } from './SignIn';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    redirectTo: null,\n    error: null,\n    emailValid: false,\n    passwordValid: false,\n    usernameValid: false,\n    validMessage: []\n}\n\nconst SignUpPage = () => (\n    <div>\n        <h3>SignUp</h3>\n        <SignUpForm />\n        <SignInLink />\n    </div>\n);\n\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        //Checks if all the input fields are valid\n        //If not the validation messages are shown and no user is sent to sign up\n        if (this.checkValidInput()) {\n            const { username, email, password, firstname, lastname } = this.state;\n\n            const dbResponse = await axios.post(`/api/newuser`, { username, email, firstname, lastname });\n\n            if (dbResponse.status === 200) {\n                return this.props.firebase\n                    .doCreateUserWithEmailAndPassword(email, password)\n                    .then(authUser => {\n                        //The User has been successfully authenticated, clear this component state and redirect them to the home page\n                        this.setState({ ...initialState });\n                        this.props.history.push(Routes.home);\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        this.setState({ error });\n                    });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.emailValid) {\n            invalidInputs++;\n            invalidMessages.push(`Email entered is invalid`);\n        };\n        if (!this.state.usernameValid) {\n            invalidInputs++;\n            invalidMessages.push(`Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes`);\n        };\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `password`:\n                let checkPassword = value.length >= 6;\n                let noSpacesInPassword = value.match(/^\\S*$/);\n                validCheck = checkPassword && noSpacesInPassword ? true : false;\n                this.setState({ passwordValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    render() {\n        const { username, email, passwordOne, passwordTwo, firstname, lastname, error, validMessage } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            firstname === '' ||\n            lastname === '' ||\n            username.length < 3 ||\n            passwordOne < 6;\n\n        return (\n            <div className=\"SignupForm\">\n                <br />\n                {/* If there's an error with signup then display the error */}\n                {error && <p>{error.message}</p>}\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n\n                <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"email\" style={labelStyle}>Email </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"ex. janedoe@email.com\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"password\" style={labelStyle}>Password<br />(Must be at least 6 characters with no spaces) </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"confirmPassword\" style={labelStyle}>Confirm Password </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"Confirm Password\"\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"username\" style={labelStyle}>Username<br />(Must be at least 3 characters, no more than 16, no special characters & no spaces)</label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. JaneDoe14\"\n                                type=\"username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"firstname\" style={labelStyle}>First Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Jane\"\n                                type=\"firstname\"\n                                name=\"firstname\"\n                                value={this.state.firstname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-1 col-ml-auto\">\n                            <label className=\"form-label\" htmlFor=\"lastname\" style={labelStyle}>Last Name: </label>\n                        </div>\n                        <div className=\"col-3 col-mr-auto\">\n                            <input className=\"form-input\"\n                                style={inputStyle}\n                                placeholder=\"ex. Doe\"\n                                type=\"lastname\"\n                                name=\"lastname\"\n                                value={this.state.lastname}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            disabled={isInvalid}\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            type=\"submit\"\n                        >Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    };\n}\n\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\n\n\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={Routes.signup}><button className=\"btn btn-success\">Sign Up</button></Link>\n    </p>\n);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React from 'react';\n\nimport { withFirebase } from './Firebase';\n\nconst textsize = {\n  fontSize:\"25px\"\n}\n\nconst SignOutButton = ({ firebase }) => (\n  <button style={textsize} className=\"btn btn-link\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport {Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, Col, } from 'reactstrap';\n\nconst cardStyle = {\n    border: '1px solid darkgrey',\n    borderRadius: '2px',\n    marginLeft: '5px',\n    marginRight: '5px',\n    height: 'auto',\n    overflow: 'auto'\n}\nconst textsize = {\n    fontSize:\"25px\"\n}\n\n\n\n//Stateful component to allow the grouplist to properly populate\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            grouplist: [],\n            error: null,\n            hasGroups: false\n        };\n    };\n\n    componentDidMount() {\n        if (this.props.grouplist) {\n            this.setState({ grouplist: this.props.grouplist });\n            this.checkIfGroups();\n        };\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.grouplist !== prevProps.grouplist) {\n            this.setState({ grouplist: this.props.grouplist });\n            this.checkIfGroups();\n        };\n    };\n\n    checkIfGroups() {\n        if (this.props.grouplist.length > 0) {\n            this.setState({ hasGroups: true })\n        }\n    }\n\n    //TODO This only displays 3 groups properly!!\n    render() {\n        const { grouplist, hasGroups } = this.state;\n        return (\n            <div>\n                {hasGroups ? (grouplist.map(groupID => <GroupCard key={groupID} groupID={groupID} />)) : (<Testing />)}\n            </div>\n        );\n    };\n};\n\nconst Testing = () => {\n    return (\n        <div>\n            <h1>Welcome to Bookworm!</h1>\n            <p>We are here to help you stay engaged with reading. Create a book club above, invite some friends and dive into a good book!</p>\n        </div>\n    )\n}\n\n//Stateful component to get the groupdata\nclass GroupCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            groupName: '',\n            currentBook: '',\n            currentBenchmark: 0,\n            error: null,\n            bookTitle: '',\n            bookImage: '',\n            author: '',\n            date: ''\n        };\n    };\n\n    componentDidMount() {\n        const groupID = this.props.groupID;\n        this.getGroupData(groupID);\n    };\n\n    //First get the data for all the user is apart of\n    getGroupData = async (groupID) => {\n        const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({\n                groupName: dbResponse.data.name,\n                currentBook: dbResponse.data.currentBook,\n                currentBenchmark: dbResponse.data.currentBenchmark\n            }, () => {\n\n                //Once that is written to state then grab the book they're currently reading and the latest post if they exist\n                axios.all([this.getBookData(), this.getPostData()]).then(axios.spread((bookData, postData) => {\n                    if (bookData.status === 200) {\n                        this.setState({\n                            bookTitle: bookData.data.title,\n                            bookImage: bookData.data.image\n                        });\n                    }\n\n                    if (postData.data.length > 0) {\n                        this.setState({\n                            author: postData.data[0].user,\n                            date: postData.data[0].date\n                        });\n                    };\n                }))\n\n            });\n        };\n    };\n\n    getBookData = () => {\n        return axios.get(`/api/getbookdata/${this.state.currentBook}`)\n    };\n\n    getPostData = () => {\n        return axios.get(`/api/getallgrouppost/${this.props.groupID}`);\n    };\n\n    render() {\n        const { currentBenchmark, bookImage, bookTitle, author, date, groupName } = this.state;\n        const postDate = new Date(this.state.date);\n        const { groupID } = this.props;\n\n        return (\n            <Col sm=\"3\">\n                <Card style={cardStyle}>\n                    <CardBody>\n                        <CardTitle>\n                            <strong>{groupName}</strong>\n                        </CardTitle>\n                        <br />\n                        <CardSubtitle>\n                            <strong>Next Chapter:  </strong>{currentBenchmark}\n                        </CardSubtitle>\n                    </CardBody>\n                    <CardImg top width=\"150px\" src={bookImage} alt={bookTitle} />\n                    <CardBody>\n                        <CardText>\n                            {author && <PostAuthor author={author} />}\n                            <br />\n                            {date && postDate.toLocaleString()}\n                        </CardText>\n                        <Link to={`/group/${groupID}`}>\n                            <button className='btn btn-success'>Go to Club</button>\n                        </Link>\n                    </CardBody>\n                </Card>\n            </Col>\n        );\n    };\n};\n\nclass PostAuthor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        };\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.author}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        return (\n            <Fragment>\n                Last Post By: {this.state.username}\n            </Fragment>\n        );\n    };\n};\n\nconst HomeLink = () => (\n    <Link to={Routes.home}>\n        <button style={textsize} className='btn btn-link'>Home</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Home);\nexport { HomeLink }","import React, { Component } from 'react';\nimport { withAuthorization } from './Session';\nimport { Link } from 'react-router-dom';\nimport * as Routes from '../constants/routes';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\n//Using Swal to display message when group is created\nconst Alert = withReactContent(Swal);\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    groupName: '',\n    groupDescription: '',\n    error: null\n};\n\nconst textsize = {\n    fontSize:\"25px\"\n}\n\n\nclass CreateGroup extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const currentUserID = this.props.userID;\n\n        const { groupName, groupDescription } = this.state;\n\n        const dbResponse = await axios.post('/api/creategroup', { currentUserID, groupName, groupDescription });\n\n        Alert.fire({\n            type: 'success',\n            title: `${groupName} Created!`,\n            text: \"Taking you to the club page. Why don't you pick a book or add a user?\"\n        });\n\n        this.props.history.push(`/group/${dbResponse.data._id}`);\n    };\n\n    render() {\n        const { groupName, groupDescription, error } = this.state;\n\n        const isInvalid = groupName === '' || groupDescription === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupName'>Group Name:</label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='groupName'\n                                placeholder='Group Name'\n                                value={this.state.groupName}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group'>\n                        <div className='col-1 col-ml-auto'>\n                            <label className='form-label' style={labelStyle} htmlFor='groupDescription'>Group Descripton: </label>\n                        </div>\n                        <div className='col-3 col-mr-auto'>\n                            <input className='form-input'\n                                style={inputStyle}\n                                placeholder='Description'\n                                name='groupDescription'\n                                value={this.state.groupDescription}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className='form-group '>\n                        <div className='col-7'></div>\n                        <button\n                            className='btn btn-primary col-1 col-mr-auto'\n                            disabled={isInvalid}\n                            type='submit'>Create New Group</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\nconst CreateGroupLink = () => (\n    <Link to={Routes.createGroup}>\n        <button style={textsize} className='btn btn-link'>Create Group</button>\n    </Link>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(CreateGroup);\n\nexport { CreateGroupLink };","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport '../App.css';\n\nimport * as Routes from '../constants/routes';\nimport SignOutButton from './SignOutButton';\nimport { HomeLink } from './Home';\nimport { CreateGroupLink } from './CreateGroup';\nimport Logo from '../images/logo.png';\n\nimport { Nav, Navbar, NavItem, NavLink } from 'reactstrap';\nimport { Row, Col } from 'reactstrap';\n\n\nconst background = {\n    backgroundColor: '#343a40',\n    width: 'auto',\n    height: '100%',\n    overflow: 'hidden',\n\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n\n\n}\nconst textsize = {\n    fontSize: \"40px\",\n    color: 'white',\n}\n\nconst NavBar = (props) => {\n    return (\n        <div>\n            <header style={background}\n                className=\"navbar\"\n            >\n                <div style={textsize}>\n                    <Row>\n                        <Col>\n                            <Navbar color=\"dark\" dark expand=\"md\">\n                                {props.authUser ? (<section>\n                                    <Nav className=\"ml-auto\" navbar>\n                                        <NavItem >\n                                            <HomeLink />\n                                        </NavItem>\n                                        <NavItem >\n                                            <CreateGroupLink />\n                                        </NavItem>\n                                        <NavItem>\n                                            <SignOutButton />\n                                        </NavItem>\n\n                                    </Nav>\n                                </section>\n                                ) : (\n                                        <section>\n                                            <Nav style={textsize} className=\"ml-auto\" navbar>\n                                                <NavItem>\n                                                    <NavLink href={Routes.signin}>Sign In</NavLink>\n                                                </NavItem>\n                                                <NavItem>\n                                                    <NavLink href={Routes.signup}>Sign Up</NavLink>\n                                                </NavItem>\n                                            </Nav>\n                                        </section>\n                                    )\n                                }\n                            </Navbar>\n                        </Col>\n                    </Row>\n                </div>\n                <div >\n                    <Row>\n                        <Col sm={{ size: '4', offset: 1 }}>\n                            <img src={Logo} alt=\"Logo\" height=\"150px\" width=\"auto\" />\n                        </Col>\n                    </Row>\n                </div>\n            </header>\n        </div >\n\n    )\n}\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withAuthorization } from './Session';\n\nimport { withFirebase } from './Firebase';\nimport * as Routes from '../constants/routes';\n\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initalState = {\n    password: '',\n    passwordConfirm: '',\n    error: null,\n    passwordValid: false,\n    validMessage: []\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...initalState };\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        //Checks if the password they inputted is correct. If it isn't it will not submit\n        if (this.checkValidInput()) {\n            const { password } = this.state;\n\n            this.props.firebase\n                .doPasswordUpdate(password)\n                .then(() => {\n                    this.setState({ ...initalState });\n                    this.props.history.push(Routes.home);\n                })\n                .catch(error => {\n                    this.setState({ error });\n                });\n        }\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n    };\n\n    checkValidInput = () => {\n        let invalidInputs = 0;\n        let invalidMessages = [];\n        if (!this.state.passwordValid) {\n            invalidInputs++;\n            invalidMessages.push(`Password must be at least 6 characters in length and contain no spaces`)\n        };\n        if (invalidInputs > 0) {\n            this.setState({ validMessage: invalidMessages });\n            return false;\n        } else {\n            return true;\n        };\n    }\n\n    //Field name to keep validation consistant, but there's only password here\n    validateForm = (fieldName, value) => {\n        let validCheck;\n        let checkPassword = value.length >= 6;\n        let noSpacesInPassword = value.match(/^\\S*$/);\n        validCheck = checkPassword && noSpacesInPassword ? true : false;\n        this.setState({ passwordValid: validCheck });\n    }\n\n    render() {\n        const { password, passwordConfirm, error, validMessage } = this.state;\n\n        const isInvalid =\n            password !== passwordConfirm || password === '';\n\n        return (\n            <div>\n                <h3>Update Password:</h3>\n                <br />\n                {validMessage && validMessage.map((message, i) => <p key={i}>{message}</p>)}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    {error && <p>{error.message}</p>}\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"password\">New Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"New Password\"\n                        />\n                    </div>\n                    <div className=\"col-1 col-ml-auto\">\n                        <label className=\"form-label\" style={labelStyle} htmlFor=\"passwordConfirm\">Confirm Password:</label>\n                    </div>\n                    <div className='form-group'>\n                        <input className=\"form-input\"\n                            style={inputStyle}\n                            name=\"passwordConfirm\"\n                            value={passwordConfirm}\n                            onChange={this.handleChange}\n                            type=\"password\"\n                            placeholder=\"Confirm New Password\"\n                        />\n                    </div>\n                    <div className=\"form-group \">\n                        <div className=\"col-7\"></div>\n                        <button\n                            className=\"btn btn-primary col-1 col-mr-auto\"\n                            disabled={isInvalid}\n                            type=\"submit\">Update Password</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(compose(withRouter, withFirebase)(PasswordChangeForm));","import React, { Component, Fragment } from 'react';\nimport { withAuthorization } from './Session';\nimport PasswordChangeForm from './PasswordChange';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '25%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialUpdateState = {\n    username: '',\n    email: '',\n    firstname: '',\n    lastname: '',\n    emailValid: false,\n    usernameValid: false,\n    validMessage: ''\n};\n\nconst initialProfileState = {\n    dbUsername: '',\n    dbEmail: '',\n    dbFirstname: '',\n    dbLastname: '',\n    isCurrentUser: false\n};\n\nclass UserProfile extends Component {\n    constructor(props) {\n        super(props)\n\n        //Listed twice as to not change the info on the profile when they begin updating it\n        this.state = { ...initialProfileState };\n    };\n\n    componentDidMount() {\n        const userID = this.props.match.params.userID;\n        this.getUserData(userID);\n        this.checkCurrentUser(userID);\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userID !== prevProps.match.params.userID || this.props.userID !== prevProps.userID) {\n            const userID = this.props.match.params.userID;\n            this.getUserData(userID);\n            this.checkCurrentUser(userID);\n        };\n    };\n\n    checkCurrentUser = (userIDFromURL) => {\n        if (this.props.userID === userIDFromURL) {\n            this.setState({\n                isCurrentUser: true\n            })\n        };\n    };\n\n    updatedProfile = () => {\n        this.getUserData(this.props.match.params.userID);\n    };\n\n    getUserData = async (userID) => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                dbUsername: dbResponse.data.local.username,\n                dbEmail: dbResponse.data.local.email,\n                dbFirstname: dbResponse.data.local.firstname,\n                dbLastname: dbResponse.data.local.lastname,\n            });\n        };\n    };\n\n    render() {\n        const { isCurrentUser, dbUsername, dbEmail, dbFirstname, dbLastname } = this.state;\n\n        return (\n            <div>\n                <h1>{this.state.dbUsername}'s Profile</h1>\n                <div>Username: {dbUsername}</div>\n                <div>Email: {dbEmail}</div>\n                <div>Firstname: {dbFirstname}</div>\n                <div>Lastname: {dbLastname}</div>\n                {isCurrentUser &&\n                    <Fragment>\n                        <UpdateInformationForm userID={this.props.userID} updatedProfile={this.updatedProfile} />\n                        <br />\n                        <PasswordChangeForm />\n                    </Fragment>\n                }\n            </div>\n        );\n    };\n};\n\nclass UpdateInformationForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { ...initialUpdateState };\n    };\n\n    handleSubmit = async (fieldSubmitted) => {\n\n        if (this.checkValidInput(fieldSubmitted)) {\n            const value = this.state[fieldSubmitted];\n            const userID = this.props.userID;\n            const request = fieldSubmitted;\n\n            const dbResponse = await axios.put(`/api/updateuser`, { userID, value, request });\n\n            if (dbResponse.status === 200) {\n                this.props.updatedProfile();\n                this.setState({ ...initialUpdateState });\n            };\n        };\n    };\n\n    handleChange = event => {\n        //Breaking this out due to the input validation\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({ [event.target.name]: event.target.value },\n            () => this.validateForm(name, value));\n\n    };\n\n    validateForm = (fieldName, value) => {\n        let validCheck;\n\n        switch (fieldName) {\n            case `email`:\n                let checkEmail = value.match(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                validCheck = checkEmail ? true : false;\n                this.setState({ emailValid: validCheck });\n                break;\n            case `username`:\n                let checkUsername = value.match(/^([a-z0-9-_])+$/i);\n                let usernameLength = value.length >= 3 && value.length <= 16;\n                validCheck = checkUsername && usernameLength ? true : false;\n                this.setState({ usernameValid: validCheck });\n                break;\n            default:\n                break;\n        };\n    };\n\n    checkValidInput = (fieldSubmitted) => {\n        let invalidInputs = 0;\n\n        if (fieldSubmitted === 'email' && !this.state.emailValid) {\n            this.setState({ validMessage: `Email entered is invalid` });\n            return false\n        };\n\n        if (fieldSubmitted === 'username' && !this.state.usernameValid) {\n            this.setState({ validMessage: `Please ensure username is at least 3 characters, no more than 16 and only contains letters, numbers, underscores and dashes` });\n            return false\n        }\n\n        return true;\n    };\n\n    render() {\n        const { username, email, firstname, lastname, validMessage } = this.state;\n\n        const usernameIsInvalid = username === '';\n        const emailIsInvalid = email === '';\n        const firstnameIsInvalid = firstname === '';\n        const lastnameIsInvalid = lastname === '';\n\n        return (\n            <div className='form-group'>\n                {validMessage && <p>{validMessage}</p>}\n                <br />\n                <label style={labelStyle}>Username:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='username'\n                    placeholder='Update Username'\n                    value={username}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={usernameIsInvalid}\n                    onClick={() => this.handleSubmit('username')}>Update Username</button>\n\n                <br />\n\n                <label style={labelStyle}>Email:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='email'\n                    placeholder='Update Email'\n                    value={email}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={emailIsInvalid}\n                    onClick={() => this.handleSubmit('email')}>Update Email</button>\n\n                <br />\n\n                <label style={labelStyle}>First Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='firstname'\n                    placeholder='Update Firstname'\n                    value={firstname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={firstnameIsInvalid}\n                    onClick={() => this.handleSubmit('firstname')}>Update Firstname</button>\n\n                <br />\n\n                <label style={labelStyle}>Last Name:</label>\n                <input className='form-input'\n                    style={inputStyle}\n                    type='text'\n                    name='lastname'\n                    placeholder='Update Lastname'\n                    value={lastname}\n                    onChange={this.handleChange}></input>\n                <button className='btn btn-primary'\n                    disabled={lastnameIsInvalid}\n                    onClick={() => this.handleSubmit('lastname')}>Update Lastname</button>\n                <br />\n            </div >\n        );\n    };\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UserProfile);","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst initialState = {\n    title: '',\n    image: '',\n    authors: [],\n    error: null\n};\n\nconst progressBarStyle = {\n    position: 'relative',\n    height: '20px',\n    width: '350px',\n    borderRadius: '50px',\n    border: '1px solid #333'\n};\n\nconst fillerStyle = {\n    background: '#1DA598',\n    height: '100%',\n    borderRadius: 'inherit',\n    transition: 'width .2s ease-in'\n};\n\n\n\n\n\nclass CurrentBook extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState }\n    };\n\n    componentDidMount() {\n        const bookID = this.props.currentBook;\n        if (bookID) {\n            this.getCurrentBook(bookID);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.currentBook !== prevProps.currentBook) {\n            const bookID = this.props.currentBook;\n            this.getCurrentBook(bookID)\n        }\n    }\n\n    getCurrentBook = async (bookID) => {\n        const dbResponse = await axios.get(`/api/getbookdata/${bookID}`);\n        if (dbResponse.status === 200) {\n            this.setState({\n                title: dbResponse.data.title,\n                image: dbResponse.data.image,\n                authors: dbResponse.data.authors\n            })\n        } else {\n            this.setState({\n                error: dbResponse.data.error\n            });\n        };\n    }\n\n    render() {\n        const percentageComplete = (this.props.currentBenchmark / this.props.totalBenchmark) * 100;\n        const { currentBenchmark, totalBenchmark } = this.props;\n        const { title, image } = this.state;\n\n        return (\n            <div className='currentBook'>\n                <div ><strong>Current Book </strong>\n                    <br></br>\n                    {title}\n                    <br></br>\n                    <img width=\"auto\" height=\"75%\" src={image} alt={`${title}`} />\n                </div>\n\n                <br></br>\n                <div ><strong> Current Progress </strong>\n                    <br></br>\n                    <ProgressBar percentage={percentageComplete} />\n                    {currentBenchmark} / {totalBenchmark} </div>\n                <br />\n            </div>\n\n        );\n    };\n};\n\nconst ProgressBar = (props) => {\n    return (\n        <div className='progressBar'\n            style={progressBarStyle}>\n            <BarFiller percentage={props.percentage} />\n        </div>\n    );\n};\n\nconst BarFiller = (props) => {\n    return (\n        <div className='filler'\n            style={{\n                background: '#1DA598',\n                height: '100%',\n                borderRadius: 'inherit',\n                transition: 'width .2s ease-in',\n                width: `${props.percentage}%`\n            }} />\n    );\n};\n\nexport default CurrentBook;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BarLoader } from 'react-spinners';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\n//Using Swal to display messages when add book button is hit\nconst Alert = withReactContent(Swal);\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst loaderStyle = `\n    display: block;\n    margin: 0 auto;\n`;\n\nclass AddBookPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookSearch: '',\n            error: null,\n            bookArray: [],\n            loading: false\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { bookSearch } = this.state;\n\n        //This changes the book the user enters into a searchable term by the browser\n        const searchableBook = bookSearch.trim().split(' ').join('+');\n\n        this.setState({ loading: true });\n        const dbResponse = await axios.get(`/api/searchbook/${searchableBook}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({ loading: false });\n            //returns an array of 1 - 20 books and maps over them\n            this.setState({ bookArray: dbResponse.data });\n        } else {\n            this.setState({ loading: false });\n            this.setState({ error: dbResponse.data.error })\n        }\n        //TODO Send this to another component to then map over the \n    }\n\n    render() {\n        const { bookSearch, error, bookArray, loading } = this.state;\n        const isInvalid = bookSearch === '';\n\n        return (\n\n            <div className='bookSearch'>\n                {error && <p>{error}</p>}\n                {loading ?\n                    (<BarLoader\n                        css={loaderStyle}\n                        sizeUnit={\"px\"}\n                        height={4}\n                        width={200}\n                        color={'#36D7B7'}\n                        loading={loading}\n                    />)\n                    :\n                    (<form className='form-horizontal' onSubmit={this.handleSubmit}>\n                        <div className='form-group'>\n                            <div >\n                                <label className='form-label' style={labelStyle} htmlFor='bookSearch'>Book to Search:</label>\n                            </div>\n                            <div >\n                                <input className='form-input'\n                                    style={inputStyle}\n                                    type='text'\n                                    name='bookSearch'\n                                    placeholder='Enter a Book to Search'\n                                    value={this.state.bookSearch}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group \">\n                                <button\n                                    disabled={isInvalid}\n                                    className=\"btn btn-primary col-1 col-mr-auto\"\n                                    type=\"submit\"\n                                >Search Book</button>\n                            </div>\n                        </div>\n                    </form>)}\n                {bookArray && bookArray.map((book, i) => <SingleBook book={book} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleBook extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    //We are going to chain alerts so the user adds a book then immeditley sets it up for use\n    //TODO Possibly redo this to make three modals in order and then three calls to the api\n    getChapterCount = async (title) => {\n        //Send alert to user that they should add the chapters\n        const { value: totalBenchmark } = await Alert.fire({\n            type: 'info',\n            input: 'number',\n            title: `How many chapters in ${title}?`,\n            showCancelButton: true,\n            inputValidator: (value) => {\n                if (!value || value <= 0) {\n                    return 'Please input a number above 0'\n                };\n            }\n        });\n        if (totalBenchmark) {\n            this.addBookToGroup(totalBenchmark)\n        }\n    }\n\n    addBookToGroup = async (totalBenchmark) => {\n        const chosenBook = { ...this.props.book };\n        const { groupID, isAdmin } = this.props;\n\n        const dbResponse = await axios.post(`/api/addbook`, { groupID, isAdmin, chosenBook });\n        if (dbResponse.status === 200) {\n            this.addTotalBenchmark(totalBenchmark, groupID, isAdmin, chosenBook.title);\n        };\n    };\n\n    addTotalBenchmark = async (totalCount, groupID, isAdmin, title) => {\n        const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n        if (dbResponse.status === 200) {\n            //Send alert to user that they should add the first chapter for the group\n            const { value: nextBenchmark } = await Alert.fire({\n                type: 'info',\n                input: 'number',\n                title: `What's the group's first chapter goal?`,\n                showCancelButton: true,\n                inputValidator: (value) => {\n                    if (!value || value <= 0 || value > totalCount) {\n                        return 'Please input a number above 0 and below the total chapters'\n                    };\n                }\n            });\n            this.addCurrentBenchmark(nextBenchmark, groupID, isAdmin, title)\n        };\n    }\n\n    addCurrentBenchmark = async (nextBenchmark, groupID, isAdmin, title) => {\n        const dbResponse = await axios.put(`/api/updatebenchmark`, { nextBenchmark, groupID, isAdmin });\n\n        if (dbResponse.status === 200) {\n            Alert.fire({\n                type: 'success',\n                title: `${title} Added to Group!`,\n                text: 'Sending you back to the club page. Why not make a post about the new book?'\n            });\n\n            this.props.updatePage(`main`);\n        };\n    }\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { title, authors, description, image, pageCount, publishedDate } = this.props.book\n        return (\n            <div className=\"bookCard\">\n                <div>{title}</div>\n                <div>{authors[0]}</div>\n                <div>{description}</div>\n                <img src={image} alt={`${title}`} />\n                <div>{pageCount}</div>\n                <div>{publishedDate}</div>\n                <button className=\"btn btn-primary col-1 col-mr-auto\" onClick={() => this.getChapterCount(title)}>Add Book To Group</button>\n            </div>\n        )\n    }\n}\n\nexport default AddBookPage;","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n// import { Input, TextArea, FormBtn } from \"./Form/index.js\";\n// import TextareaAutosize from 'react-textarea-autosize';\nimport { Button, Form, FormGroup, Label, Input, } from 'reactstrap';\n\n\n\nconst labelStyle = {\n    fontSize: '15px'\n}\n\nconst initialState = {\n    title: '',\n    text: '',\n    error: null\n};\n\nclass AddPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { userID, groupID } = this.props\n\n        const userPost = {\n            title: this.state.title,\n            text: this.state.text\n        }\n\n        const dbResponse = await axios.post(`/api/newpost`, { userID, groupID, userPost });\n\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ ...initialState })\n        };\n        //TODO SHOW MODAL FOR POST ADDED\n    }\n\n    //updated form \n    render() {\n        const { text, title, error } = this.state;\n\n        const isInvalid = text === '' || title === '';\n\n        return (\n            <div>\n                <br />\n                {/* If there's an error with sign in then display the error */}\n                {error && <p>{error.message}</p>}\n\n                <Form style={labelStyle} onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label fontSize='25px' for=\"text\">Post Title</Label>\n                        <Input fontSize='15px' type=\"text\" name=\"title\" id=\"exampleEmail\" placeholder=\"Your Post's Title\" value={this.state.title}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label fontSize='25px' for=\"text\">Post Body</Label>\n                        <Input fontSize='15px' type=\"textarea\" name=\"text\" id=\"exampleText\" placeholder='Write your Post'\n                            value={this.state.text}\n                            onChange={this.handleChange} />\n                    </FormGroup>\n                    <Button className='btn btn-primary'\n\n                        disabled={isInvalid}\n                        type='submit'>Submit Post</Button>\n\n                </Form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AddPost);\n","import React, { Component } from 'react';\nimport Worm from './images/wormlong2.png'\n\n\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\n// import Container from 'react-bootstrap/Container';\nimport AddPost from './AddPost';\nimport { Container, Row, Col } from 'reactstrap';\n\n\n// import { url } from 'inspector';\n\nconst divider = {\n    height: '50px',\n    width: '100%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    backgroundImage: `url(${Worm})`,\n    marginTop: '10px',\n    marginBottom: '-5px'\n}\n\nconst date = {\n    textAlign: 'center',\n    fontSize: '8px',\n    marginBottom: '10px',\n    marginTop: '-1px',\n}\n\nconst buttonPosition = {\n    marginTop: '10px',\n}\n\nconst commentContainer = {\n    borderStyle: 'solid',\n    borderWidth: '2px',\n    backgroundColor: '#e9ecef',\n    marginTop: '10px',\n    marginBottom: '20px',\n}\n\nconst postTitle = {\n    fontSize: '20px',\n    textAlign: 'center',\n}\n\nconst postStyle = {\n    fontSize: '12px',\n}\n\nconst inputStyle = {\n    width: `50%`,\n    height: `40px`\n}\n\nconst initalState = {\n    text: '',\n    error: null,\n    postArray: []\n}\n\nclass ShowAllPosts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initalState }\n    };\n\n    //In both did update and did mount based on if the user goes to another page within the group or loads it\n    componentDidMount() {\n        this.getAllPosts()\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.groupID !== prevProps.groupID) {\n            this.getAllPosts()\n        };\n    };\n\n    getAllPosts = async () => {\n        const groupID = this.props.groupID;\n        const dbResponse = await axios.get(`/api/getallgrouppost/${groupID}`);\n\n        if (dbResponse.status === 200) {\n            this.setState({ postArray: dbResponse.data });\n        };\n    };\n\n    render() {\n        const { postArray } = this.state;\n        const { userID, groupID } = this.props;\n\n        return (\n            <div>\n                <AddPost userID={this.props.userID} groupID={groupID} getAllPosts={this.getAllPosts} />\n                <h1>Posts</h1>\n                {postArray.map(post => <SinglePost key={post._id} post={post} userID={userID} getAllPosts={this.getAllPosts} />)}\n            </div>\n        );\n    };\n};\n\n\nclass SinglePost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null,\n            comment: '',\n        }\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.post.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { title, text, _id, comment } = this.props.post;\n        const { userID } = this.props;\n        const postDate = new Date(this.props.post.date);\n\n        return (\n            <span>\n                <div style={commentContainer}>\n                    <div style={postTitle}>\n                        <Row>\n                            <Col xs=\"12\">\n                                <strong> {title} </strong>\n                            </Col>\n                        </Row>\n                    </div>\n                    <p style={postStyle}>\n                        <strong>{username} : </strong>\n                        {text}\n                    </p>\n                    <div style={date}>\n                        <Row>\n                            <Col xs=\"12\">\n                                {postDate.toLocaleString()}\n                            </Col>\n                        </Row>\n                    </div>\n                    <hr></hr>\n                    {comment.map(singleComment => <ShowComment key={singleComment._id} comment={singleComment} />)}\n                    <AddComment postID={_id} userID={userID} getAllPosts={this.props.getAllPosts} />\n                    <div style={divider}>\n                    </div>\n                </div>\n\n\n            </span>\n        )\n    };\n};\n\nclass ShowComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: ''\n        }\n    };\n\n    componentDidMount = () => {\n        //Taking this out the of lifecycle method to make it an async function\n        this.getUsername();\n    };\n\n    getUsername = async () => {\n        console.log(this.props.comment.user)\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.comment.user}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        };\n    };\n\n    render() {\n        const { username } = this.state;\n        const { text } = this.props.comment;\n        const commentDate = new Date(this.props.comment.date)\n\n        return (\n            <Container>\n                <p style={postStyle}>\n                    <strong>{username} : </strong>\n                    {text}\n                </p>\n                <div style={date}>\n                    <Row>\n                        <Col xs=\"12\">\n                            {commentDate.toLocaleString()}\n                        </Col>\n                    </Row>\n                </div>\n                <hr></hr>\n            </Container>\n        )\n    }\n};\n\nclass AddComment extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comment: ''\n        }\n    };\n\n    handleSubmit = async () => {\n        const comment = this.state.comment;\n        const userID = this.props.userID;\n        const postID = this.props.postID;\n\n        const dbResponse = await axios.post(`/api/newcomment`, { userID, postID, comment });\n        if (dbResponse.status === 200) {\n            this.props.getAllPosts();\n            this.setState({ 'comment': '' })\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { comment } = this.state;\n\n        const isInvalid = comment === '';\n\n        return (\n\n            <div>\n                <Row>\n                    <Col sm={{ size: '5', offset: 2 }}>\n\n                        <input className='form-input'\n                            style={inputStyle}\n                            type='text'\n                            name='comment'\n                            placeholder='Add A Comment'\n                            value={comment}\n                            onChange={this.handleChange}></input>\n                    </Col>\n                    <Col sm={{ size: '2', offset: -3 }}>\n                        <Button style={buttonPosition} color=\"primary\"\n                            disabled={isInvalid}\n                            onClick={this.handleSubmit}>Add Comment</Button>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(ShowAllPosts);","import React, { Component } from 'react';\nimport { withAuthorization } from '../Session';\nimport axios from 'axios';\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n}\nconst labelStyle = {\n    marginBottom: '0px'\n}\n\nconst initialState = {\n    nextBenchmark: '',\n    totalBenchmark: '',\n    error: null\n};\n\nclass UpdateBenchmark extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { ...initialState };\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleCurrentSubmit = async event => {\n        event.preventDefault();\n\n        const nextBenchmark = +this.state.nextBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatebenchmark`, { nextBenchmark, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } })\n        }\n    }\n\n    handleTotalSubmit = async event => {\n        event.preventDefault();\n\n        const totalCount = +this.state.totalBenchmark;\n        const { groupID, isAdmin } = this.props;\n\n        try {\n            const dbResponse = await axios.put(`/api/updatepagesetup`, { totalCount, groupID, isAdmin });\n\n            if (dbResponse.status === 200) {\n                this.props.updatePage('main');\n            }\n        } catch (error) {\n            this.setState({ error: { message: `Moderator needed to update benchmark` } });\n        }\n    }\n\n    render() {\n        const { nextBenchmark, totalBenchmark, error } = this.state;\n\n        const currentIsInvalid = nextBenchmark === '' || nextBenchmark < 0;\n        const totalIsInvalid = totalBenchmark === '' || totalBenchmark < 0;\n\n        return (\n            <div className=\"center\"> \n                <br />\n                {error && <p>{error.message}</p>}\n                <form  onSubmit={this.handleCurrentSubmit}>\n                    <div className='form-group'>\n                        <div >\n                            <label className='form-label' style={labelStyle} htmlFor='nextBenchmark'>Next Goal for Group:</label>\n                        </div>\n                        <div >\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='nextBenchmark'\n                                placeholder='What is the next goal for the group?'\n                                value={this.state.nextBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div ></div>\n                        <button\n                            className='btn btn-primary '\n                            disabled={currentIsInvalid}\n                            type='submit'>Set New Goal</button>\n                    </div>\n                </form>\n\n                <br />\n\n                <form className='form-horizontal' onSubmit={this.handleTotalSubmit}>\n                    <div className='form-group'>\n                        <div >\n                            <label className='form-label' style={labelStyle} htmlFor='totalBenchmark'>Update Total Benchmarks / Chapters:</label>\n                        </div>\n                        <div >\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='number'\n                                name='totalBenchmark'\n                                placeholder='What is the total benchmarks or chapters of this book?'\n                                value={this.state.totalBenchmark}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group '>\n                        <div ></div>\n                        <button\n                            className='btn btn-primary '\n                            disabled={totalIsInvalid}\n                            type='submit'>Update Total</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(UpdateBenchmark);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\n//Using Swal to display messages when submit button is hit\nconst Alert = withReactContent(Swal);\n\nconst inputStyle = {\n    width: '50%',\n    height: '40px'\n};\nconst labelStyle = {\n    marginBottom: '0px'\n};\n\nclass UserSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userSearch: '',\n            error: null,\n            userArray: [],\n            searchSelect: ''\n        }\n    };\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        const { userSearch, searchSelect } = this.state;\n\n        const dbResponse = await axios.get(`/api/usersearch/${userSearch}/${searchSelect}`);\n\n        this.setState({ userArray: dbResponse.data });\n    }\n\n    render() {\n        const { userSearch, error, userArray, searchSelect } = this.state;\n        const isInvalid = userSearch === '' || searchSelect === '';\n\n        return (\n\n            <div className='userSearch'>\n                {error && <p>{error}</p>}\n                <form className='form-horizontal' onSubmit={this.handleSubmit}>\n                    <div className='form-group'>\n                        <div >\n                            <label className='form-label' style={labelStyle}>Search By:</label>\n                        </div>\n                        <select name='searchSelect' value={this.state.searchSelect} onChange={this.handleChange}>\n                            <option value=''> </option>\n                            <option value='email'>Email</option>\n                            <option value='username'>Username</option>\n                        </select>\n                    </div>\n\n                    <div className='form-group'>\n                        <div >\n                            <label className='form-label' style={labelStyle} htmlFor='userSearch'>Search Users:</label>\n                        </div>\n                        <div >\n                            <input className='form-input'\n                                style={inputStyle}\n                                type='text'\n                                name='userSearch'\n                                placeholder='Search User'\n                                value={this.state.userSearch}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <div></div>\n                            <button\n                            className='btn btn-primary'\n                                disabled={isInvalid}\n                                \n                                type='submit'\n                            >Search User</button>\n                        </div>\n                    </div>\n                </form>\n                {userArray && userArray.map((user, i) => <SingleUser user={user} key={i} isAdmin={this.props.isAdmin} groupID={this.props.groupID} updatePage={this.props.updatePage} />)}\n            </div>\n        )\n    }\n}\n\n//This component is going to have state to wrap the book in the submit and send it to the database\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props);\n\n    };\n\n    addUserToGroup = async (event) => {\n        const { isAdmin, groupID } = this.props;\n        const { userID, username } = this.props.user;\n\n        const dbResponse = await axios.put(`/api/addusertogroup`, { isAdmin, groupID, userID });\n\n        if (dbResponse.status === 200) {\n            Alert.fire({\n                type: 'success',\n                title: `${username} Added!`,\n                text: 'Sending you back to the club page'\n            });\n            this.props.updatePage(`main`);\n        };\n    };\n\n    // Taking out the book object to make displaying it easier\n    render() {\n        const { isAdmin } = this.props;\n        const { email, username } = this.props.user;\n\n        return (\n            <div className='userCard'>\n                <div>Email: {email}</div>\n                <div>Username: {username}</div>\n\n                {isAdmin && <button className='btn btn-primary' onClick={this.addUserToGroup}>Add User To Group</button>}\n            </div>\n        )\n    }\n}\n\nexport default UserSearch;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nconst UserList = (props) => {\n    return (\n        <Fragment>\n            <h2 >Group Members</h2>\n            <div>\n                {props.userlist.map((user, i) => <Link to={`/user/${user._id}`} key={i}><SingleUser userID={user._id} key={user._id} /></Link>)}\n            </div>\n            <br />\n        </Fragment>\n    )\n}\n\nclass SingleUser extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            error: null\n        }\n    }\n\n    componentDidMount = async () => {\n        const dbResponse = await axios.get(`/api/getuserbyid/${this.props.userID}`);\n        if (dbResponse.status === 200) {\n            this.setState({ username: dbResponse.data.local.username })\n        } else {\n            this.setState({ error: dbResponse.data })\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.state.username}</div>\n        );\n    };\n};\n\n\n\nexport default UserList;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst ButtonStyle = {\n    fontSize: '17px',\n\n\n\n}\n\nconst GroupNav = (props) => {\n    return (\n        <div align=\"center\" >\n            Admin Panel\n                <hr></hr>\n            <Button outline color=\"primary\" style={ButtonStyle} onClick={() => props.updatePage('main')}>Show Club Page</Button>\n            <Button outline color=\"primary\" style={ButtonStyle} onClick={() => props.updatePage('updateBook')}>Update Book</Button>\n            <Button outline color=\"primary\" style={ButtonStyle} onClick={() => props.updatePage('addUser')}>Add User</Button>\n        </div>\n    )\n}\n\nexport default GroupNav;","import React, { Component, Fragment } from \"react\";\nimport { withAuthorization } from \"../Session\";\nimport axios from \"axios\";\nimport CurrentBook from \"./CurrentBook\";\nimport AddBook from \"./AddBook\";\n\nimport ShowAllPosts from \"./ShowAllPosts\";\nimport UpdateBenchmark from \"./UpdateBenchmark\";\nimport UserSearch from \"../UserSearch\";\nimport UserList from \"./UserList\";\nimport GroupNav from \"./GroupNav\";\nimport { Row, Col } from 'reactstrap';\n\n//Initializes all the data we need for the group as well as what should display on the app\nconst initialState = {\n  groupID: 0,\n  groupName: '',\n  groupDescription: '',\n  userlist: [],\n  currentBook: '',\n  pastBook: [],\n  currentBenchmark: 0,\n  previousBenchmark: [],\n  totalBenchmark: 0,\n  isAdmin: false,\n  error: null,\n  showMainPage: true,\n  updateBook: false,\n  addUser: false\n};\n\nconst adminpanel = {\n  textAlign: 'center',\n  fontSize: \"25px\",\n  border: '1px double #000000',\n  padding: '10px',\n  marginBottom: '50px'\n}\nconst groupinfopanel = {\n  textAlign: 'center',\n  fontSize: \"50px\",\n\n  padding: '10px',\n  marginBottom: '30px'\n}\n\nconst columnbackground = {\n  fontSize: '30px',\n  padding: '10px',\n  marginBottom: '50px',\n  textAlign: 'center',\n}\n\nclass GroupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...initialState };\n  };\n\n  componentDidMount() {\n    const groupIDFromURL = this.props.match.params.groupID;\n    if (typeof groupIDFromURL !== 'undefined') {\n      this.getGroupData(groupIDFromURL);\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userID !== prevProps.userID) {\n      const groupID = this.props.match.params.groupID;\n      this.getGroupData(groupID);\n    };\n  };\n\n  getGroupData = async (groupID) => {\n    const dbResponse = await axios.get(`/api/getgroupdata/${groupID}`);\n    if (dbResponse.status === 200) {\n      this.setState({\n        groupID: dbResponse.data._id,\n        groupName: dbResponse.data.name,\n        groupDescription: dbResponse.data.description,\n        userlist: dbResponse.data.userlist,\n        currentBook: dbResponse.data.currentBook,\n        pastBook: dbResponse.data.pastBook,\n        currentBenchmark: dbResponse.data.currentBenchmark,\n        previousBenchmark: dbResponse.data.previousBenchmark,\n        totalBenchmark: dbResponse.data.totalBenchmark,\n      }, () => { //If statement incase the componentDidMount happens first\n        if (this.props.userID) {\n          this.checkAdmin();\n        };\n      });\n    } else {\n      //TODO Check Error message\n      this.setState({\n        error: dbResponse.data.error\n      });\n    };\n  };\n\n  checkAdmin = () => {\n    const { userlist } = this.state;\n    const currentUserID = this.props.userID;\n\n    const currentUser = userlist.filter(user => user._id === currentUserID);\n    if (currentUser[0].isAdmin) {\n      this.setState({\n        isAdmin: true\n      });\n    };\n  };\n\n  //Toggles the page based on what the user chooses to see\n  updatePage = (showPage) => {\n    switch (showPage) {\n      case 'main':\n        this.setState({\n          showMainPage: true,\n          updateBook: false,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'updateBook':\n        this.setState({\n          showMainPage: false,\n          updateBook: true,\n          addUser: false\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      case 'addUser':\n        this.setState({\n          showMainPage: false,\n          updateBook: false,\n          addUser: true\n        });\n        this.getGroupData(this.state.groupID);\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { groupID, groupName, groupDescription, userlist, currentBook,\n      currentBenchmark, totalBenchmark, error,\n      isAdmin, showMainPage, updateBook, addUser } = this.state;\n\n    const { userID } = this.props;\n\n    return (\n      <div >\n        <Row>\n          <Col xs=\"6\">\n            {error && <p>{error.message}</p>}\n            {isAdmin &&\n              <div style={adminpanel}>\n                <GroupNav updatePage={this.updatePage} />\n              </div>\n            }\n            <div style={columnbackground}>\n              {currentBook && (\n                <CurrentBook\n                  currentBook={currentBook}\n                  currentBenchmark={currentBenchmark}\n                  totalBenchmark={totalBenchmark}\n                />\n              )}\n              <div>\n                <UserList userlist={userlist} />\n              </div>\n            </div>\n          </Col>\n          <Col xs=\"6\">\n            <div style={groupinfopanel}>\n              <GroupInfo\n                groupName={groupName}\n                groupDescription={groupDescription}\n              />\n            </div>\n            {\n              showMainPage && (\n                <Fragment>\n                  <ShowAllPosts groupID={groupID} userID={userID} />\n                </Fragment>\n              )\n            }\n            {updateBook && (\n              <Fragment>\n                <AddBook\n                  groupID={groupID}\n                  isAdmin={isAdmin}\n                  updatePage={this.updatePage}\n                />\n                <UpdateBenchmark\n                  isAdmin={isAdmin}\n                  groupID={groupID}\n                  updatePage={this.updatePage}\n                />\n              </Fragment>\n            )}\n            {addUser && (\n              <UserSearch\n                groupID={groupID}\n                isAdmin={isAdmin}\n                updatePage={this.updatePage}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst GroupInfo = props => {\n  return (\n    <Fragment>\n      <strong>{props.groupName}</strong>\n      <br></br>\n      <h3>{props.groupDescription}</h3>\n    </Fragment>\n  );\n};\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(GroupPage);\n","import React, { Component } from 'react';\nimport * as Routes from './constants/routes';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { withFirebase } from './componenets/Firebase';\nimport axios from 'axios';\n\n//background\n\n\n// Components\nimport SignUpPage from './componenets/SignUp';\nimport SignInPage from './componenets/SignIn';\nimport NavBar from './componenets/NavBar';\n// import Example from './componenets/SideNav'\nimport Home from './componenets/Home';\nimport PasswordReset from './componenets/PasswordReset';\nimport PasswordChange from './componenets/PasswordChange';\nimport UserProfile from './componenets/UserProfile'\nimport CreateGroup from './componenets/CreateGroup';\nimport GroupPage from './componenets/GroupPage';\n\n//adding a comment hoping it will help merge on github\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null,\n      currentUser: {}\n    }\n\n  };\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.setState({ authUser });\n        this.isSignedIn(authUser.email);\n      } else {\n        this.setState({ authUser: null, currentUser: {} });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  };\n\n  isSignedIn = async (email) => {\n    const dbResponse = await axios.get(`/api/getuser/${email}`);\n    const currentUser = {\n      username: dbResponse.data.local.username,\n      userID: dbResponse.data._id,\n      grouplist: dbResponse.data.grouplist\n    }\n    this.setState({ currentUser })\n  }\n\n\n  render() {\n\n    const { grouplist } = this.state.currentUser;\n\n    return (\n\n      <BrowserRouter>\n\n        <div>\n\n          <NavBar authUser={this.state.authUser} />\n          {/* Routes to different components */}\n          <Route\n            exact path={Routes.home}\n            render={() =>\n              <Home grouplist={grouplist} />} />\n          <Route\n            path={Routes.signin}\n            render={() =>\n              <SignInPage />}\n          />\n          <Route\n            path={Routes.signup}\n            render={() =>\n              <SignUpPage />}\n          />\n          <Route\n            path={Routes.passwordReset}\n            render={() =>\n              <PasswordReset />}\n          />\n          <Route\n            path={Routes.passwordChange}\n            render={() =>\n              <PasswordChange />}\n          />\n          <Route\n            path={Routes.userProfile}\n            render={() =>\n              <UserProfile />}\n          />\n          <Route\n            path={Routes.createGroup}\n            render={() =>\n              <CreateGroup userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/group/:groupID`}\n            render={() =>\n              <GroupPage userID={this.state.currentUser.userID} />}\n          />\n          <Route\n            path={`/user/:userID`}\n            render={() =>\n              <UserProfile userID={this.state.currentUser.userID} />}\n          />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default withFirebase(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Firebase, { FirebaseContext } from './componenets/Firebase';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( \n\t<FirebaseContext.Provider value={new Firebase()}>\n\t\t<App />\n\t</FirebaseContext.Provider>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}